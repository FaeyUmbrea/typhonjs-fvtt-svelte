{"version":3,"file":"index.js","sources":["../../src/gsap/gsap.js","../../src/gsap/GsapPosition.js"],"sourcesContent":["import * as easingFuncs from 'svelte/easing';\r\n\r\nlet gsap = void 0;\r\n\r\n// Plugins\r\nlet CustomBounce = void 0;\r\nlet CustomEase = void 0;\r\nlet CustomWiggle = void 0;\r\nlet Draggable = void 0;    // eslint-disable-line no-shadow\r\nlet DrawSVGPlugin = void 0;\r\nlet EasePack = void 0;\r\nlet GSDevTools = void 0;\r\nlet InertiaPlugin = void 0;\r\nlet MorphSVGPlugin = void 0;\r\nlet MotionPathHelper = void 0;\r\nlet MotionPathPlugin = void 0;\r\nlet Physics2DPlugin = void 0;\r\nlet PhysicsPropsPlugin = void 0;\r\nlet PixiPlugin = void 0;\r\nlet ScrambleTextPlugin = void 0;\r\nlet ScrollToPlugin = void 0;\r\nlet ScrollTrigger = void 0;\r\nlet SplitText = void 0;\r\nlet TextPlugin = void 0;\r\n\r\nconst modulePath = foundry.utils.getRoute('/scripts/greensock/esm/all.js');\r\n\r\ntry\r\n{\r\n   const module = await import(modulePath);\r\n   gsap = module.gsap;\r\n\r\n   CustomBounce = module.CustomBounce;\r\n   CustomEase = module.CustomEase;\r\n   CustomWiggle = module.CustomWiggle;\r\n   Draggable = module.Draggable;\r\n   DrawSVGPlugin = module.DrawSVGPlugin;\r\n   EasePack = module.EasePack;\r\n   GSDevTools = module.GSDevTools;\r\n   InertiaPlugin = module.InertiaPlugin;\r\n   MorphSVGPlugin = module.MorphSVGPlugin;\r\n   MotionPathHelper = module.MotionPathHelper;\r\n   MotionPathPlugin = module.MotionPathPlugin;\r\n   Physics2DPlugin = module.Physics2DPlugin;\r\n   PhysicsPropsPlugin = module.PhysicsPropsPlugin;\r\n   PixiPlugin = module.PixiPlugin;\r\n   ScrambleTextPlugin = module.ScrambleTextPlugin;\r\n   ScrollToPlugin = module.ScrollToPlugin;\r\n   ScrollTrigger = module.ScrollTrigger;\r\n   SplitText = module.SplitText;\r\n   TextPlugin = module.TextPlugin;\r\n\r\n   // Load Svelte easing functions by prepending them w/ `svelte-`; `linear` becomes `svelte-linear`, etc.\r\n   for (const prop of Object.keys(easingFuncs))\r\n   {\r\n      const name = `svelte-${prop}`;\r\n      gsap.registerEase(name, easingFuncs[prop]);\r\n   }\r\n}\r\ncatch (error)\r\n{\r\n   console.error(`TyphonJS Runtime Library error; Could not load GSAP module from: '${modulePath}'`);\r\n   console.error(error);\r\n}\r\n\r\nexport {\r\n   gsap,\r\n\r\n   // Plugins\r\n   CustomBounce,\r\n   CustomEase,\r\n   CustomWiggle,\r\n   Draggable,\r\n   DrawSVGPlugin,\r\n   EasePack,\r\n   GSDevTools,\r\n   InertiaPlugin,\r\n   MorphSVGPlugin,\r\n   MotionPathHelper,\r\n   MotionPathPlugin,\r\n   Physics2DPlugin,\r\n   PhysicsPropsPlugin,\r\n   PixiPlugin,\r\n   ScrambleTextPlugin,\r\n   ScrollToPlugin,\r\n   ScrollTrigger,\r\n   SplitText,\r\n   TextPlugin\r\n};\r\n","import { gsap }         from './gsap.js';\r\n// import { gsap }         from './gsapNPM.js';\r\n\r\nimport { Position }     from '@typhonjs-fvtt/svelte/application';\r\nimport { isIterable }   from '@typhonjs-fvtt/svelte/util';\r\n\r\n/**\r\n * Stores the entry types that potentially use the generated initial position data.\r\n *\r\n * @type {Set<string>}\r\n */\r\nconst s_TYPES_POSITION = new Set(['from', 'fromTo', 'set', 'to']);\r\n\r\n/**\r\n * Stores the Position properties in order to create the minimum update data object when animating.\r\n *\r\n * @type {Set<string>}\r\n */\r\nconst s_POSITION_KEYS = new Set([\r\n // Main keys\r\n 'left', 'top', 'maxWidth', 'maxHeight', 'minWidth', 'minHeight', 'width', 'height',\r\n  'rotateX', 'rotateY', 'rotateZ', 'scale', 'translateX', 'translateY', 'translateZ', 'zIndex',\r\n\r\n // Aliases\r\n 'rotation'\r\n]);\r\n\r\n/**\r\n * Stores the seen Position properties when building the minimum update data object when animating.\r\n *\r\n * @type {Set<string>}\r\n */\r\nconst s_POSITION_PROPS = new Set();\r\n\r\n/**\r\n * Defines the options for {@link Position.get}.\r\n *\r\n * @type {{keys: Set<string>, numeric: boolean}}\r\n */\r\nconst s_POSITION_GET_OPTIONS = {\r\n   keys: s_POSITION_PROPS,\r\n   numeric: true\r\n};\r\n\r\n/**\r\n * Provides a data driven ways to connect a {@link Position} instance with a GSAP timeline and tweens.\r\n *\r\n * {@link GsapPosition.timeline} supports the following types: 'add', 'addLabel', 'addPause', 'call', 'from',\r\n * 'fromTo', 'set', 'to'.\r\n */\r\nexport class GsapPosition\r\n{\r\n   /**\r\n    * @param {Position} tjsPosition - Position instance.\r\n    *\r\n    * @param {object}   vars - GSAP vars object for `from`.\r\n    *\r\n    * @param {GsapPositionOptions} [options] - Options for filtering and initial data population.\r\n    *\r\n    * @returns {object} GSAP tween\r\n    */\r\n   static from(tjsPosition, vars, options)\r\n   {\r\n      if (!(tjsPosition instanceof Position))\r\n      {\r\n         throw new TypeError(`GsapPosition.from error: 'tjsPosition' is not an instance of Position.`);\r\n      }\r\n\r\n      if (typeof vars !== 'object')\r\n      {\r\n         throw new TypeError(`GsapPosition.from error: 'vars' is not an object.`);\r\n      }\r\n\r\n      if (options !== void 0 && typeof options !== 'object')\r\n      {\r\n         throw new TypeError(`GsapPosition.from error: 'options' is not an object.`);\r\n      }\r\n\r\n      const filter = options?.filter;\r\n      const initialProps = options?.initialProps;\r\n\r\n      // Only retrieve the Position keys that are in vars.\r\n      s_POSITION_PROPS.clear();\r\n\r\n      // Add any initial props if defined.\r\n      if (isIterable(initialProps))\r\n      {\r\n         for (const prop of initialProps) { s_POSITION_PROPS.add(prop); }\r\n      }\r\n\r\n      for (const prop in vars)\r\n      {\r\n         if (s_POSITION_KEYS.has(prop)) { s_POSITION_PROPS.add(prop); }\r\n      }\r\n\r\n      const positionData = tjsPosition.get({ immediateElementUpdate: true }, s_POSITION_GET_OPTIONS);\r\n\r\n      const existingOnUpdate = vars.onUpdate;\r\n\r\n      if (typeof filter === 'function')\r\n      {\r\n         // Preserve invoking existing onUpdate function.\r\n         if (typeof existingOnUpdate === 'function')\r\n         {\r\n            vars.onUpdate = () =>\r\n            {\r\n               tjsPosition.set(filter(positionData));\r\n               existingOnUpdate();\r\n            };\r\n         }\r\n         else\r\n         {\r\n            vars.onUpdate = () => tjsPosition.set(filter(positionData));\r\n         }\r\n      }\r\n      else\r\n      {\r\n         // Preserve invoking existing onUpdate function.\r\n         if (typeof existingOnUpdate === 'function')\r\n         {\r\n            vars.onUpdate = () =>\r\n            {\r\n               tjsPosition.set(positionData);\r\n               existingOnUpdate();\r\n            };\r\n         }\r\n         else\r\n         {\r\n            vars.onUpdate = () => tjsPosition.set(positionData);\r\n         }\r\n      }\r\n\r\n      return gsap.from(positionData, vars);\r\n   }\r\n\r\n   /**\r\n    * @param {Position} tjsPosition - Position instance.\r\n    *\r\n    * @param {object}   fromVars - GSAP fromVars object for `fromTo`\r\n    *\r\n    * @param {object}   toVars - GSAP toVars object for `fromTo`.\r\n    *\r\n    * @param {GsapPositionOptions} [options] - Options for filtering and initial data population.\r\n    *\r\n    * @returns {object} GSAP tween\r\n    */\r\n   static fromTo(tjsPosition, fromVars, toVars, options)\r\n   {\r\n      if (!(tjsPosition instanceof Position))\r\n      {\r\n         throw new TypeError(`GsapPosition.fromTo error: 'tjsPosition' is not an instance of Position.`);\r\n      }\r\n\r\n      if (typeof fromVars !== 'object')\r\n      {\r\n         throw new TypeError(`GsapPosition.fromTo error: 'fromVars' is not an object.`);\r\n      }\r\n\r\n      if (typeof toVars !== 'object')\r\n      {\r\n         throw new TypeError(`GsapPosition.fromTo error: 'fromVars' is not an object.`);\r\n      }\r\n\r\n      if (options !== void 0 && typeof options !== 'object')\r\n      {\r\n         throw new TypeError(`GsapPosition.from error: 'options' is not an object.`);\r\n      }\r\n\r\n      const filter = options?.filter;\r\n      const initialProps = options?.initialProps;\r\n\r\n      // Only retrieve the Position keys that are in vars.\r\n      s_POSITION_PROPS.clear();\r\n\r\n      // Add any initial props if defined.\r\n      if (isIterable(initialProps))\r\n      {\r\n         for (const prop of initialProps) { s_POSITION_PROPS.add(prop); }\r\n      }\r\n\r\n      for (const prop in fromVars)\r\n      {\r\n         if (s_POSITION_KEYS.has(prop)) { s_POSITION_PROPS.add(prop); }\r\n      }\r\n\r\n      for (const prop in toVars)\r\n      {\r\n         if (s_POSITION_KEYS.has(prop)) { s_POSITION_PROPS.add(prop); }\r\n      }\r\n\r\n      const positionData = tjsPosition.get({ immediateElementUpdate: true }, s_POSITION_GET_OPTIONS);\r\n\r\n      const existingOnUpdate = toVars.onUpdate;\r\n\r\n      if (typeof filter === 'function')\r\n      {\r\n         // Preserve invoking existing onUpdate function.\r\n         if (typeof existingOnUpdate === 'function')\r\n         {\r\n            toVars.onUpdate = () =>\r\n            {\r\n               tjsPosition.set(filter(positionData));\r\n               existingOnUpdate();\r\n            };\r\n         }\r\n         else\r\n         {\r\n            toVars.onUpdate = () => tjsPosition.set(filter(positionData));\r\n         }\r\n      }\r\n      else\r\n      {\r\n         // Preserve invoking existing onUpdate function.\r\n         if (typeof existingOnUpdate === 'function')\r\n         {\r\n            toVars.onUpdate = () =>\r\n            {\r\n               tjsPosition.set(positionData);\r\n               existingOnUpdate();\r\n            };\r\n         }\r\n         else\r\n         {\r\n            toVars.onUpdate = () => tjsPosition.set(positionData);\r\n         }\r\n      }\r\n\r\n      return gsap.fromTo(positionData, fromVars, toVars);\r\n   }\r\n\r\n   /**\r\n    * @param {Position} tjsPosition - Position instance.\r\n    *\r\n    * @param {string}   key - Property of position to manipulate.\r\n    *\r\n    * @param {object}   vars - GSAP vars object for `quickTo`.\r\n    *\r\n    * @param {GsapPositionOptions} [options] - Options for filtering and initial data population.\r\n    *\r\n    * @returns {Function}  GSAP quickTo function.\r\n    */\r\n   static quickTo(tjsPosition, key, vars, options)\r\n   {\r\n      if (!(tjsPosition instanceof Position))\r\n      {\r\n         throw new TypeError(`GsapPosition.quickTo error: 'tjsPosition' is not an instance of Position.`);\r\n      }\r\n\r\n      if (typeof vars !== 'object')\r\n      {\r\n         throw new TypeError(`GsapPosition.quickTo error: 'vars' is not an object.`);\r\n      }\r\n\r\n      if (options !== void 0 && typeof options !== 'object')\r\n      {\r\n         throw new TypeError(`GsapPosition.from error: 'options' is not an object.`);\r\n      }\r\n\r\n      const filter = options?.filter;\r\n      const initialProps = options?.initialProps;\r\n\r\n      // Only retrieve the Position keys that are in vars.\r\n      s_POSITION_PROPS.clear();\r\n\r\n      // Add any initial props if defined.\r\n      if (isIterable(initialProps))\r\n      {\r\n         for (const prop of initialProps) { s_POSITION_PROPS.add(prop); }\r\n      }\r\n\r\n      for (const prop in vars)\r\n      {\r\n         if (s_POSITION_KEYS.has(prop)) { s_POSITION_PROPS.add(prop); }\r\n      }\r\n\r\n      const positionData = tjsPosition.get({ immediateElementUpdate: true }, s_POSITION_GET_OPTIONS);\r\n\r\n      const existingOnUpdate = vars.onUpdate;\r\n\r\n      if (typeof filter === 'function')\r\n      {\r\n         // Preserve invoking existing onUpdate function.\r\n         if (typeof existingOnUpdate === 'function')\r\n         {\r\n            vars.onUpdate = () =>\r\n            {\r\n               tjsPosition.set(filter(positionData));\r\n               existingOnUpdate();\r\n            };\r\n         }\r\n         else\r\n         {\r\n            vars.onUpdate = () => tjsPosition.set(filter(positionData));\r\n         }\r\n      }\r\n      else\r\n      {\r\n         // Preserve invoking existing onUpdate function.\r\n         if (typeof existingOnUpdate === 'function')\r\n         {\r\n            vars.onUpdate = () =>\r\n            {\r\n               tjsPosition.set(positionData);\r\n               existingOnUpdate();\r\n            };\r\n         }\r\n         else\r\n         {\r\n            vars.onUpdate = () => tjsPosition.set(positionData);\r\n         }\r\n      }\r\n\r\n\r\n      return gsap.quickTo(positionData, key, vars);\r\n   }\r\n\r\n   /**\r\n    * @param {Position}          tjsPosition - Position instance.\r\n    *\r\n    * @param {object|object[]}   arg1 - Either an object defining timelineOptions or an array of gsapData entries.\r\n    *\r\n    * @param {object[]|Function} [arg2] - When arg1 is defined as an object; arg2 defines an array of gsapData entries.\r\n    *\r\n    * @param {GsapPositionOptions} [arg3] - Options for filtering and initial data population.\r\n    *\r\n    * @returns {object} GSAP timeline\r\n    */\r\n   static timeline(tjsPosition, arg1, arg2, arg3)\r\n   {\r\n      if (!(tjsPosition instanceof Position))\r\n      {\r\n         throw new TypeError(`GsapPosition.timeline error: 'tjsPosition' is not an instance of Position.`);\r\n      }\r\n\r\n      // Load the variable arguments from arg1 / arg2.\r\n      // If arg1 is an object then take it as the timelineOptions.\r\n      const timelineOptions = typeof arg1 === 'object' ? arg1 : {};\r\n\r\n      // If arg1 is an array then take it as `gsapData` otherwise select arg2.\r\n      const gsapData = Array.isArray(arg1) ? arg1 : arg2;\r\n\r\n      /** @type {GsapPositionOptions} */\r\n      const options = gsapData === arg1 ? arg2 : arg3;\r\n\r\n      if (typeof timelineOptions !== 'object')\r\n      {\r\n         throw new TypeError(`GsapPosition.timeline error: 'timelineOptions' is not an object.`);\r\n      }\r\n\r\n      if (!Array.isArray(gsapData))\r\n      {\r\n         throw new TypeError(`GsapPosition.timeline error: 'gsapData' is not an array.`);\r\n      }\r\n\r\n      if (options !== void 0 && typeof options !== 'object')\r\n      {\r\n         throw new TypeError(`GsapPosition.from error: 'options' is not an object.`);\r\n      }\r\n\r\n      const filter = options?.filter;\r\n      const initialProps = options?.initialProps;\r\n\r\n      let hasPositionUpdates = false;\r\n\r\n      let positionData;\r\n      s_POSITION_PROPS.clear();\r\n\r\n      // Add any initial props if defined.\r\n      if (isIterable(initialProps))\r\n      {\r\n         for (const prop of initialProps) { s_POSITION_PROPS.add(prop); }\r\n      }\r\n\r\n      // Validate gsapData.\r\n      for (let cntr = 0; cntr < gsapData.length; cntr++)\r\n      {\r\n         const entry = gsapData[cntr];\r\n\r\n         if (typeof entry !== 'object')\r\n         {\r\n            throw new TypeError(`GsapPosition.timeline error: 'gsapData[${cntr}]' is not an object.`);\r\n         }\r\n\r\n         // Determine if any of the entries has a position related type and targets position by explicit value or by\r\n         // default. Build up only the position properties that are being modified by all entries. This allows maximum\r\n         // composability when animating multiple non-overlapping properties in a timeline.\r\n         if (s_TYPES_POSITION.has(entry.type) && (entry.target === void 0 || entry.target === 'position'))\r\n         {\r\n            // Initialize positionData.\r\n            if (!hasPositionUpdates) { positionData = { immediateElementUpdate: true }; }\r\n\r\n            hasPositionUpdates = true;\r\n\r\n            TimelineImpl.validatePositionProp(entry, cntr);\r\n         }\r\n      }\r\n\r\n      if (hasPositionUpdates)\r\n      {\r\n         tjsPosition.get(positionData, s_POSITION_GET_OPTIONS);\r\n\r\n         const existingOnUpdate = timelineOptions.onUpdate;\r\n\r\n         if (typeof filter === 'function')\r\n         {\r\n            // Preserve invoking existing onUpdate function.\r\n            if (typeof existingOnUpdate === 'function')\r\n            {\r\n               timelineOptions.onUpdate = () =>\r\n               {\r\n                  tjsPosition.set(filter(positionData));\r\n                  existingOnUpdate();\r\n               };\r\n            }\r\n            else\r\n            {\r\n               timelineOptions.onUpdate = () => tjsPosition.set(filter(positionData));\r\n            }\r\n         }\r\n         else\r\n         {\r\n            // Preserve invoking existing onUpdate function.\r\n            if (typeof existingOnUpdate === 'function')\r\n            {\r\n               timelineOptions.onUpdate = () =>\r\n               {\r\n                  tjsPosition.set(positionData);\r\n                  existingOnUpdate();\r\n               };\r\n            }\r\n            else\r\n            {\r\n               timelineOptions.onUpdate = () => tjsPosition.set(positionData);\r\n            }\r\n         }\r\n      }\r\n\r\n      const timeline = gsap.timeline(timelineOptions);\r\n\r\n      for (let cntr = 0; cntr < gsapData.length; cntr++)\r\n      {\r\n         const entry = gsapData[cntr];\r\n\r\n         const type = entry.type;\r\n\r\n         switch (type)\r\n         {\r\n            case 'add':\r\n               TimelineImpl.add(timeline, entry, cntr);\r\n               break;\r\n\r\n            case 'addLabel':\r\n               TimelineImpl.addLabel(timeline, entry, cntr);\r\n               break;\r\n\r\n            case 'addPause':\r\n               TimelineImpl.addPause(timeline, entry, cntr);\r\n               break;\r\n\r\n            case 'call':\r\n               TimelineImpl.call(timeline, entry, cntr);\r\n               break;\r\n\r\n            case 'from':\r\n               timeline.from(s_GET_TARGET(tjsPosition, positionData, entry, cntr), entry.vars, entry.position);\r\n               break;\r\n\r\n            case 'fromTo':\r\n               timeline.fromTo(s_GET_TARGET(tjsPosition, positionData, entry, cntr), entry.fromVars, entry.toVars,\r\n                entry.position);\r\n               break;\r\n\r\n            case 'set':\r\n               timeline.set(s_GET_TARGET(tjsPosition, positionData, entry, cntr), entry.vars, entry.position);\r\n               break;\r\n\r\n            case 'to':\r\n               timeline.to(s_GET_TARGET(tjsPosition, positionData, entry, cntr), entry.vars, entry.position);\r\n               break;\r\n\r\n            default:\r\n               throw new Error(`GsapPosition.timeline error: gsapData[${cntr}] unknown 'type' - '${type}'`);\r\n         }\r\n      }\r\n\r\n      return timeline;\r\n   }\r\n\r\n   /**\r\n    * @param {Position} tjsPosition - Position instance.\r\n    *\r\n    * @param {object}   vars - GSAP vars object for `to`.\r\n    *\r\n    * @param {GsapPositionOptions} [options] - Options for filtering and initial data population.\r\n    *\r\n    * @returns {object} GSAP tween\r\n    */\r\n   static to(tjsPosition, vars, options)\r\n   {\r\n      if (!(tjsPosition instanceof Position))\r\n      {\r\n         throw new TypeError(`GsapPosition.to error: 'tjsPosition' is not an instance of Position.`);\r\n      }\r\n\r\n      if (typeof vars !== 'object')\r\n      {\r\n         throw new TypeError(`GsapPosition.to error: 'vars' is not an object.`);\r\n      }\r\n\r\n      if (options !== void 0 && typeof options !== 'object')\r\n      {\r\n         throw new TypeError(`GsapPosition.from error: 'options' is not an object.`);\r\n      }\r\n\r\n      const filter = options?.filter;\r\n      const initialProps = options?.initialProps;\r\n\r\n      // Only retrieve the Position keys that are in vars.\r\n      s_POSITION_PROPS.clear();\r\n\r\n      // Add any initial props if defined.\r\n      if (isIterable(initialProps))\r\n      {\r\n         for (const prop of initialProps) { s_POSITION_PROPS.add(prop); }\r\n      }\r\n\r\n      for (const prop in vars)\r\n      {\r\n         if (s_POSITION_KEYS.has(prop)) { s_POSITION_PROPS.add(prop); }\r\n      }\r\n\r\n      const positionData = tjsPosition.get({ immediateElementUpdate: true }, s_POSITION_GET_OPTIONS);\r\n\r\n      const existingOnUpdate = vars.onUpdate;\r\n\r\n      if (typeof filter === 'function')\r\n      {\r\n         // Preserve invoking existing onUpdate function.\r\n         if (typeof existingOnUpdate === 'function')\r\n         {\r\n            vars.onUpdate = () =>\r\n            {\r\n               tjsPosition.set(filter(positionData));\r\n               existingOnUpdate();\r\n            };\r\n         }\r\n         else\r\n         {\r\n            vars.onUpdate = () => tjsPosition.set(filter(positionData));\r\n         }\r\n      }\r\n      else\r\n      {\r\n         // Preserve invoking existing onUpdate function.\r\n         if (typeof existingOnUpdate === 'function')\r\n         {\r\n            vars.onUpdate = () =>\r\n            {\r\n               tjsPosition.set(positionData);\r\n               existingOnUpdate();\r\n            };\r\n         }\r\n         else\r\n         {\r\n            vars.onUpdate = () => tjsPosition.set(positionData);\r\n         }\r\n      }\r\n\r\n      return gsap.to(positionData, vars);\r\n   }\r\n}\r\n\r\n/**\r\n * Internal helper class for timeline implementation. Performs error checking before applying any timeline actions.\r\n */\r\nclass TimelineImpl\r\n{\r\n   static add(timeline, entry, cntr)\r\n   {\r\n      const child = entry.child;\r\n      const position = entry.position;\r\n\r\n      if (child === void 0)\r\n      {\r\n         throw new TypeError(`GsapPosition.timeline error: gsapData[${cntr}] missing 'child' property.`);\r\n      }\r\n\r\n      if (position !== void 0 && !Number.isFinite(position) && typeof position !== 'string')\r\n      {\r\n         throw new TypeError(`GsapPosition.timeline error: gsapData[${cntr}] 'position' is not a number or string.`);\r\n      }\r\n\r\n      timeline.add(child, position);\r\n   }\r\n\r\n   static addLabel(timeline, entry, cntr)\r\n   {\r\n      const label = entry.label;\r\n      const position = entry.position;\r\n\r\n      if (typeof label !== 'string')\r\n      {\r\n         throw new TypeError(`GsapPosition.timeline error: gsapData[${cntr}] 'label' is not a string.`);\r\n      }\r\n\r\n      if (position !== void 0 && !Number.isFinite(position) && typeof position !== 'string')\r\n      {\r\n         throw new TypeError(`GsapPosition.timeline error: gsapData[${cntr}] 'position' is not a number or string.`);\r\n      }\r\n\r\n      timeline.addLabel(label, position);\r\n   }\r\n\r\n   static addPause(timeline, entry, cntr)\r\n   {\r\n      const position = entry.position;\r\n      const callback = entry.callback;\r\n      const params = entry.params;\r\n\r\n      if (position !== void 0 && !Number.isFinite(position) && typeof position !== 'string')\r\n      {\r\n         throw new TypeError(`GsapPosition.timeline error: gsapData[${cntr}] 'position' is not a number or string.`);\r\n      }\r\n\r\n      if (callback !== void 0 && typeof callback !== 'function')\r\n      {\r\n         throw new TypeError(`GsapPosition.timeline error: gsapData[${cntr}] 'callback' is not a function.`);\r\n      }\r\n\r\n      if (params !== void 0 && !Array.isArray(params))\r\n      {\r\n         throw new TypeError(`GsapPosition.timeline error: gsapData[${cntr}] 'params' is not an array.`);\r\n      }\r\n\r\n      timeline.addPause(position, callback, params);\r\n   }\r\n\r\n   static call(timeline, entry, cntr)\r\n   {\r\n      const callback = entry.callback;\r\n      const params = entry.params;\r\n      const position = entry.position;\r\n\r\n      if (typeof callback !== 'function')\r\n      {\r\n         throw new TypeError(`GsapPosition.timeline error: gsapData[${cntr}] 'callback' is not a function.`);\r\n      }\r\n\r\n      if (params !== void 0 && !Array.isArray(params))\r\n      {\r\n         throw new TypeError(`GsapPosition.timeline error: gsapData[${cntr}] 'params' is not an array.`);\r\n      }\r\n\r\n      if (position !== void 0 && !Number.isFinite(position) && typeof position !== 'string')\r\n      {\r\n         throw new TypeError(`GsapPosition.timeline error: gsapData[${cntr}] 'position' is not a number or string.`);\r\n      }\r\n\r\n      timeline.call(callback, params, position);\r\n   }\r\n\r\n   /**\r\n    * Validates data for Position related properties: 'from', 'fromTo', 'set', 'to'. Also adds all properties found\r\n    * in Gsap entry data to s_POSITION_PROPS, so that just the properties being animated are added to animated\r\n    * `positionData`.\r\n    *\r\n    * @param {object}   entry - Gsap entry data.\r\n    *\r\n    * @param {number}   cntr - Current index.\r\n    */\r\n   static validatePositionProp(entry, cntr)\r\n   {\r\n      const position = entry.position;\r\n\r\n      if (position !== void 0 && !Number.isFinite(position) && typeof position !== 'string')\r\n      {\r\n         throw new TypeError(\r\n          `GsapPosition.timeline error: gsapData[${cntr}] 'position' is not a number or string.`);\r\n      }\r\n\r\n      switch (entry.type)\r\n      {\r\n         case 'from':\r\n         case 'to':\r\n         case 'set':\r\n         {\r\n            const vars = entry.vars;\r\n\r\n            if (typeof vars !== 'object')\r\n            {\r\n               throw new TypeError(`GsapPosition.timeline error: gsapData[${cntr}] missing 'vars' object.`);\r\n            }\r\n\r\n            // Only retrieve the Position keys that are in vars.\r\n            for (const prop in vars)\r\n            {\r\n               if (s_POSITION_KEYS.has(prop)) { s_POSITION_PROPS.add(prop); }\r\n            }\r\n\r\n            break;\r\n         }\r\n\r\n         case 'fromTo':\r\n         {\r\n            const fromVars = entry.fromVars;\r\n            const toVars = entry.toVars;\r\n\r\n            if (typeof fromVars !== 'object')\r\n            {\r\n               throw new TypeError(`GsapPosition.timeline error: gsapData[${cntr}] missing 'fromVars' object.`);\r\n            }\r\n\r\n            if (typeof toVars !== 'object')\r\n            {\r\n               throw new TypeError(`GsapPosition.timeline error: gsapData[${cntr}] missing 'toVars' object.`);\r\n            }\r\n\r\n            // Only retrieve the Position keys that are in fromVars / toVars.\r\n            for (const prop in fromVars)\r\n            {\r\n               if (s_POSITION_KEYS.has(prop)) { s_POSITION_PROPS.add(prop); }\r\n            }\r\n\r\n            for (const prop in toVars)\r\n            {\r\n               if (s_POSITION_KEYS.has(prop)) { s_POSITION_PROPS.add(prop); }\r\n            }\r\n\r\n            break;\r\n         }\r\n      }\r\n   }\r\n}\r\n\r\n/**\r\n * Gets the target from GSAP data entry.\r\n *\r\n * @param {Position}             tjsPosition - Position instance.\r\n *\r\n * @param {PositionDataExtended} positionData - Position data.\r\n *\r\n * @param {object}               entry - Gsap data entry.\r\n *\r\n * @param {number}               cntr - Current GSAP data entry index.\r\n *\r\n * @returns {PositionDataExtended|HTMLElement} The target object or HTMLElement.\r\n */\r\nfunction s_GET_TARGET(tjsPosition, positionData, entry, cntr)\r\n{\r\n   const target = entry.target ?? 'position';\r\n\r\n   switch (target)\r\n   {\r\n      case 'position':\r\n         return positionData;\r\n      case 'element':\r\n         return tjsPosition.element;\r\n      default:\r\n         throw new Error(`GsapPosition.timeline error: 'gsapData[${cntr}]' unknown 'target' - '${target}'.`);\r\n   }\r\n}\r\n\r\n/**\r\n * @typedef {object} GsapPositionOptions\r\n *\r\n * @property {Function} [filter] - An optional filter function to adjust position data in `onUpdate` callbacks. This is\r\n *                                 useful if you need to transform any data from GSAP / plugins into data Position can\r\n *                                 utilize.\r\n *\r\n * @property {Iterable<string>} [initialProps] - Provides an iterable of property keys to assign to initial position\r\n *                                               data. This is useful when you are using GSAP plugins that manipulate\r\n *                                               data automatically; Ex. MotionPathPlugin\r\n */\r\n"],"names":[],"mappings":"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"}