{"version":3,"file":"index.js","sources":["../../../../typhonjs-svelte/lib/src/store/functions.js","../../../../typhonjs-svelte/lib/src/action/applyStyles.js","../../../../typhonjs-svelte/lib/src/action/resizeObserver.js","../../src/action/applyPosition.js","../../src/action/draggable.js"],"sourcesContent":["/**\r\n * Provides a basic test for a given variable to test if it has the shape of a readable store by having a `subscribe`\r\n * function.\r\n *\r\n * Note: functions are also objects, so test that the variable might be a function w/ a `subscribe` function.\r\n *\r\n * @param {*}  store - variable to test that might be a store.\r\n *\r\n * @returns {boolean} Whether the variable tested has the shape of a store.\r\n */\r\nexport function isReadableStore(store)\r\n{\r\n   if (store === null || store === void 0) { return false; }\r\n\r\n   switch (typeof store)\r\n   {\r\n      case 'function':\r\n      case 'object':\r\n         return typeof store.subscribe === 'function';\r\n   }\r\n\r\n   return false;\r\n}\r\n\r\n/**\r\n * Provides a basic test for a given variable to test if it has the shape of a writable store by having a `subscribe`\r\n * and `set` functions.\r\n *\r\n * Note: functions are also objects, so test that the variable might be a function w/ `subscribe` & `set` functions.\r\n *\r\n * @param {*}  store - variable to test that might be a store.\r\n *\r\n * @returns {boolean} Whether the variable tested has the shape of a store.\r\n */\r\nexport function isWritableStore(store)\r\n{\r\n   if (store === null || store === void 0) { return false; }\r\n\r\n   switch (typeof store)\r\n   {\r\n      case 'function':\r\n      case 'object':\r\n         return typeof store.subscribe === 'function' && typeof store.set === 'function';\r\n   }\r\n\r\n   return false;\r\n}\r\n\r\n/**\r\n * Subscribes to the given store with the update function provided and ignores the first automatic\r\n * update. All future updates are dispatched to the update function.\r\n *\r\n * @param {import('svelte/store').Readable | import('svelte/store').Writable} store -\r\n *  Store to subscribe to...\r\n *\r\n * @param {import('svelte/store').Updater} update - function to receive future updates.\r\n *\r\n * @returns {import('svelte/store').Unsubscriber} Store unsubscribe function.\r\n */\r\nexport function subscribeIgnoreFirst(store, update)\r\n{\r\n   let firedFirst = false;\r\n\r\n   return store.subscribe((value) => {\r\n      if (!firedFirst)\r\n      {\r\n         firedFirst = true;\r\n      }\r\n      else {\r\n         update(value);\r\n      }\r\n   })\r\n}\r\n\r\n/**\r\n * Subscribes to the given store with two update functions provided. The first function is invoked on the initial\r\n * subscription. All future updates are dispatched to the update function.\r\n *\r\n * @param {import('svelte/store').Readable | import('svelte/store').Writable} store -\r\n *  Store to subscribe to...\r\n *\r\n * @param {import('svelte/store').Updater} first - Function to receive first update.\r\n *\r\n * @param {import('svelte/store').Updater} update - Function to receive future updates.\r\n *\r\n * @returns {import('svelte/store').Unsubscriber} Store unsubscribe function.\r\n */\r\nexport function subscribeFirstRest(store, first, update)\r\n{\r\n   let firedFirst = false;\r\n\r\n   return store.subscribe((value) => {\r\n      if (!firedFirst)\r\n      {\r\n         firedFirst = true;\r\n         first(value);\r\n      }\r\n      else {\r\n         update(value);\r\n      }\r\n   })\r\n}\r\n","/**\r\n * Provides an action to apply style properties provided as an object.\r\n *\r\n * @param {HTMLElement} node - Target element\r\n *\r\n * @param {object}      properties - Key / value object of properties to set.\r\n *\r\n * @returns {Function} Update function.\r\n */\r\nexport function applyStyles(node, properties)\r\n{\r\n   /** Sets properties on node. */\r\n   function setProperties()\r\n   {\r\n      if (typeof properties !== 'object') { return; }\r\n\r\n      for (const prop of Object.keys(properties))\r\n      {\r\n         node.style.setProperty(`${prop}`, properties[prop]);\r\n      }\r\n   }\r\n\r\n   setProperties();\r\n\r\n   return {\r\n      update(newProperties)\r\n      {\r\n         properties = newProperties;\r\n         setProperties();\r\n      }\r\n   };\r\n}\r\n","import { isWritableStore } from '@typhonjs-svelte/lib/store';\r\n\r\n/**\r\n * Provides an action to monitor the given HTMLElement node with `ResizeObserver` posting width / height changes\r\n * to the target in various ways depending on the shape of the target. The target can be one of the following and the\r\n * precedence order is listed from top to bottom:\r\n *\r\n *\r\n * - has a `setDimension` function as attribute; width / height are passed as parameters.\r\n * - has `setWidth` & `setHeight` functions as attribute; width & height are passed as parameters.\r\n * - has\r\n * - target is an object; width and height attributes are directly set on target.\r\n * - target is a function; the function is invoked with width & height parameters.\r\n *\r\n * Note: Svelte currently uses an archaic IFrame based workaround to monitor offset / client width & height changes.\r\n * A more up to date way to do this is with ResizeObserver. To track when Svelte receives ResizeObserver support\r\n * monitor this issue: {@link https://github.com/sveltejs/svelte/issues/4233}\r\n *\r\n * Can-I-Use: {@link https://caniuse.com/resizeobserver}\r\n *\r\n * @param {HTMLElement}       node - The node associated with the action.\r\n *\r\n * @param {object | Function} target - An object to update with observed width & height changes.\r\n *\r\n * @returns {{update: Function, destroy: Function}} The action lifecycle methods.\r\n * @see {@link https://github.com/sveltejs/svelte/issues/4233}\r\n */\r\nexport function resizeObserver(node, target)\r\n{\r\n   let updateType = setUpdateType(target);\r\n\r\n   const observer = new ResizeObserver((entries) =>\r\n   {\r\n      for (const entry of entries)\r\n      {\r\n         // An early out verifying that the entry matches the node.\r\n         if (node !== entry?.target) { return; }\r\n\r\n         switch (updateType)\r\n         {\r\n            case s_UPDATE_TYPES.attribute:\r\n               target.width = entry.contentRect.width;\r\n               target.height = entry.contentRect.height;\r\n               break;\r\n\r\n            case s_UPDATE_TYPES.function:\r\n               target(entry.contentRect.width, entry.contentRect.height);\r\n               break;\r\n\r\n            case s_UPDATE_TYPES.setDimension:\r\n               target.setDimension?.(entry.contentRect.width, entry.contentRect.height);\r\n               break;\r\n\r\n            case s_UPDATE_TYPES.setWidthAndHeight:\r\n               target.setWidth?.(entry.contentRect.width);\r\n               target.setHeight?.(entry.contentRect.height);\r\n               break;\r\n\r\n            case s_UPDATE_TYPES.storeObject:\r\n               target.width.set(entry.contentRect.width);\r\n               target.height.set(entry.contentRect.height);\r\n               break;\r\n         }\r\n      }\r\n   });\r\n\r\n   observer.observe(node);\r\n\r\n   return {\r\n      update: (newTarget) =>\r\n      {\r\n         updateType = setUpdateType(newTarget);\r\n         target = newTarget;\r\n      },\r\n\r\n      destroy: () =>\r\n      {\r\n         observer.unobserve(node);\r\n         observer.disconnect();\r\n      }\r\n   };\r\n}\r\n\r\n/**\r\n * Defines the various shape / update type of the given target.\r\n *\r\n * @type {Record<string, number>}\r\n */\r\nconst s_UPDATE_TYPES = {\r\n   none: 0,\r\n   attribute: 1,\r\n   function: 2,\r\n   setDimension: 3,\r\n   setWidthAndHeight: 4,\r\n   storeObject: 5\r\n};\r\n\r\n/**\r\n * Determines the shape of the target instance regarding valid update mechanisms to set width & height changes.\r\n *\r\n * @param {*}  target - The target instance.\r\n *\r\n * @returns {number} Update type value.\r\n */\r\nfunction setUpdateType(target)\r\n{\r\n   if (target?.setDimension instanceof Function) { return s_UPDATE_TYPES.setDimension; }\r\n\r\n   if (target?.setWidth instanceof Function && target?.setHeight instanceof Function)\r\n   {\r\n      return s_UPDATE_TYPES.setWidthAndHeight;\r\n   }\r\n\r\n   const targetType = typeof target;\r\n\r\n   // Does the target have width & height writable store attributes?\r\n   if ((targetType === 'object' || targetType === 'function') && isWritableStore(target.width) &&\r\n    isWritableStore(target.height))\r\n   {\r\n      return s_UPDATE_TYPES.storeObject;\r\n   }\r\n\r\n   if (targetType === 'object') { return s_UPDATE_TYPES.attribute; }\r\n\r\n   if (targetType === 'function') { return s_UPDATE_TYPES.function; }\r\n\r\n   return s_UPDATE_TYPES.none;\r\n}\r\n","import { hasSetter } from '@typhonjs-fvtt/svelte/util';\r\n\r\n/**\r\n * Provides an action to apply a Position instance to a HTMLElement and invoke `position.parent`\r\n *\r\n * @param {HTMLElement}       node - The node associated with the action.\r\n *\r\n * @param {Position}          position - A position instance.\r\n *\r\n * @returns {{update: Function, destroy: Function}} The action lifecycle methods.\r\n */\r\nexport function applyPosition(node, position)\r\n{\r\n   if (hasSetter(position, 'parent')) { position.parent = node; }\r\n\r\n   return {\r\n      update: (newPosition) =>\r\n      {\r\n         if (hasSetter(position)) { position.parent = void 0; }\r\n\r\n         position = newPosition;\r\n\r\n         if (hasSetter(position, 'parent')) { position.parent = node; }\r\n      },\r\n\r\n      destroy: () => { if (hasSetter(position, 'parent')) { position.parent = void 0; } }\r\n   };\r\n}\r\n","/**\r\n * Provides an action to enable pointer dragging of an HTMLElement and invoke `position.set` on a given {@link Position}\r\n * instance provided. When the attached boolean store state changes the draggable action is enabled or disabled.\r\n *\r\n * @param {HTMLElement}       node - The node associated with the action.\r\n *\r\n * @param {object}            params - Required parameters.\r\n *\r\n * @param {Position}          params.position - A position instance.\r\n *\r\n * @param {boolean}           [params.active=true] - A boolean value; attached to a readable store.\r\n *\r\n * @param {Writable<boolean>} [params.storeDragging] - A writable store that tracks \"dragging\" state.\r\n *\r\n * @returns {{update: Function, destroy: Function}} The action lifecycle methods.\r\n */\r\nexport function draggable(node, { position, active = true, storeDragging = void 0 })\r\n{\r\n   /**\r\n    * Duplicate the app / Positionable starting position to track differences.\r\n    *\r\n    * @type {object}\r\n    */\r\n   let initialPosition = null;\r\n\r\n   /**\r\n    * Stores the initial X / Y on drag down.\r\n    *\r\n    * @type {object}\r\n    */\r\n   let initialDragPoint = {};\r\n\r\n   /**\r\n    * Stores the current dragging state and gates the move pointer as the dragging store is not\r\n    * set until the first pointer move.\r\n    *\r\n    * @type {boolean}\r\n    */\r\n   let dragging = false;\r\n\r\n   /**\r\n    * Remember event handlers associated with this action so they may be later unregistered.\r\n    *\r\n    * @type {object}\r\n    */\r\n   const handlers = {\r\n      dragDown: ['pointerdown', (e) => onDragPointerDown(e), false],\r\n      dragMove: ['pointermove', (e) => onDragPointerMove(e), false],\r\n      dragUp: ['pointerup', (e) => onDragPointerUp(e), false]\r\n   };\r\n\r\n   /**\r\n    * Activates listeners.\r\n    */\r\n   function activateListeners()\r\n   {\r\n      // Drag handlers\r\n      node.addEventListener(...handlers.dragDown);\r\n      node.classList.add('draggable');\r\n   }\r\n\r\n   /**\r\n    * Removes listeners.\r\n    */\r\n   function removeListeners()\r\n   {\r\n      if (typeof storeDragging?.set === 'function') { storeDragging.set(false); }\r\n\r\n      // Drag handlers\r\n      node.removeEventListener(...handlers.dragDown);\r\n      node.removeEventListener(...handlers.dragMove);\r\n      node.removeEventListener(...handlers.dragUp);\r\n      node.classList.remove('draggable');\r\n   }\r\n\r\n   if (active)\r\n   {\r\n      activateListeners();\r\n   }\r\n\r\n   /**\r\n    * Handle the initial pointer down that activates dragging behavior for the positionable.\r\n    *\r\n    * @param {PointerEvent} event - The pointer down event.\r\n    */\r\n   function onDragPointerDown(event)\r\n   {\r\n      event.preventDefault();\r\n\r\n      dragging = false;\r\n\r\n      // Record initial position.\r\n      initialPosition = position.get();\r\n      initialDragPoint = { x: event.clientX, y: event.clientY };\r\n\r\n      // Add move and pointer up handlers.\r\n      node.addEventListener(...handlers.dragMove);\r\n      node.addEventListener(...handlers.dragUp);\r\n\r\n      node.setPointerCapture(event.pointerId);\r\n   }\r\n\r\n   /**\r\n    * Move the positionable.\r\n    *\r\n    * @param {PointerEvent} event - The pointer move event.\r\n    */\r\n   function onDragPointerMove(event)\r\n   {\r\n      event.preventDefault();\r\n\r\n      // Only set store dragging on first move event.\r\n      if (!dragging && typeof storeDragging?.set === 'function')\r\n      {\r\n         dragging = true;\r\n         storeDragging.set(true);\r\n      }\r\n\r\n      // Update application position.\r\n      position.set({\r\n         left: initialPosition.left + (event.clientX - initialDragPoint.x),\r\n         top: initialPosition.top + (event.clientY - initialDragPoint.y)\r\n      });\r\n   }\r\n\r\n   /**\r\n    * Finish dragging and set the final position and removing listeners.\r\n    *\r\n    * @param {PointerEvent} event - The pointer up event.\r\n    */\r\n   function onDragPointerUp(event)\r\n   {\r\n      event.preventDefault();\r\n\r\n      dragging = false;\r\n      if (typeof storeDragging?.set === 'function') { storeDragging.set(false); }\r\n\r\n      node.removeEventListener(...handlers.dragMove);\r\n      node.removeEventListener(...handlers.dragUp);\r\n   }\r\n\r\n   return {\r\n      // The default of active being true won't automatically add listeners twice.\r\n      update: ({ active = true }) =>  // eslint-disable-line no-shadow\r\n      {\r\n         if (active) { activateListeners(); }\r\n         else { removeListeners(); }\r\n      },\r\n\r\n      destroy: () => removeListeners()\r\n   };\r\n}\r\n"],"names":["isWritableStore","store","subscribe","set"],"mappings":"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"}