{"version":3,"file":"index.js","sources":["../../node_modules/@typhonjs-svelte/lib/node_modules/@typhonjs-utils/dynamic-reducer/src/common/DynReducerUtils.ts","../../node_modules/@typhonjs-svelte/lib/node_modules/@typhonjs-utils/dynamic-reducer/src/common/adapter/AdapterDerived.ts","../../node_modules/@typhonjs-svelte/lib/node_modules/@typhonjs-utils/dynamic-reducer/src/common/adapter/AdapterFilters.ts","../../node_modules/@typhonjs-svelte/lib/node_modules/@typhonjs-utils/dynamic-reducer/src/common/adapter/AdapterIndexer.ts","../../node_modules/@typhonjs-svelte/lib/node_modules/@typhonjs-utils/dynamic-reducer/src/common/adapter/AdapterSort.ts","../../node_modules/@typhonjs-svelte/lib/node_modules/@typhonjs-utils/dynamic-reducer/src/common/api/IndexerAPI.ts","../../node_modules/@typhonjs-svelte/lib/node_modules/@typhonjs-utils/dynamic-reducer/src/common/api/DerivedAPI.ts","../../node_modules/@typhonjs-svelte/lib/node_modules/@typhonjs-utils/dynamic-reducer/src/array/Indexer.ts","../../node_modules/@typhonjs-svelte/lib/node_modules/@typhonjs-utils/dynamic-reducer/src/array/derived/DerivedArrayReducer.ts","../../node_modules/@typhonjs-svelte/lib/node_modules/@typhonjs-utils/dynamic-reducer/src/array/DynArrayReducer.ts","../../node_modules/@typhonjs-svelte/lib/node_modules/@typhonjs-utils/dynamic-reducer/src/map/Indexer.ts","../../node_modules/@typhonjs-svelte/lib/node_modules/@typhonjs-utils/dynamic-reducer/src/map/derived/DerivedMapReducer.ts","../../node_modules/@typhonjs-svelte/lib/node_modules/@typhonjs-utils/dynamic-reducer/src/map/DynMapReducer.ts","../../node_modules/@typhonjs-svelte/lib/src/store/functions.js","../../node_modules/@typhonjs-svelte/lib/node_modules/svelte-persistent-store/dist/chunk.PXUOYU5R.mjs","../../node_modules/@typhonjs-svelte/lib/node_modules/svelte-persistent-store/dist/chunk.W4AS553O.mjs","../../node_modules/@typhonjs-svelte/lib/src/store/LocalStorage.js","../../node_modules/@typhonjs-svelte/lib/node_modules/svelte-persistent-store/dist/chunk.QQJ3JZYS.mjs","../../node_modules/@typhonjs-svelte/lib/src/store/SessionStorage.js","../../node_modules/@typhonjs-svelte/lib/node_modules/svelte-writable-derived/index.mjs","../../src/store/document/EmbeddedStoreManager.js","../../src/store/document/TJSDocument.js","../../src/store/document/TJSDocumentCollection.js","../../src/store/gameState.js","../../src/store/TJSGameSettings.js"],"sourcesContent":["import type { IDerivedReducerCtor } from '../types/index.js';\r\n\r\nexport class DynReducerUtils\r\n{\r\n   /**\r\n    * Checks for array equality between two arrays of numbers.\r\n    *\r\n    * @param a - Array A\r\n    *\r\n    * @param b - Array B\r\n    *\r\n    * @returns Arrays are equal.\r\n    */\r\n   static arrayEquals(a: any[], b: any[]): boolean\r\n   {\r\n      if (a === b) { return true; }\r\n      if (a === null || b === null) { return false; }\r\n\r\n      /* c8 ignore next */\r\n      if (a.length !== b.length) { return false; }\r\n\r\n      for (let cntr = a.length; --cntr >= 0;)\r\n      {\r\n         /* c8 ignore next */\r\n         if (a[cntr] !== b[cntr]) { return false; }\r\n      }\r\n\r\n      return true;\r\n   }\r\n\r\n   /**\r\n    * Provides a solid string hashing algorithm.\r\n    *\r\n    * Sourced from: https://stackoverflow.com/a/52171480\r\n    *\r\n    * @param str - String to hash.\r\n    *\r\n    * @param seed - A seed value altering the hash.\r\n    *\r\n    * @returns Hash code.\r\n    */\r\n   static hashString(str: string, seed: number = 0): number\r\n   {\r\n      let h1 = 0xdeadbeef ^ seed, h2 = 0x41c6ce57 ^ seed;\r\n\r\n      for (let ch, i = 0; i < str.length; i++)\r\n      {\r\n         ch = str.charCodeAt(i);\r\n         h1 = Math.imul(h1 ^ ch, 2654435761);\r\n         h2 = Math.imul(h2 ^ ch, 1597334677);\r\n      }\r\n\r\n      h1 = Math.imul(h1 ^ (h1 >>> 16), 2246822507) ^ Math.imul(h2 ^ (h2 >>> 13), 3266489909);\r\n      h2 = Math.imul(h2 ^ (h2 >>> 16), 2246822507) ^ Math.imul(h1 ^ (h1 >>> 13), 3266489909);\r\n\r\n      return 4294967296 * (2097151 & h2) + (h1 >>> 0);\r\n   }\r\n\r\n   /**\r\n    * Converts an unknown value for hashing purposes in {@link AdapterIndexer.calcHashUpdate}.\r\n    *\r\n    * Currently objects / Map w/ object keys is not supported. Potentially can include `object-hash` to handle this\r\n    * case, but it is not common to use objects as keys in Maps.\r\n    *\r\n    * @param value - An unknown value to convert to a number.\r\n    */\r\n   static hashUnknown(value: unknown): number\r\n   {\r\n      if (value === null || value === void 0) { return 0; }\r\n\r\n      let result: number = 0;\r\n\r\n      switch (typeof value)\r\n      {\r\n         case 'boolean':\r\n            result = value ? 1 : 0;\r\n            break;\r\n\r\n         case 'bigint':\r\n            result = Number(BigInt.asIntN(64, value));\r\n            break;\r\n\r\n         case 'function':\r\n            result = this.hashString(value.name);\r\n            break;\r\n\r\n         case 'number':\r\n            result = Number.isFinite(value) ? value : 0;\r\n            break;\r\n\r\n         case 'object':\r\n            // TODO: consider hashing an object IE `object-hash` and convert to number.\r\n            break;\r\n\r\n         case 'string':\r\n            result = this.hashString(value);\r\n            break;\r\n\r\n         case 'symbol':\r\n            result = this.hashString(Symbol.keyFor(value));\r\n            break;\r\n      }\r\n\r\n      return result;\r\n   }\r\n\r\n   /**\r\n    * @param target -\r\n    *\r\n    * @param Prototype -\r\n    *\r\n    * @returns target constructor function has Prototype.\r\n    */\r\n   static hasPrototype(target: any, Prototype: IDerivedReducerCtor<any>): boolean\r\n   {\r\n      /* c8 ignore next */\r\n      if (typeof target !== 'function') { return false; }\r\n\r\n      if (target === Prototype) { return true; }\r\n\r\n      // Walk parent prototype chain. Check for descriptor at each prototype level.\r\n      for (let proto = Object.getPrototypeOf(target); proto; proto = Object.getPrototypeOf(proto))\r\n      {\r\n         if (proto === Prototype) { return true; }\r\n      }\r\n\r\n      return false;\r\n   }\r\n\r\n   /**\r\n    * Provides a utility method to determine if the given data is iterable / implements iterator protocol.\r\n    *\r\n    * @param data - Data to verify as iterable.\r\n    *\r\n    * @returns Is data iterable.\r\n    */\r\n   static isIterable(data: any): boolean\r\n   {\r\n      return data !== null && data !== void 0 && typeof data === 'object' &&\r\n       typeof data[Symbol.iterator] === 'function';\r\n   }\r\n}\r\n","import { DynReducerUtils } from '../DynReducerUtils.js';\r\n\r\nimport type {\r\n   IDerivedReducer,\r\n   IDerivedReducerCtor,\r\n   DataOptions,\r\n   DataHost,\r\n   OptionsDerivedCreate }  from '../../types/index.js';\r\n\r\nimport type { IndexerAPI } from '../api/IndexerAPI.js';\r\n\r\n/**\r\n * Provides the `derived` API for all dynamic reducers.\r\n */\r\nexport class AdapterDerived<D, K, T>\r\n{\r\n   #hostData: DataHost<D>;\r\n\r\n   readonly #DerivedReducerCtor: IDerivedReducerCtor<T>;\r\n\r\n   #parentIndex: IndexerAPI<K, T>;\r\n\r\n   #derived: Map<string, IDerivedReducer<D, K, T>> = new Map();\r\n\r\n   #destroyed = false;\r\n\r\n   /**\r\n    * @param hostData - Hosted data structure.\r\n    *\r\n    * @param parentIndex - Any associated parent index API.\r\n    *\r\n    * @param DerivedReducerCtor - The default derived reducer constructor function.\r\n    */\r\n   constructor(hostData: DataHost<D>, parentIndex: IndexerAPI<K, T>, DerivedReducerCtor: IDerivedReducerCtor<T>)\r\n   {\r\n      this.#hostData = hostData;\r\n\r\n      this.#parentIndex = parentIndex;\r\n\r\n      this.#DerivedReducerCtor = DerivedReducerCtor;\r\n\r\n      Object.freeze(this);\r\n   }\r\n\r\n   /**\r\n    * Creates a new derived reducer.\r\n    *\r\n    * @param options - Options defining the new derived reducer.\r\n    *\r\n    * @returns Newly created derived reducer.\r\n    */\r\n   create(options: OptionsDerivedCreate<T>): IDerivedReducer<D, K, T>\r\n   {\r\n      if (this.#destroyed) { throw Error(`AdapterDerived.create error: this instance has been destroyed.`); }\r\n\r\n      let name: string;\r\n\r\n      let rest: DataOptions<T> = {};\r\n\r\n      let ctor: IDerivedReducerCtor<T>;\r\n\r\n      const DerivedReducerCtor: IDerivedReducerCtor<T> = this.#DerivedReducerCtor;\r\n\r\n      if (typeof options === 'string')\r\n      {\r\n         name = options;\r\n         ctor = DerivedReducerCtor;\r\n      }\r\n      else if (typeof options === 'function' && DynReducerUtils.hasPrototype(options, DerivedReducerCtor))\r\n      {\r\n         ctor = options;\r\n      }\r\n      else if (typeof options === 'object' && options !== null)\r\n      {\r\n         ({ name, ctor = DerivedReducerCtor, ...rest } = options);\r\n      }\r\n      else\r\n      {\r\n         throw new TypeError(`AdapterDerived.create error: 'options' does not conform to allowed parameters.`);\r\n      }\r\n\r\n      if (!DynReducerUtils.hasPrototype(ctor, DerivedReducerCtor))\r\n      {\r\n         throw new TypeError(`AdapterDerived.create error: 'ctor' is not a '${DerivedReducerCtor?.name}'.`);\r\n      }\r\n\r\n      name = name ?? ctor?.name;\r\n\r\n      if (typeof name !== 'string') { throw new TypeError(`AdapterDerived.create error: 'name' is not a string.`); }\r\n\r\n      const derivedReducer = new ctor(this.#hostData, this.#parentIndex, rest);\r\n\r\n      this.#derived.set(name, derivedReducer);\r\n\r\n      return derivedReducer;\r\n   }\r\n\r\n   /**\r\n    * Removes all derived reducers and associated subscriptions.\r\n    */\r\n   clear()\r\n   {\r\n      if (this.#destroyed) { return; }\r\n\r\n      for (const reducer of this.#derived.values()) { reducer.destroy(); }\r\n\r\n      this.#derived.clear();\r\n   }\r\n\r\n   /**\r\n    * Deletes and destroys a derived reducer by name.\r\n    *\r\n    * @param name - Name of the derived reducer.\r\n    */\r\n   delete(name: string): boolean\r\n   {\r\n      if (this.#destroyed) { throw Error(`AdapterDerived.delete error: this instance has been destroyed.`); }\r\n\r\n      const reducer = this.#derived.get(name);\r\n\r\n      if (reducer) { reducer.destroy(); }\r\n\r\n      return this.#derived.delete(name);\r\n   }\r\n\r\n   /**\r\n    * Removes all derived reducers, subscriptions, and cleans up all resources.\r\n    */\r\n   destroy()\r\n   {\r\n      if (this.#destroyed) { return; }\r\n\r\n      this.clear();\r\n\r\n      this.#hostData = [null];\r\n      this.#parentIndex = null;\r\n\r\n      this.#destroyed = true;\r\n   }\r\n\r\n   /**\r\n    * Returns an existing derived reducer.\r\n    *\r\n    * @param name - Name of derived reducer.\r\n    */\r\n   get(name: string): IDerivedReducer<D, K, T>\r\n   {\r\n      if (this.#destroyed) { throw Error(`AdapterDerived.get error: this instance has been destroyed.`); }\r\n\r\n      return this.#derived.get(name);\r\n   }\r\n\r\n   /**\r\n    * Updates all managed derived reducer indexes.\r\n    *\r\n    * @param [force] - Force an update to subscribers.\r\n    */\r\n   update(force: boolean = false)\r\n   {\r\n      if (this.#destroyed) { return; }\r\n\r\n      for (const reducer of this.#derived.values()) { reducer.index.update(force); }\r\n   }\r\n}\r\n","import type {\r\n   DataFilter,\r\n   FilterFn }  from '../../types/index.js';\r\n\r\n/**\r\n * Provides the storage and sequencing of managed filters. Each filter added may be a bespoke function or a\r\n * {@link DataFilter} object containing an `id`, `filter`, and `weight` attributes; `filter` is the only required\r\n * attribute.\r\n *\r\n * The `id` attribute can be anything that creates a unique ID for the filter; recommended strings or numbers. This\r\n * allows filters to be removed by ID easily.\r\n *\r\n * The `weight` attribute is a number between 0 and 1 inclusive that allows filters to be added in a\r\n * predictable order which is especially handy if they are manipulated at runtime. A lower weighted filter always runs\r\n * before a higher weighted filter. For speed and efficiency always set the heavier / more inclusive filter with a\r\n * lower weight; an example of this is a keyword / name that will filter out many entries making any further filtering\r\n * faster. If no weight is specified the default of '1' is assigned and it is appended to the end of the filters list.\r\n *\r\n * This class forms the public API which is accessible from the `.filters` getter in the main reducer implementation.\r\n * ```\r\n * const dynArray = new DynArrayReducer([...]);\r\n * dynArray.filters.add(...);\r\n * dynArray.filters.clear();\r\n * dynArray.filters.length;\r\n * dynArray.filters.remove(...);\r\n * dynArray.filters.removeBy(...);\r\n * dynArray.filters.removeById(...);\r\n * ```\r\n */\r\nexport class AdapterFilters<T>\r\n{\r\n   #filtersData: { filters: DataFilter<T>[] };\r\n\r\n   readonly #indexUpdate: Function;\r\n\r\n   #mapUnsubscribe: Map<Function, Function> = new Map();\r\n\r\n   /**\r\n    * @param indexUpdate - update function for the indexer.\r\n    *\r\n    * @param filtersAdapter - Stores the filter function data.\r\n    */\r\n   constructor(indexUpdate, filtersAdapter: { filters: DataFilter<T>[] })\r\n   {\r\n      this.#indexUpdate = indexUpdate;\r\n\r\n      this.#filtersData = filtersAdapter;\r\n\r\n      Object.freeze(this);\r\n   }\r\n\r\n   /**\r\n    * @returns Returns the length of the filter data.\r\n    */\r\n   get length(): number { return this.#filtersData.filters.length; }\r\n\r\n   /**\r\n    * Provides an iterator for filters.\r\n    *\r\n    * @returns Generator / iterator of filters.\r\n    * @yields {DataFilter<T>}\r\n    */\r\n   *[Symbol.iterator](): Generator<DataFilter<T>, DataFilter<T>, DataFilter<T>> | void\r\n   {\r\n      if (this.#filtersData.filters.length === 0) { return; }\r\n\r\n      for (const entry of this.#filtersData.filters)\r\n      {\r\n         yield { ...entry };\r\n      }\r\n   }\r\n\r\n   /**\r\n    * @param filters -\r\n    */\r\n   add(...filters: (FilterFn<T>|DataFilter<T>)[])\r\n   {\r\n      /**\r\n       * Tracks the number of filters added that have subscriber functionality.\r\n       */\r\n      let subscribeCount: number = 0;\r\n\r\n      for (const filter of filters)\r\n      {\r\n         const filterType = typeof filter;\r\n\r\n         if (filterType !== 'function' && (filterType !== 'object' || filter === null))\r\n         {\r\n            throw new TypeError(`AdapterFilters error: 'filter' is not a function or object.`);\r\n         }\r\n\r\n         let data = void 0;\r\n         let subscribeFn = void 0;\r\n\r\n         if (filterType === 'function')\r\n         {\r\n            data = {\r\n               id: void 0,\r\n               filter,\r\n               weight: 1\r\n            };\r\n\r\n            subscribeFn = filter.subscribe;\r\n         }\r\n         else if (filterType === 'object')\r\n         {\r\n            if ('filter' in filter)\r\n            {\r\n               if (typeof filter.filter !== 'function')\r\n               {\r\n                  throw new TypeError(`AdapterFilters error: 'filter' attribute is not a function.`);\r\n               }\r\n\r\n               if (filter.weight !== void 0 && typeof filter.weight !== 'number' ||\r\n                   (filter.weight < 0 || filter.weight > 1))\r\n               {\r\n                  throw new TypeError(\r\n                      `AdapterFilters error: 'weight' attribute is not a number between '0 - 1' inclusive.`);\r\n               }\r\n\r\n               data = {\r\n                  id: filter.id !== void 0 ? filter.id : void 0,\r\n                  filter: filter.filter,\r\n                  weight: filter.weight || 1\r\n               };\r\n\r\n               subscribeFn = filter.filter.subscribe ?? filter.subscribe;\r\n            }\r\n            else\r\n            {\r\n               throw new TypeError(`AdapterFilters error: 'filter' attribute is not a function.`);\r\n            }\r\n         }\r\n\r\n         // Find the index to insert where data.weight is less than existing values weight.\r\n         const index = this.#filtersData.filters.findIndex((value) =>\r\n         {\r\n            return data.weight < value.weight;\r\n         });\r\n\r\n         // If an index was found insert at that location.\r\n         if (index >= 0)\r\n         {\r\n            this.#filtersData.filters.splice(index, 0, data);\r\n         }\r\n         else // push to end of filters.\r\n         {\r\n            this.#filtersData.filters.push(data);\r\n         }\r\n\r\n         if (typeof subscribeFn === 'function')\r\n         {\r\n            const unsubscribe = subscribeFn(this.#indexUpdate);\r\n\r\n            // Ensure that unsubscribe is a function.\r\n            if (typeof unsubscribe !== 'function')\r\n            {\r\n               throw new TypeError(\r\n                'AdapterFilters error: Filter has subscribe function, but no unsubscribe function is returned.');\r\n            }\r\n\r\n            // Ensure that the same filter is not subscribed to multiple times.\r\n            if (this.#mapUnsubscribe.has(data.filter))\r\n            {\r\n               throw new Error(\r\n                'AdapterFilters error: Filter added already has an unsubscribe function registered.');\r\n            }\r\n\r\n            this.#mapUnsubscribe.set(data.filter, unsubscribe);\r\n            subscribeCount++;\r\n         }\r\n      }\r\n\r\n      // Filters with subscriber functionality are assumed to immediately invoke the `subscribe` callback. If the\r\n      // subscriber count is less than the amount of filters added then automatically trigger an index update manually.\r\n      if (subscribeCount < filters.length) { this.#indexUpdate(); }\r\n   }\r\n\r\n   /**\r\n    * Clears and removes all filters.\r\n    */\r\n   clear()\r\n   {\r\n      this.#filtersData.filters.length = 0;\r\n\r\n      // Unsubscribe from all filters with subscription support.\r\n      for (const unsubscribe of this.#mapUnsubscribe.values())\r\n      {\r\n         unsubscribe();\r\n      }\r\n\r\n      this.#mapUnsubscribe.clear();\r\n\r\n      this.#indexUpdate();\r\n   }\r\n\r\n   /**\r\n    * @param filters -\r\n    */\r\n   remove(...filters: (FilterFn<T>|DataFilter<T>)[])\r\n   {\r\n      const length = this.#filtersData.filters.length;\r\n\r\n      if (length === 0) { return; }\r\n\r\n      for (const data of filters)\r\n      {\r\n         // Handle the case that the filter may either be a function or a filter entry / object.\r\n         const actualFilter = typeof data === 'function' ? data : data !== null && typeof data === 'object' ?\r\n          data.filter : void 0;\r\n\r\n         if (!actualFilter) { continue; }\r\n\r\n         for (let cntr = this.#filtersData.filters.length; --cntr >= 0;)\r\n         {\r\n            if (this.#filtersData.filters[cntr].filter === actualFilter)\r\n            {\r\n               this.#filtersData.filters.splice(cntr, 1);\r\n\r\n               // Invoke any unsubscribe function for given filter then remove from tracking.\r\n               let unsubscribe = void 0;\r\n               if (typeof (unsubscribe = this.#mapUnsubscribe.get(actualFilter)) === 'function')\r\n               {\r\n                  unsubscribe();\r\n                  this.#mapUnsubscribe.delete(actualFilter);\r\n               }\r\n            }\r\n         }\r\n      }\r\n\r\n      // Update the index a filter was removed.\r\n      if (length !== this.#filtersData.filters.length) { this.#indexUpdate(); }\r\n   }\r\n\r\n   /**\r\n    * Remove filters by the provided callback. The callback takes 3 parameters: `id`, `filter`, and `weight`.\r\n    * Any truthy value returned will remove that filter.\r\n    *\r\n    * @param callback - Callback function to evaluate each filter entry.\r\n    */\r\n   removeBy(callback: (id: any, filter: FilterFn<T>, weight: number) => boolean)\r\n   {\r\n      const length = this.#filtersData.filters.length;\r\n\r\n      if (length === 0) { return; }\r\n\r\n      if (typeof callback !== 'function')\r\n      {\r\n         throw new TypeError(`AdapterFilters error: 'callback' is not a function.`);\r\n      }\r\n\r\n      this.#filtersData.filters = this.#filtersData.filters.filter((data) =>\r\n      {\r\n         const remove = callback.call(callback, { ...data });\r\n\r\n         if (remove)\r\n         {\r\n            let unsubscribe;\r\n            if (typeof (unsubscribe = this.#mapUnsubscribe.get(data.filter)) === 'function')\r\n            {\r\n               unsubscribe();\r\n               this.#mapUnsubscribe.delete(data.filter);\r\n            }\r\n         }\r\n\r\n         // Reverse remove boolean to properly filter / remove this filter.\r\n         return !remove;\r\n      });\r\n\r\n      if (length !== this.#filtersData.filters.length) { this.#indexUpdate(); }\r\n   }\r\n\r\n   /**\r\n    * @param ids - Removes filters by ID.\r\n    */\r\n   removeById(...ids: any[])\r\n   {\r\n      const length = this.#filtersData.filters.length;\r\n\r\n      if (length === 0) { return; }\r\n\r\n      this.#filtersData.filters = this.#filtersData.filters.filter((data) =>\r\n      {\r\n         let remove = 0;\r\n\r\n         for (const id of ids) { remove |= (data.id === id ? 1 : 0); }\r\n\r\n         // If not keeping invoke any unsubscribe function for given filter then remove from tracking.\r\n         if (!!remove)\r\n         {\r\n            let unsubscribe;\r\n            if (typeof (unsubscribe = this.#mapUnsubscribe.get(data.filter)) === 'function')\r\n            {\r\n               unsubscribe();\r\n               this.#mapUnsubscribe.delete(data.filter);\r\n            }\r\n         }\r\n\r\n         return !remove; // Swap here to actually remove the item via array filter method.\r\n      });\r\n\r\n      if (length !== this.#filtersData.filters.length) { this.#indexUpdate(); }\r\n   }\r\n}\r\n","import { DynReducerUtils }       from '../DynReducerUtils.js';\r\n\r\nimport type { IndexerAPI }       from '../api/IndexerAPI.js';\r\n\r\nimport type {\r\n   CompareFn,\r\n   DataFilter,\r\n   DataHost,\r\n   DataIndexer }                 from '../../types/index.js';\r\n\r\nimport type { AdapterDerived }   from './AdapterDerived.js';\r\n\r\n/**\r\n * Provides construction and management of indexed data when there are parent indexes or filter / sort functions\r\n * applied.\r\n */\r\nexport abstract class AdapterIndexer<D, K, T>\r\n{\r\n   public derivedAdapter: AdapterDerived<D, K, T>\r\n\r\n   public filtersData: { filters: DataFilter<T>[] };\r\n\r\n   public hostData: DataHost<D>;\r\n\r\n   public hostUpdate: Function;\r\n\r\n   public indexData: DataIndexer<K, T>;\r\n\r\n   public sortData: { compareFn: CompareFn<T> };\r\n\r\n   public sortFn: (a: K, b: K) => number;\r\n\r\n   public destroyed = false;\r\n\r\n   /**\r\n    * @param hostData - Hosted data structure.\r\n    *\r\n    * @param hostUpdate - Host update function invoked on index updates.\r\n    *\r\n    * @param [parentIndexer] - Any associated parent index API.\r\n    *\r\n    * @returns Indexer adapter instance.\r\n    */\r\n   constructor(hostData: DataHost<D>, hostUpdate: Function, parentIndexer?: IndexerAPI<K, T>)\r\n   {\r\n      this.hostData = hostData;\r\n\r\n      this.hostUpdate = hostUpdate;\r\n\r\n      this.indexData = { index: null, hash: null, reversed: false, parent: parentIndexer };\r\n   }\r\n\r\n   /**\r\n    * @returns Returns whether the index is active.\r\n    */\r\n   get active(): boolean\r\n   {\r\n      return this.filtersData.filters.length > 0 || this.sortData.compareFn !== null ||\r\n       this.indexData.parent?.active === true;\r\n   }\r\n\r\n   /**\r\n    * @returns Returns length of reduced index.\r\n    */\r\n   get length(): number\r\n   {\r\n      return this.indexData.index ? this.indexData.index.length : 0;\r\n   }\r\n\r\n   /* c8 ignore start */\r\n   /**\r\n    * @returns Returns reversed state.\r\n    */\r\n   get reversed(): boolean { return this.indexData.reversed; }\r\n   /* c8 ignore end */\r\n\r\n   /**\r\n    * @param reversed - New reversed state.\r\n    */\r\n   set reversed(reversed: boolean) { this.indexData.reversed = reversed; }\r\n\r\n// -------------------------------------------------------------------------------------------------------------------\r\n\r\n   /**\r\n    * Calculates a new hash value for the new index array if any. If the new index array is null then the hash value\r\n    * is set to null. Set calculated new hash value to the index adapter hash value.\r\n    *\r\n    * After hash generation compare old and new hash values and perform an update if they are different. If they are\r\n    * equal check for array equality between the old and new index array and perform an update if they are not equal.\r\n    *\r\n    * @param oldIndex - Old index array.\r\n    *\r\n    * @param oldHash - Old index hash value.\r\n    *\r\n    * @param [force=false] - When true forces an update to subscribers.\r\n    */\r\n   calcHashUpdate(oldIndex: K[], oldHash: number | null, force: boolean = false)\r\n   {\r\n      // Use force if a boolean otherwise default to false.\r\n      const actualForce = typeof force === 'boolean' ? force : /* c8 ignore next */ false;\r\n\r\n      let newHash = null;\r\n      const newIndex = this.indexData.index;\r\n\r\n      if (newIndex)\r\n      {\r\n         for (let cntr: number = newIndex.length; --cntr >= 0;)\r\n         {\r\n            newHash ^= DynReducerUtils.hashUnknown(newIndex[cntr]) + 0x9e3779b9 + (newHash << 6) + (newHash >> 2);\r\n         }\r\n      }\r\n\r\n      this.indexData.hash = newHash;\r\n\r\n      if (actualForce || (oldHash === newHash ? !DynReducerUtils.arrayEquals(oldIndex, newIndex) : true))\r\n      {\r\n         this.hostUpdate();\r\n      }\r\n   }\r\n\r\n   /**\r\n    * @returns Sort function adapting host data.\r\n    */\r\n   abstract createSortFn(): (a: K, b: K) => number;\r\n\r\n   /**\r\n    * Destroys all resources.\r\n    */\r\n   destroy()\r\n   {\r\n      if (this.destroyed) { return; }\r\n\r\n      this.indexData.index = null;\r\n      this.indexData.hash = null;\r\n      this.indexData.reversed = null;\r\n      this.indexData.parent = null;\r\n\r\n      this.destroyed = true;\r\n   }\r\n\r\n   /**\r\n    * Store associated filter and sort data that are constructed after the indexer.\r\n    *\r\n    * @param filtersData - Associated AdapterFilters instance.\r\n    *\r\n    * @param sortData - Associated AdapterSort instance.\r\n    *\r\n    * @param derivedAdapter - Associated AdapterDerived instance.\r\n    */\r\n   initAdapters(filtersData: { filters: DataFilter<T>[] }, sortData: { compareFn: CompareFn<T> },\r\n    derivedAdapter: AdapterDerived<D, K, T>)\r\n   {\r\n      this.filtersData = filtersData;\r\n\r\n      this.sortData = sortData;\r\n\r\n      this.derivedAdapter = derivedAdapter;\r\n\r\n      this.sortFn = this.createSortFn();\r\n   }\r\n\r\n   /**\r\n    * Handles updating the index in child implementation specific to the backing data structure.\r\n    *\r\n    * @param [force] - Force an update to any subscribers.\r\n    */\r\n   abstract update(force: boolean): void;\r\n}\r\n","import type {\r\n   CompareFn,\r\n   DataSort }  from '../../types/index.js';\r\n\r\n/**\r\n * Provides the storage and sequencing of a managed sort function. The sort function set may be a bespoke function or a\r\n * {@link DataSort} object containing an `compare`, and `subscribe` attributes; `compare` is the only required\r\n * attribute.\r\n *\r\n * Note: You can set a compare function that also has a subscribe function attached as the `subscribe` attribute.\r\n * If a subscribe function is provided the sort function can notify any updates that may change sort order and this\r\n * triggers an index update.\r\n *\r\n * This class forms the public API which is accessible from the `.sort` getter in the main reducer implementation.\r\n * ```\r\n * const dynArray = new DynArrayReducer([...]);\r\n * dynArray.sort.clear();\r\n * dynArray.sort.set(...);\r\n * ```\r\n */\r\nexport class AdapterSort<T>\r\n{\r\n   #sortData: { compareFn: CompareFn<T> };\r\n\r\n   readonly #indexUpdate: Function;\r\n\r\n   #unsubscribe: Function;\r\n\r\n   /**\r\n    * @param indexUpdate - Function to update indexer.\r\n    *\r\n    * @param sortData - Storage for compare function.\r\n    */\r\n   constructor(indexUpdate: Function, sortData: { compareFn: CompareFn<T> })\r\n   {\r\n      this.#indexUpdate = indexUpdate;\r\n\r\n      this.#sortData = sortData;\r\n\r\n      Object.freeze(this);\r\n   }\r\n\r\n   /**\r\n    * Clears & removes any assigned sort function and triggers an index update.\r\n    */\r\n   clear()\r\n   {\r\n      const oldCompareFn = this.#sortData.compareFn;\r\n\r\n      this.#sortData.compareFn = null;\r\n\r\n      if (typeof this.#unsubscribe === 'function')\r\n      {\r\n         this.#unsubscribe();\r\n         this.#unsubscribe = void 0;\r\n      }\r\n\r\n      // Only update index if an old compare function is set.\r\n      if (typeof oldCompareFn === 'function') { this.#indexUpdate(); }\r\n   }\r\n\r\n   /**\r\n    * @param data - A callback function that compares two values. Return > 0 to sort b before a;\r\n    * < 0 to sort a before b; or 0 to keep original order of a & b.\r\n    *\r\n    * Note: You can set a compare function that also has a subscribe function attached as the `subscribe` attribute.\r\n    *\r\n    * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort#parameters\r\n    */\r\n   set(data: CompareFn<T>|DataSort<T>)\r\n   {\r\n      if (typeof this.#unsubscribe === 'function')\r\n      {\r\n         this.#unsubscribe();\r\n         this.#unsubscribe = void 0;\r\n      }\r\n\r\n      let compareFn = void 0;\r\n      let subscribeFn = void 0;\r\n\r\n      switch (typeof data)\r\n      {\r\n         case 'function':\r\n            compareFn = data;\r\n            subscribeFn = data.subscribe;\r\n            break;\r\n\r\n         case 'object':\r\n            // Early out if data is null / noop.\r\n            if (data === null) { break; }\r\n\r\n            if (typeof data.compare !== 'function')\r\n            {\r\n               throw new TypeError(`AdapterSort error: 'compare' attribute is not a function.`);\r\n            }\r\n\r\n            compareFn = data.compare;\r\n            subscribeFn = data.compare.subscribe ?? data.subscribe;\r\n            break;\r\n      }\r\n\r\n      if (typeof compareFn === 'function')\r\n      {\r\n         this.#sortData.compareFn = compareFn;\r\n      }\r\n      else\r\n      {\r\n         const oldCompareFn = this.#sortData.compareFn;\r\n         this.#sortData.compareFn = null;\r\n\r\n         // Update index if the old compare function exists.\r\n         if (typeof oldCompareFn === 'function') { this.#indexUpdate(); }\r\n         return;\r\n      }\r\n\r\n      if (typeof subscribeFn === 'function')\r\n      {\r\n         this.#unsubscribe = subscribeFn(this.#indexUpdate);\r\n\r\n         // Ensure that unsubscribe is a function.\r\n         if (typeof this.#unsubscribe !== 'function')\r\n         {\r\n            throw new Error(\r\n             `AdapterSort error: sort has 'subscribe' function, but no 'unsubscribe' function is returned.`);\r\n         }\r\n      }\r\n      else\r\n      {\r\n         // A sort function with subscriber functionality are assumed to immediately invoke the `subscribe` callback.\r\n         // Only manually update the index if there is no subscriber functionality.\r\n         this.#indexUpdate();\r\n      }\r\n   }\r\n}\r\n","import type { AdapterIndexer }  from '../../common/adapter/AdapterIndexer.js';\r\nimport type { DataIndexer }     from '../../types/index.js';\r\n\r\n/**\r\n * Provides the public API for accessing the index API.\r\n *\r\n * This class forms the public API which is accessible from the `.index` getter in the main reducer implementation.\r\n * ```\r\n * const dynArray = new DynArrayReducer([...]);\r\n * dynArray.index.active;\r\n * dynArray.index.hash;\r\n * dynArray.index.length;\r\n * dynArray.index.update(...);\r\n * ```\r\n */\r\nexport class IndexerAPI<K, T>\r\n{\r\n    readonly #indexData: DataIndexer<K, T>\r\n\r\n    /**\r\n     * Provides a getter to determine if the index is active.\r\n     */\r\n    readonly active: boolean;\r\n\r\n    /**\r\n     * Provides length of reduced / indexed elements.\r\n     */\r\n    readonly length: number;\r\n\r\n    /**\r\n     * Manually invoke an update of the index.\r\n     *\r\n     * @param force - Force update to any subscribers.\r\n     */\r\n    readonly update: (force?: boolean) => void;\r\n\r\n    constructor(adapterIndexer: AdapterIndexer<any, K, T>)\r\n    {\r\n        this.#indexData = adapterIndexer.indexData;\r\n\r\n        this.update = adapterIndexer.update.bind(adapterIndexer);\r\n\r\n        // Defines getters on the public API to get the index hash, active state, and index length.\r\n        Object.defineProperties(this, {\r\n           active: { get: () => adapterIndexer.active },\r\n           length: { get: () => adapterIndexer.length }\r\n        });\r\n\r\n        Object.freeze(this);\r\n    }\r\n\r\n    /**\r\n     * - Current hash value of the index.\r\n     */\r\n    get hash(): number | null\r\n    {\r\n        return this.#indexData.hash;\r\n    }\r\n\r\n    /**\r\n     * Provides an iterator over the index array.\r\n     *\r\n     * @returns Iterator / generator\r\n     * @yields {K}\r\n     */\r\n    *[Symbol.iterator](): Generator<K, K, K>\r\n    {\r\n        const indexData = this.#indexData;\r\n\r\n        if (!indexData.index) { return; }\r\n\r\n        const reversed = indexData.reversed;\r\n        const length = indexData.index.length;\r\n\r\n        if (reversed)\r\n        {\r\n            for (let cntr = length; --cntr >= 0;) { yield indexData.index[cntr]; }\r\n        }\r\n        else\r\n        {\r\n            for (let cntr = 0; cntr < length; cntr++) { yield indexData.index[cntr]; }\r\n        }\r\n    }\r\n}\r\n","import type { AdapterDerived }  from '../adapter/AdapterDerived.js';\r\n\r\nimport type {\r\n    IDerivedReducer,\r\n    OptionsDerivedCreate }      from '../../types/index.js';\r\n\r\n/**\r\n * Provides the public API for derived reducers. There are several ways to create a derived reducer from utilizing the\r\n * default implementation or passing in a constructor function / class for a custom derived reducer.\r\n *\r\n * This class forms the public API which is accessible from the `.derived` getter in the main reducer implementation.\r\n * ```\r\n * const dynArray = new DynArrayReducer([...]);\r\n * dynArray.derived.clear();\r\n * dynArray.derived.create(...);\r\n * dynArray.derived.delete(...);\r\n * dynArray.derived.destroy();\r\n * dynArray.derived.get(...);\r\n * ```\r\n */\r\nexport class DerivedAPI<D, K, T>\r\n{\r\n    /**\r\n     * Removes all derived reducers and associated subscriptions.\r\n     */\r\n    clear: () => void;\r\n\r\n    /**\r\n     * @param options - Options for creating a reducer.\r\n     *\r\n     * @returns Newly created derived reducer.\r\n     */\r\n    create: (options: OptionsDerivedCreate<T>) => IDerivedReducer<D, K, T>;\r\n\r\n    /**\r\n     * Deletes and destroys a derived reducer.\r\n     *\r\n     * @param name - Name of the derived reducer\r\n     */\r\n    delete: (name: string) => boolean;\r\n\r\n    /**\r\n     * Removes all derived reducers, associated subscriptions, and cleans up all resources.\r\n     */\r\n    destroy: () => void;\r\n\r\n    /**\r\n     * Returns an existing derived reducer.\r\n     *\r\n     * @param name - Name of derived reducer.\r\n     */\r\n    get: (name: string) => IDerivedReducer<D, K, T>\r\n\r\n    constructor(adapterDerived: AdapterDerived<D, K, T>)\r\n    {\r\n        this.clear = adapterDerived.clear.bind(adapterDerived);\r\n        this.create = adapterDerived.create.bind(adapterDerived);\r\n        this.delete = adapterDerived.delete.bind(adapterDerived);\r\n        this.destroy = adapterDerived.destroy.bind(adapterDerived);\r\n        this.get = adapterDerived.get.bind(adapterDerived);\r\n\r\n        Object.freeze(this);\r\n    }\r\n}\r\n","import {\r\n   AdapterIndexer,\r\n   DynReducerUtils } from '../common/index.js';\r\n\r\n/**\r\n */\r\nexport class Indexer<T> extends AdapterIndexer<T[], number, T>\r\n{\r\n   /**\r\n    * @inheritDoc\r\n    */\r\n   createSortFn(): (a: number, b: number) => number\r\n   {\r\n      return (a, b) => this.sortData.compareFn(this.hostData[0][a], this.hostData[0][b]);\r\n   }\r\n\r\n   /**\r\n    * Provides the custom filter / reduce step that is ~25-40% faster than implementing with `Array.reduce`.\r\n    *\r\n    * Note: Other loop unrolling techniques like Duff's Device gave a slight faster lower bound on large data sets,\r\n    * but the maintenance factor is not worth the extra complication.\r\n    *\r\n    * @returns New filtered index array.\r\n    */\r\n   reduceImpl(): number[]\r\n   {\r\n      const data = [];\r\n\r\n      const array = this.hostData[0];\r\n      if (!array) { return data; }\r\n\r\n      const filters = this.filtersData.filters;\r\n\r\n      let include = true;\r\n\r\n      const parentIndex = this.indexData.parent;\r\n\r\n      // Source index data is coming from an active parent index.\r\n      if (DynReducerUtils.isIterable(parentIndex) && parentIndex.active)\r\n      {\r\n         for (const adjustedIndex of parentIndex)\r\n         {\r\n            const value = array[adjustedIndex];\r\n            include = true;\r\n\r\n            for (let filCntr = 0, filLength = filters.length; filCntr < filLength; filCntr++)\r\n            {\r\n               if (!filters[filCntr].filter(value))\r\n               {\r\n                  include = false;\r\n                  break;\r\n               }\r\n            }\r\n\r\n            if (include) { data.push(adjustedIndex); }\r\n         }\r\n      }\r\n      else\r\n      {\r\n         for (let cntr = 0, length = array.length; cntr < length; cntr++)\r\n         {\r\n            include = true;\r\n\r\n            for (let filCntr = 0, filLength = filters.length; filCntr < filLength; filCntr++)\r\n            {\r\n               if (!filters[filCntr].filter(array[cntr]))\r\n               {\r\n                  include = false;\r\n                  break;\r\n               }\r\n            }\r\n\r\n            if (include) { data.push(cntr); }\r\n         }\r\n      }\r\n\r\n      return data;\r\n   }\r\n\r\n   /**\r\n    * Update the reducer indexes. If there are changes subscribers are notified. If data order is changed externally\r\n    * pass in true to force an update to subscribers.\r\n    *\r\n    * @param [force=false] - When true forces an update to subscribers.\r\n    */\r\n   update(force: boolean = false)\r\n   {\r\n      if (this.destroyed) { return; }\r\n\r\n      const oldIndex = this.indexData.index;\r\n      const oldHash = this.indexData.hash;\r\n\r\n      const array = this.hostData[0];\r\n      const parentIndex = this.indexData.parent;\r\n\r\n      // Clear index if there are no filters and no sort function or the index length doesn't match the item length.\r\n      if ((this.filtersData.filters.length === 0 && !this.sortData.compareFn) ||\r\n       (this.indexData.index && array?.length !== this.indexData.index.length))\r\n      {\r\n         this.indexData.index = null;\r\n      }\r\n\r\n      // If there are filters build new index.\r\n      if (this.filtersData.filters.length > 0)\r\n      {\r\n         this.indexData.index = this.reduceImpl();\r\n      }\r\n\r\n      // If the index isn't built yet and there is an active parent index then create it from the parent.\r\n      if (!this.indexData.index && parentIndex?.active)\r\n      {\r\n         this.indexData.index = [...parentIndex];\r\n      }\r\n\r\n      if (this.sortData.compareFn && Array.isArray(array))\r\n      {\r\n         // If there is no index then create one with keys matching host item length.\r\n         if (!this.indexData.index)\r\n         {\r\n            this.indexData.index = [...Array(array.length).keys()];\r\n         }\r\n\r\n         this.indexData.index.sort(this.sortFn);\r\n      }\r\n\r\n      this.calcHashUpdate(oldIndex, oldHash, force);\r\n\r\n      // Update all derived reducers.\r\n      this.derivedAdapter?.update(force);\r\n   }\r\n}\r\n","import {\r\n   AdapterDerived,\r\n   AdapterFilters,\r\n   AdapterSort,\r\n   DerivedAPI,\r\n   DynReducerUtils,\r\n   IndexerAPI }      from '../../common/index.js';\r\n\r\nimport { Indexer }   from '../Indexer.js';\r\n\r\nimport type {\r\n   IDerivedReducer,\r\n   CompareFn,\r\n   DataOptions,\r\n   DataFilter,\r\n   DataHost,\r\n   DataSort,\r\n   FilterFn }        from '../../types/index.js';\r\n\r\n/**\r\n * Provides the base implementation derived reducer for arrays / DynArrayReducer.\r\n */\r\nexport class DerivedArrayReducer<T> implements IDerivedReducer<T[], number, T>\r\n{\r\n   #array: DataHost<T[]>;\r\n\r\n   readonly #derived;\r\n\r\n   readonly #derivedPublicAPI;\r\n\r\n   readonly #filters: AdapterFilters<T>;\r\n\r\n   readonly #filtersData: { filters: DataFilter<T>[] } = { filters: [] };\r\n\r\n   readonly #index: Indexer<T>;\r\n\r\n   readonly #indexPublicAPI: IndexerAPI<number, T>;\r\n\r\n   #reversed: boolean = false;\r\n\r\n   readonly #sort: AdapterSort<T>;\r\n\r\n   #sortData: { compareFn: CompareFn<T> } = { compareFn: null };\r\n\r\n   #subscriptions = [];\r\n\r\n   #destroyed = false;\r\n\r\n   /**\r\n    * @param array - Data host array.\r\n    *\r\n    * @param parentIndex - Parent indexer.\r\n    *\r\n    * @param options - Any filters and sort functions to apply.\r\n    */\r\n   constructor(array: DataHost<T[]>, parentIndex: IndexerAPI<number, T>, options: DataOptions<T>)\r\n   {\r\n      this.#array = array;\r\n\r\n      this.#index = new Indexer(this.#array, this.#updateSubscribers.bind(this), parentIndex);\r\n      this.#indexPublicAPI = new IndexerAPI<number, T>(this.#index);\r\n\r\n      this.#filters = new AdapterFilters(this.#indexPublicAPI.update, this.#filtersData);\r\n\r\n      this.#sort = new AdapterSort(this.#indexPublicAPI.update, this.#sortData);\r\n\r\n      this.#derived = new AdapterDerived(this.#array, this.#indexPublicAPI, DerivedArrayReducer);\r\n      this.#derivedPublicAPI = new DerivedAPI<T[], number, T>(this.#derived);\r\n\r\n      this.#index.initAdapters(this.#filtersData, this.#sortData, this.#derived);\r\n\r\n      let filters: Iterable<FilterFn<T>|DataFilter<T>> = void 0;\r\n      let sort: CompareFn<T> | DataSort<T> = void 0;\r\n\r\n      if (options !== void 0 && ('filters' in options || 'sort' in options))\r\n      {\r\n         if (options.filters !== void 0)\r\n         {\r\n            if (DynReducerUtils.isIterable(options.filters))\r\n            {\r\n               filters = options.filters;\r\n            }\r\n            else\r\n            {\r\n               throw new TypeError(\r\n                `DerivedArrayReducer error (DataDerivedOptions): 'filters' attribute is not iterable.`);\r\n            }\r\n         }\r\n\r\n         if (options.sort !== void 0)\r\n         {\r\n            if (typeof options.sort === 'function')\r\n            {\r\n               sort = options.sort;\r\n            }\r\n            else if (typeof options.sort === 'object' && options.sort !== null)\r\n            {\r\n               sort = options.sort;\r\n            }\r\n            else\r\n            {\r\n               throw new TypeError(\r\n                `DerivedArrayReducer error (DataDerivedOptions): 'sort' attribute is not a function or object.`);\r\n            }\r\n         }\r\n      }\r\n\r\n      // Add any filters and sort function defined by DataDynArray.\r\n      if (filters) { this.filters.add(...filters); }\r\n      if (sort) { this.sort.set(sort); }\r\n\r\n      // Invoke an custom initialization for child classes.\r\n      this.initialize();\r\n   }\r\n\r\n   /**\r\n    * Returns the internal data of this instance. Be careful!\r\n    *\r\n    * Note: if an array is set as initial data then that array is used as the internal data. If any changes are\r\n    * performed to the data externally do invoke {@link IndexerAPI.update} with `true` to recalculate the index and\r\n    * notify all subscribers.\r\n    *\r\n    * @returns The internal data.\r\n    */\r\n   get data(): T[] | null { return this.#array[0]; }\r\n\r\n   /**\r\n    * @returns Derived public API.\r\n    */\r\n   get derived(): DerivedAPI<T[], number, T> { return this.#derivedPublicAPI; }\r\n\r\n   /**\r\n    * @returns The filters adapter.\r\n    */\r\n   get filters(): AdapterFilters<T> { return this.#filters; }\r\n\r\n   /**\r\n    * Returns the Indexer public API.\r\n    *\r\n    * @returns Indexer API - is also iterable.\r\n    */\r\n   get index(): IndexerAPI<number, T> { return this.#indexPublicAPI; }\r\n\r\n   /**\r\n    * Returns whether this derived reducer is destroyed.\r\n    */\r\n   get destroyed(): boolean { return this.#destroyed; }\r\n\r\n   /**\r\n    * @returns Main data / items length or indexed length.\r\n    */\r\n   get length(): number\r\n   {\r\n      const array = this.#array[0];\r\n\r\n      return this.#index.active ? this.index.length :\r\n       array ? array.length : 0;\r\n   }\r\n\r\n   /**\r\n    * @returns Gets current reversed state.\r\n    */\r\n   get reversed(): boolean { return this.#reversed; }\r\n\r\n   /**\r\n    * @returns The sort adapter.\r\n    */\r\n   get sort(): AdapterSort<T> { return this.#sort; }\r\n\r\n   /**\r\n    * Sets reversed state and notifies subscribers.\r\n    *\r\n    * @param reversed - New reversed state.\r\n    */\r\n   set reversed(reversed: boolean)\r\n   {\r\n      if (typeof reversed !== 'boolean')\r\n      {\r\n         throw new TypeError(`DerivedArrayReducer.reversed error: 'reversed' is not a boolean.`);\r\n      }\r\n\r\n      this.#reversed = reversed;\r\n      this.#index.reversed = reversed;\r\n\r\n      // Recalculate index and force an update to any subscribers.\r\n      this.index.update(true);\r\n   }\r\n\r\n   /**\r\n    * Removes all derived reducers, subscriptions, and cleans up all resources.\r\n    */\r\n   destroy()\r\n   {\r\n      this.#destroyed = true;\r\n\r\n      // Remove any external data reference and perform a final update.\r\n      this.#array = [null];\r\n      this.#index.update(true);\r\n\r\n      // Remove all subscriptions.\r\n      this.#subscriptions.length = 0;\r\n\r\n      this.#derived.destroy();\r\n      this.#index.destroy();\r\n      this.#filters.clear();\r\n      this.#sort.clear();\r\n   }\r\n\r\n   /**\r\n    * Provides a callback for custom derived reducers to initialize any data / custom configuration. This allows\r\n    * child classes to avoid implementing the constructor.\r\n    *\r\n    * @protected\r\n    */\r\n   initialize() {}\r\n\r\n   /**\r\n    * Provides an iterator for data stored in DerivedArrayReducer.\r\n    *\r\n    * @returns Generator / iterator of all data.\r\n    */\r\n   *[Symbol.iterator](): Generator<T, T, T>\r\n   {\r\n      const array = this.#array[0];\r\n\r\n      if (this.#destroyed || array === null || array?.length === 0) { return; }\r\n\r\n      if (this.#index.active)\r\n      {\r\n         for (const entry of this.index) { yield array[entry]; }\r\n      }\r\n      else\r\n      {\r\n         if (this.reversed)\r\n         {\r\n            for (let cntr = array.length; --cntr >= 0;) { yield array[cntr]; }\r\n         }\r\n         else\r\n         {\r\n            for (let cntr = 0; cntr < array.length; cntr++) { yield array[cntr]; }\r\n         }\r\n      }\r\n   }\r\n\r\n// -------------------------------------------------------------------------------------------------------------------\r\n\r\n   /**\r\n    * Subscribe to this DerivedArrayReducer.\r\n    *\r\n    * @param handler - Callback function that is invoked on update / changes. Receives `this` reference.\r\n    *\r\n    * @returns Unsubscribe function.\r\n    */\r\n   subscribe(handler: (value: DerivedArrayReducer<T>) => void): () => void\r\n   {\r\n      this.#subscriptions.push(handler); // add handler to the array of subscribers\r\n\r\n      handler(this);                     // call handler with current value\r\n\r\n      // Return unsubscribe function.\r\n      return () =>\r\n      {\r\n         const index = this.#subscriptions.findIndex((sub) => sub === handler);\r\n         if (index >= 0) { this.#subscriptions.splice(index, 1); }\r\n      };\r\n   }\r\n\r\n   /**\r\n    * Updates subscribers on changes.\r\n    */\r\n   #updateSubscribers()\r\n   {\r\n      for (let cntr = 0; cntr < this.#subscriptions.length; cntr++) { this.#subscriptions[cntr](this); }\r\n   }\r\n}\r\n","import {\r\n   AdapterDerived,\r\n   AdapterFilters,\r\n   AdapterSort,\r\n   DerivedAPI,\r\n   DynReducerUtils,\r\n   IndexerAPI }                  from '../common/index.js';\r\n\r\nimport { Indexer }               from './Indexer.js';\r\n\r\nimport type {\r\n   CompareFn,\r\n   DataDynArray,\r\n   DataFilter,\r\n   DataHost,\r\n   DataSort,\r\n   FilterFn }                    from '../types/index.js';\r\n\r\nimport { DerivedArrayReducer }   from './derived/DerivedArrayReducer.js';\r\n\r\n/**\r\n * Provides a managed array with non-destructive reducing / filtering / sorting capabilities with subscription /\r\n * Svelte store support.\r\n */\r\nexport class DynArrayReducer<T>\r\n{\r\n   #array: DataHost<T[]> = [null];\r\n\r\n   readonly #derived: AdapterDerived<T[], number, T>;\r\n\r\n   readonly #derivedPublicAPI: DerivedAPI<T[], number, T>;\r\n\r\n   readonly #filters: AdapterFilters<T>;\r\n\r\n   readonly #filtersData: { filters: DataFilter<T>[] } = { filters: [] };\r\n\r\n   readonly #index: Indexer<T>;\r\n\r\n   readonly #indexPublicAPI: IndexerAPI<number, T>;\r\n\r\n   #reversed: boolean = false;\r\n\r\n   readonly #sort: AdapterSort<T>;\r\n\r\n   #sortData: { compareFn: CompareFn<T> } = { compareFn: null };\r\n\r\n   #subscriptions = [];\r\n\r\n   #destroyed = false;\r\n\r\n   /**\r\n    * Initializes DynArrayReducer. Any iterable is supported for initial data. Take note that if `data` is an array it\r\n    * will be used as the host array and not copied. All non-array iterables otherwise create a new array / copy.\r\n    *\r\n    * @param [data] - Data iterable to store if array or copy otherwise.\r\n    */\r\n   constructor(data?: Iterable<T>|DataDynArray<T>)\r\n   {\r\n      let dataIterable = void 0;\r\n      let filters: Iterable<FilterFn<T> | DataFilter<T>> = void 0;\r\n      let sort: CompareFn<T> | DataSort<T> = void 0;\r\n\r\n      if (data === null)\r\n      {\r\n         throw new TypeError(`DynArrayReducer error: 'data' is not iterable.`);\r\n      }\r\n\r\n      if (data !== void 0 && typeof data !== 'object' && !DynReducerUtils.isIterable(data))\r\n      {\r\n         throw new TypeError(`DynArrayReducer error: 'data' is not iterable.`);\r\n      }\r\n\r\n      if (data !== void 0 && Symbol.iterator in (data as Iterable<T>))\r\n      {\r\n         dataIterable = data;\r\n      }\r\n      else if (data !== void 0 && ('data' in data || 'filters' in data || 'sort' in data))\r\n      {\r\n         if (data.data !== void 0 && !DynReducerUtils.isIterable(data.data))\r\n         {\r\n            throw new TypeError(`DynArrayReducer error (DataDynArray): 'data' attribute is not iterable.`);\r\n         }\r\n\r\n         dataIterable = data.data;\r\n\r\n         if (data.filters !== void 0)\r\n         {\r\n            if (DynReducerUtils.isIterable(data.filters))\r\n            {\r\n               filters = data.filters;\r\n            }\r\n            else\r\n            {\r\n               throw new TypeError(`DynArrayReducer error (DataDynArray): 'filters' attribute is not iterable.`);\r\n            }\r\n         }\r\n\r\n         if (data.sort !== void 0)\r\n         {\r\n            if (typeof data.sort === 'function')\r\n            {\r\n               sort = data.sort;\r\n            }\r\n            else if (typeof data.sort === 'object' && data.sort !== null)\r\n            {\r\n               sort = data.sort;\r\n            }\r\n            else\r\n            {\r\n               throw new TypeError(\r\n                `DynArrayReducer error (DataDynArray): 'sort' attribute is not a function or object.`);\r\n            }\r\n         }\r\n      }\r\n\r\n      // In the case of the main data being an array directly use the array otherwise create a copy.\r\n      if (dataIterable)\r\n      {\r\n         this.#array[0] = Array.isArray(dataIterable) ? dataIterable : [...dataIterable];\r\n      }\r\n\r\n      this.#index = new Indexer(this.#array, this.#updateSubscribers.bind(this));\r\n      this.#indexPublicAPI = new IndexerAPI<number, T>(this.#index);\r\n\r\n      this.#filters = new AdapterFilters(this.#indexPublicAPI.update, this.#filtersData);\r\n\r\n      this.#sort = new AdapterSort(this.#indexPublicAPI.update, this.#sortData);\r\n\r\n      this.#derived = new AdapterDerived(this.#array, this.#indexPublicAPI, DerivedArrayReducer);\r\n      this.#derivedPublicAPI = new DerivedAPI<T[], number, T>(this.#derived);\r\n\r\n      this.#index.initAdapters(this.#filtersData, this.#sortData, this.#derived);\r\n\r\n      // Add any filters and sort function defined by DataDynArray.\r\n      if (filters) { this.filters.add(...filters); }\r\n      if (sort) { this.sort.set(sort); }\r\n\r\n      // Invoke an custom initialization for child classes.\r\n      this.initialize();\r\n   }\r\n\r\n   /**\r\n    * Returns the internal data of this instance. Be careful!\r\n    *\r\n    * Note: if an array is set as initial data then that array is used as the internal data. If any changes are\r\n    * performed to the data externally do invoke {@link AdapterIndexer.index.update} with `true` to recalculate the\r\n    * index and notify all subscribers.\r\n    *\r\n    * @returns The internal data.\r\n    */\r\n   get data(): T[]|null { return this.#array[0]; }\r\n\r\n   /**\r\n    * @returns Derived public API.\r\n    */\r\n   get derived(): DerivedAPI<T[], number, T> { return this.#derivedPublicAPI; }\r\n\r\n   /**\r\n    * @returns The filters adapter.\r\n    */\r\n   get filters(): AdapterFilters<T> { return this.#filters; }\r\n\r\n   /**\r\n    * @returns Returns the Indexer public API.\r\n    */\r\n   get index(): IndexerAPI<number, T> { return this.#indexPublicAPI; }\r\n\r\n   /**\r\n    * Returns whether this instance is destroyed.\r\n    */\r\n   get destroyed(): boolean { return this.#destroyed; }\r\n\r\n   /**\r\n    * Gets the main data / items length.\r\n    *\r\n    * @returns {number} Main data / items length.\r\n    */\r\n   get length()\r\n   {\r\n      const array = this.#array[0];\r\n      return this.#index.active ? this.#indexPublicAPI.length :\r\n       array ? array.length : 0;\r\n   }\r\n\r\n   /**\r\n    * Gets current reversed state.\r\n    *\r\n    * @returns {boolean} Reversed state.\r\n    */\r\n   get reversed() { return this.#reversed; }\r\n\r\n   /**\r\n    * @returns The sort adapter.\r\n    */\r\n   get sort(): AdapterSort<T> { return this.#sort; }\r\n\r\n   /**\r\n    * Sets reversed state and notifies subscribers.\r\n    *\r\n    * @param reversed - New reversed state.\r\n    */\r\n   set reversed(reversed: boolean)\r\n   {\r\n      if (typeof reversed !== 'boolean')\r\n      {\r\n         throw new TypeError(`DynArrayReducer.reversed error: 'reversed' is not a boolean.`);\r\n      }\r\n\r\n      this.#reversed = reversed;\r\n      this.#index.reversed = reversed;\r\n\r\n      // Recalculate index and force an update to any subscribers.\r\n      this.index.update(true);\r\n   }\r\n\r\n   /**\r\n    * Removes all derived reducers, subscriptions, and cleans up all resources.\r\n    */\r\n   destroy()\r\n   {\r\n      if (this.#destroyed) { return; }\r\n\r\n      this.#destroyed = true;\r\n      this.#derived.destroy();\r\n\r\n      // Set the backing data to null and provide a final update.\r\n      this.#array = [null];\r\n      this.index.update(true);\r\n\r\n      // Remove all subscriptions.\r\n      this.#subscriptions.length = 0;\r\n\r\n      this.#index.destroy();\r\n      this.#filters.clear();\r\n      this.#sort.clear();\r\n   }\r\n\r\n   /**\r\n    * Provides a callback for custom reducers to initialize any data / custom configuration. This allows\r\n    * child classes to avoid implementing the constructor.\r\n    *\r\n    * @protected\r\n    */\r\n   initialize() {}\r\n\r\n   /**\r\n    * Removes internal data and pushes new data. This does not destroy any initial array set to internal data unless\r\n    * `replace` is set to true.\r\n    *\r\n    * @param data - New data to set to internal data.\r\n    *\r\n    * @param replace=false - New data to set to internal data.\r\n    */\r\n   setData(data: T[] | Iterable<T> | null, replace: boolean = false)\r\n   {\r\n      if (data !== null && !DynReducerUtils.isIterable(data))\r\n      {\r\n         throw new TypeError(`DynArrayReducer.setData error: 'data' is not iterable.`);\r\n      }\r\n\r\n      if (typeof replace !== 'boolean')\r\n      {\r\n         throw new TypeError(`DynArrayReducer.setData error: 'replace' is not a boolean.`);\r\n      }\r\n\r\n      const array = this.#array[0];\r\n\r\n      // If the array isn't defined or 'replace' is true then replace internal data with new array or create an array\r\n      // from an iterable.\r\n      if (!Array.isArray(array) || replace)\r\n      {\r\n         if (data)\r\n         {\r\n            this.#array[0] = Array.isArray(data) ? data : [...data];\r\n         }\r\n      }\r\n      else\r\n      {\r\n         if (data)\r\n         {\r\n            // Remove all entries in internal data. This will not replace any initially set array.\r\n            array.length = 0;\r\n\r\n            // Add all new data.\r\n            array.push(...data);\r\n         }\r\n         else\r\n         {\r\n            this.#array[0] = null;\r\n         }\r\n      }\r\n\r\n      // Recalculate index and force an update to any subscribers.\r\n      this.index.update(true);\r\n   }\r\n\r\n   /**\r\n    * Add a subscriber to this DynArrayReducer instance.\r\n    *\r\n    * @param handler - Callback function that is invoked on update / changes. Receives `this` reference.\r\n    *\r\n    * @returns Unsubscribe function.\r\n    */\r\n   subscribe(handler: (value: DynArrayReducer<T>) => void): () => void\r\n   {\r\n      this.#subscriptions.push(handler); // add handler to the array of subscribers\r\n\r\n      handler(this);                     // call handler with current value\r\n\r\n      // Return unsubscribe function.\r\n      return () =>\r\n      {\r\n         const index = this.#subscriptions.findIndex((sub) => sub === handler);\r\n         if (index >= 0) { this.#subscriptions.splice(index, 1); }\r\n      };\r\n   }\r\n\r\n   /**\r\n    * Updates subscribers on changes.\r\n    */\r\n   #updateSubscribers()\r\n   {\r\n      for (let cntr = 0; cntr < this.#subscriptions.length; cntr++) { this.#subscriptions[cntr](this); }\r\n   }\r\n\r\n   /**\r\n    * Provides an iterator for data stored in DynArrayReducer.\r\n    *\r\n    * @returns Generator / iterator of all data.\r\n    * @yields {T}\r\n    */\r\n   *[Symbol.iterator](): Generator<T, T, T>\r\n   {\r\n      const array = this.#array[0];\r\n\r\n      if (this.#destroyed || array === null || array?.length === 0) { return; }\r\n\r\n      if (this.#index.active)\r\n      {\r\n         for (const entry of this.index) { yield array[entry]; }\r\n      }\r\n      else\r\n      {\r\n         if (this.reversed)\r\n         {\r\n            for (let cntr = array.length; --cntr >= 0;) { yield array[cntr]; }\r\n         }\r\n         else\r\n         {\r\n            for (let cntr = 0; cntr < array.length; cntr++) { yield array[cntr]; }\r\n         }\r\n      }\r\n   }\r\n}\r\n","import {\r\n   AdapterIndexer,\r\n   DynReducerUtils } from '../common/index.js';\r\n\r\n/**\r\n */\r\nexport class Indexer<K, T> extends AdapterIndexer<Map<K, T>, K, T>\r\n{\r\n   /**\r\n    * @inheritDoc\r\n    */\r\n   createSortFn(): (a: K, b: K) => number\r\n   {\r\n      return (a, b) => this.sortData.compareFn(this.hostData[0].get(a), this.hostData[0].get(b));\r\n   }\r\n\r\n   /**\r\n    * Provides the custom filter / reduce step that is ~25-40% faster than implementing with `Array.reduce`.\r\n    *\r\n    * Note: Other loop unrolling techniques like Duff's Device gave a slight faster lower bound on large data sets,\r\n    * but the maintenance factor is not worth the extra complication.\r\n    *\r\n    * @returns New filtered index array.\r\n    */\r\n   reduceImpl(): K[]\r\n   {\r\n      const data = [];\r\n\r\n      const map = this.hostData[0];\r\n      if (!map) { return data; }\r\n\r\n      const filters = this.filtersData.filters;\r\n\r\n      let include = true;\r\n\r\n      const parentIndex = this.indexData.parent;\r\n\r\n      // Source index data is coming from an active parent index.\r\n      if (DynReducerUtils.isIterable(parentIndex) && parentIndex.active)\r\n      {\r\n         for (const key of parentIndex)\r\n         {\r\n            const value = map.get(key);\r\n            include = true;\r\n\r\n            for (let filCntr = 0, filLength = filters.length; filCntr < filLength; filCntr++)\r\n            {\r\n               if (!filters[filCntr].filter(value))\r\n               {\r\n                  include = false;\r\n                  break;\r\n               }\r\n            }\r\n\r\n            if (include) { data.push(key); }\r\n         }\r\n      }\r\n      else\r\n      {\r\n         for (const key of map.keys())\r\n         {\r\n            include = true;\r\n\r\n            const value = map.get(key);\r\n\r\n            for (let filCntr = 0, filLength = filters.length; filCntr < filLength; filCntr++)\r\n            {\r\n               if (!filters[filCntr].filter(value))\r\n               {\r\n                  include = false;\r\n                  break;\r\n               }\r\n            }\r\n\r\n            if (include) { data.push(key); }\r\n         }\r\n      }\r\n\r\n      return data;\r\n   }\r\n\r\n   /**\r\n    * Update the reducer indexes. If there are changes subscribers are notified. If data order is changed externally\r\n    * pass in true to force an update to subscribers.\r\n    *\r\n    * @param [force=false] - When true forces an update to subscribers.\r\n    */\r\n   update(force: boolean = false)\r\n   {\r\n      if (this.destroyed) { return; }\r\n\r\n      const oldIndex = this.indexData.index;\r\n      const oldHash = this.indexData.hash;\r\n\r\n      const map = this.hostData[0];\r\n      const parentIndex = this.indexData.parent;\r\n\r\n      // Clear index if there are no filters and no sort function or the index length doesn't match the item length.\r\n      if ((this.filtersData.filters.length === 0 && !this.sortData.compareFn) ||\r\n       (this.indexData.index && map?.size !== this.indexData.index.length))\r\n      {\r\n         this.indexData.index = null;\r\n      }\r\n\r\n      // If there are filters build new index.\r\n      if (this.filtersData.filters.length > 0)\r\n      {\r\n         this.indexData.index = this.reduceImpl();\r\n      }\r\n\r\n      // If the index isn't built yet and there is an active parent index then create it from the parent.\r\n      if (!this.indexData.index && parentIndex?.active)\r\n      {\r\n         this.indexData.index = [...parentIndex];\r\n      }\r\n\r\n      if (this.sortData.compareFn && map instanceof Map)\r\n      {\r\n         // If there is no index then create one with keys matching host item length.\r\n         if (!this.indexData.index) { this.indexData.index = this.indexData.index = [...map.keys()]; }\r\n\r\n         this.indexData.index.sort(this.sortFn);\r\n      }\r\n\r\n      this.calcHashUpdate(oldIndex, oldHash, force);\r\n\r\n      // Update all derived reducers.\r\n      this.derivedAdapter?.update(force);\r\n   }\r\n}\r\n","import {\r\n   AdapterDerived,\r\n   AdapterFilters,\r\n   AdapterSort,\r\n   DerivedAPI,\r\n   DynReducerUtils,\r\n   IndexerAPI }      from '../../common/index.js';\r\n\r\nimport { Indexer }   from '../Indexer.js';\r\n\r\nimport type {\r\n   IDerivedReducer,\r\n   CompareFn,\r\n   DataOptions,\r\n   DataFilter,\r\n   DataHost,\r\n   DataSort,\r\n   FilterFn }        from '../../types/index.js';\r\n\r\n/**\r\n * Provides the base implementation derived reducer for arrays / DynArrayReducer.\r\n */\r\nexport class DerivedMapReducer<K, T> implements IDerivedReducer<Map<K, T>, K, T>\r\n{\r\n   #map: DataHost<Map<K, T>>;\r\n\r\n   readonly #derived;\r\n\r\n   readonly #derivedPublicAPI;\r\n\r\n   readonly #filters: AdapterFilters<T>;\r\n\r\n   readonly #filtersData: { filters: DataFilter<T>[] } = { filters: [] };\r\n\r\n   readonly #index: Indexer<K, T>;\r\n\r\n   readonly #indexPublicAPI: IndexerAPI<K, T>;\r\n\r\n   #reversed: boolean = false;\r\n\r\n   readonly #sort: AdapterSort<T>;\r\n\r\n   #sortData: { compareFn: CompareFn<T> } = { compareFn: null };\r\n\r\n   #subscriptions = [];\r\n\r\n   #destroyed = false;\r\n\r\n   /**\r\n    * @param map - Data host Map.\r\n    *\r\n    * @param parentIndex - Parent indexer.\r\n    *\r\n    * @param options - Any filters and sort functions to apply.\r\n    */\r\n   constructor(map: DataHost<Map<K, T>>, parentIndex: IndexerAPI<K, T>, options: DataOptions<T>)\r\n   {\r\n      this.#map = map;\r\n\r\n      this.#index = new Indexer(this.#map, this.#updateSubscribers.bind(this), parentIndex);\r\n      this.#indexPublicAPI = new IndexerAPI<K, T>(this.#index);\r\n\r\n      this.#filters = new AdapterFilters(this.#indexPublicAPI.update, this.#filtersData);\r\n\r\n      this.#sort = new AdapterSort(this.#indexPublicAPI.update, this.#sortData);\r\n\r\n      this.#derived = new AdapterDerived(this.#map, this.#indexPublicAPI, DerivedMapReducer);\r\n      this.#derivedPublicAPI = new DerivedAPI<Map<K, T>, K, T>(this.#derived);\r\n\r\n      this.#index.initAdapters(this.#filtersData, this.#sortData, this.#derived);\r\n\r\n      let filters: Iterable<FilterFn<T>|DataFilter<T>> = void 0;\r\n      let sort: CompareFn<T> | DataSort<T> = void 0;\r\n\r\n      if (options !== void 0 && ('filters' in options || 'sort' in options))\r\n      {\r\n         if (options.filters !== void 0)\r\n         {\r\n            if (DynReducerUtils.isIterable(options.filters))\r\n            {\r\n               filters = options.filters;\r\n            }\r\n            else\r\n            {\r\n               throw new TypeError(\r\n                `DerivedMapReducer error (DataDerivedOptions): 'filters' attribute is not iterable.`);\r\n            }\r\n         }\r\n\r\n         if (options.sort !== void 0)\r\n         {\r\n            if (typeof options.sort === 'function')\r\n            {\r\n               sort = options.sort;\r\n            }\r\n            else if (typeof options.sort === 'object' && options.sort !== null)\r\n            {\r\n               sort = options.sort;\r\n            }\r\n            else\r\n            {\r\n               throw new TypeError(\r\n                `DerivedMapReducer error (DataDerivedOptions): 'sort' attribute is not a function or object.`);\r\n            }\r\n         }\r\n      }\r\n\r\n      // Add any filters and sort function defined by DataDynArray.\r\n      if (filters) { this.filters.add(...filters); }\r\n      if (sort) { this.sort.set(sort); }\r\n\r\n      // Invoke an custom initialization for child classes.\r\n      this.initialize();\r\n   }\r\n\r\n   /**\r\n    * Returns the internal data of this instance. Be careful!\r\n    *\r\n    * Note: The returned map is the same map set by the main reducer. If any changes are performed to the data\r\n    * externally do invoke {@link IndexerAPI.update} with `true` to recalculate the index and notify all subscribers.\r\n    *\r\n    * @returns The internal data.\r\n    */\r\n   get data(): Map<K, T> | null { return this.#map[0]; }\r\n\r\n   /**\r\n    * @returns Derived public API.\r\n    */\r\n   get derived(): DerivedAPI<Map<K, T>, K, T> { return this.#derivedPublicAPI; }\r\n\r\n   /**\r\n    * @returns The filters adapter.\r\n    */\r\n   get filters(): AdapterFilters<T> { return this.#filters; }\r\n\r\n   /**\r\n    * Returns the Indexer public API.\r\n    *\r\n    * @returns Indexer API - is also iterable.\r\n    */\r\n   get index(): IndexerAPI<K, T> { return this.#indexPublicAPI; }\r\n\r\n   /**\r\n    * Returns whether this derived reducer is destroyed.\r\n    */\r\n   get destroyed(): boolean { return this.#destroyed; }\r\n\r\n   /**\r\n    * @returns Main data / items length or indexed length.\r\n    */\r\n   get length(): number\r\n   {\r\n      const map = this.#map[0];\r\n\r\n      return this.#index.active ? this.index.length :\r\n       map ? map.size : 0;\r\n   }\r\n\r\n   /**\r\n    * @returns Gets current reversed state.\r\n    */\r\n   get reversed(): boolean { return this.#reversed; }\r\n\r\n   /**\r\n    * @returns The sort adapter.\r\n    */\r\n   get sort(): AdapterSort<T> { return this.#sort; }\r\n\r\n   /**\r\n    * Sets reversed state and notifies subscribers.\r\n    *\r\n    * @param reversed - New reversed state.\r\n    */\r\n   set reversed(reversed: boolean)\r\n   {\r\n      if (typeof reversed !== 'boolean')\r\n      {\r\n         throw new TypeError(`DerivedMapReducer.reversed error: 'reversed' is not a boolean.`);\r\n      }\r\n\r\n      this.#reversed = reversed;\r\n      this.#index.reversed = reversed;\r\n\r\n      // Recalculate index and force an update to any subscribers.\r\n      this.index.update(true);\r\n   }\r\n\r\n   /**\r\n    * Removes all derived reducers, subscriptions, and cleans up all resources.\r\n    */\r\n   destroy()\r\n   {\r\n      this.#destroyed = true;\r\n\r\n      // Remove any external data reference and perform a final update.\r\n      this.#map = [null];\r\n      this.#index.update(true);\r\n\r\n      // Remove all subscriptions.\r\n      this.#subscriptions.length = 0;\r\n\r\n      this.#derived.destroy();\r\n      this.#index.destroy();\r\n      this.#filters.clear();\r\n      this.#sort.clear();\r\n   }\r\n\r\n   /**\r\n    * Provides a callback for custom derived reducers to initialize any data / custom configuration. This allows\r\n    * child classes to avoid implementing the constructor.\r\n    *\r\n    * @protected\r\n    */\r\n   initialize() {}\r\n\r\n   /**\r\n    * Provides an iterator for data stored in DerivedMapReducer.\r\n    *\r\n    * @returns Generator / iterator of all data.\r\n    */\r\n   *[Symbol.iterator](): Generator<T, T, T>\r\n   {\r\n      const map = this.#map[0];\r\n\r\n      if (this.#destroyed || map === null || map?.size === 0) { return; }\r\n\r\n      if (this.#index.active)\r\n      {\r\n         for (const key of this.index) { yield map.get(key); }\r\n      }\r\n      else\r\n      {\r\n         if (this.reversed)\r\n         {\r\n            // TODO: Not efficient due to creating temporary values array.\r\n            const values = [...map.values()];\r\n            for (let cntr = values.length; --cntr >= 0;) { yield values[cntr]; }\r\n         }\r\n         else\r\n         {\r\n            for (const value of map.values()) { yield value; }\r\n         }\r\n      }\r\n   }\r\n\r\n// -------------------------------------------------------------------------------------------------------------------\r\n\r\n   /**\r\n    * Subscribe to this DerivedMapReducer.\r\n    *\r\n    * @param handler - Callback function that is invoked on update / changes. Receives `this` reference.\r\n    *\r\n    * @returns Unsubscribe function.\r\n    */\r\n   subscribe(handler: (value: DerivedMapReducer<K, T>) => void): () => void\r\n   {\r\n      this.#subscriptions.push(handler); // add handler to the array of subscribers\r\n\r\n      handler(this);                     // call handler with current value\r\n\r\n      // Return unsubscribe function.\r\n      return () =>\r\n      {\r\n         const index = this.#subscriptions.findIndex((sub) => sub === handler);\r\n         if (index >= 0) { this.#subscriptions.splice(index, 1); }\r\n      };\r\n   }\r\n\r\n   /**\r\n    * Updates subscribers on changes.\r\n    */\r\n   #updateSubscribers()\r\n   {\r\n      for (let cntr = 0; cntr < this.#subscriptions.length; cntr++) { this.#subscriptions[cntr](this); }\r\n   }\r\n}\r\n","import {\r\n   AdapterDerived,\r\n   AdapterFilters,\r\n   AdapterSort,\r\n   DerivedAPI,\r\n   DynReducerUtils,\r\n   IndexerAPI }               from '../common/index.js';\r\n\r\nimport { Indexer }            from './Indexer.js';\r\n\r\nimport type {\r\n   CompareFn,\r\n   DataDynMap,\r\n   DataFilter,\r\n   DataHost,\r\n   DataSort,\r\n   FilterFn }                 from '../types/index.js';\r\n\r\nimport { DerivedMapReducer }  from './derived/DerivedMapReducer.js';\r\n\r\n/**\r\n * Provides a managed Map with non-destructive reducing / filtering / sorting capabilities with subscription /\r\n * Svelte store support.\r\n */\r\nexport class DynMapReducer<K, T>\r\n{\r\n   #map: DataHost<Map<K, T>> = [null];\r\n\r\n   readonly #derived: AdapterDerived<Map<K, T>, K, T>;\r\n\r\n   readonly #derivedPublicAPI: DerivedAPI<Map<K, T>, K, T>;\r\n\r\n   readonly #filters: AdapterFilters<T>;\r\n\r\n   readonly #filtersData: { filters: DataFilter<T>[] } = { filters: [] };\r\n\r\n   readonly #index: Indexer<K, T>;\r\n\r\n   readonly #indexPublicAPI: IndexerAPI<K, T>;\r\n\r\n   #reversed: boolean = false;\r\n\r\n   readonly #sort: AdapterSort<T>;\r\n\r\n   #sortData: { compareFn: CompareFn<T> } = { compareFn: null };\r\n\r\n   #subscriptions = [];\r\n\r\n   #destroyed = false;\r\n\r\n   /**\r\n    * Initializes DynMapReducer. Any iterable is supported for initial data. Take note that if `data` is an array it\r\n    * will be used as the host array and not copied. All non-array iterables otherwise create a new array / copy.\r\n    *\r\n    * @param [data] - Data iterable to store if array or copy otherwise.\r\n    */\r\n   constructor(data?: Map<K, T> | DataDynMap<K, T>)\r\n   {\r\n      let dataMap: Map<K, T> = void 0;\r\n      let filters: Iterable<FilterFn<T> | DataFilter<T>> = void 0;\r\n      let sort: CompareFn<T> | DataSort<T> = void 0;\r\n\r\n      if (data === null)\r\n      {\r\n         throw new TypeError(`DynMapReducer error: 'data' is not an object or Map.`);\r\n      }\r\n\r\n      if (data !== void 0 && typeof data !== 'object' && !(data as any instanceof Map))\r\n      {\r\n         throw new TypeError(`DynMapReducer error: 'data' is not an object or Map.`);\r\n      }\r\n\r\n      if (data !== void 0 && data instanceof Map)\r\n      {\r\n         dataMap = data;\r\n      }\r\n      else if (data !== void 0 && ('data' in data || 'filters' in data || 'sort' in data))\r\n      {\r\n         if (data.data !== void 0 && !(data.data instanceof Map))\r\n         {\r\n            throw new TypeError(`DynMapReducer error (DataDynMap): 'data' attribute is not a Map.`);\r\n         }\r\n\r\n         dataMap = data.data;\r\n\r\n         if (data.filters !== void 0)\r\n         {\r\n            if (DynReducerUtils.isIterable(data.filters))\r\n            {\r\n               filters = data.filters;\r\n            }\r\n            else\r\n            {\r\n               throw new TypeError(`DynMapReducer error (DataDynMap): 'filters' attribute is not iterable.`);\r\n            }\r\n         }\r\n\r\n         if (data.sort !== void 0)\r\n         {\r\n            if (typeof data.sort === 'function')\r\n            {\r\n               sort = data.sort;\r\n            }\r\n            else if (typeof data.sort === 'object' && data.sort !== null)\r\n            {\r\n               sort = data.sort;\r\n            }\r\n            else\r\n            {\r\n               throw new TypeError(\r\n                `DynMapReducer error (DataDynMap): 'sort' attribute is not a function or object.`);\r\n            }\r\n         }\r\n      }\r\n\r\n      // In the case of the main data being an array directly use the array otherwise create a copy.\r\n      if (dataMap)\r\n      {\r\n         this.#map[0] = dataMap;\r\n      }\r\n\r\n      this.#index = new Indexer(this.#map, this.#updateSubscribers.bind(this));\r\n      this.#indexPublicAPI = new IndexerAPI<K, T>(this.#index);\r\n\r\n      this.#filters = new AdapterFilters(this.#indexPublicAPI.update, this.#filtersData);\r\n\r\n      this.#sort = new AdapterSort(this.#indexPublicAPI.update, this.#sortData);\r\n\r\n      this.#derived = new AdapterDerived(this.#map, this.#indexPublicAPI, DerivedMapReducer);\r\n      this.#derivedPublicAPI = new DerivedAPI<Map<K, T>, K, T>(this.#derived);\r\n\r\n      this.#index.initAdapters(this.#filtersData, this.#sortData, this.#derived);\r\n\r\n      // Add any filters and sort function defined by DataDynMap.\r\n      if (filters) { this.filters.add(...filters); }\r\n      if (sort) { this.sort.set(sort); }\r\n\r\n      // Invoke an custom initialization for child classes.\r\n      this.initialize();\r\n   }\r\n\r\n   /**\r\n    * Returns the internal data of this instance. Be careful!\r\n    *\r\n    * Note: When a map is set as data then that map is used as the internal data. If any changes are\r\n    * performed to the data externally do invoke {@link AdapterIndexer.index.update} with `true` to recalculate the\r\n    * index and notify all subscribers.\r\n    *\r\n    * @returns The internal data.\r\n    */\r\n   get data(): Map<K, T> | null { return this.#map[0]; }\r\n\r\n   /**\r\n    * @returns Derived public API.\r\n    */\r\n   get derived(): DerivedAPI<Map<K, T>, K, T> { return this.#derivedPublicAPI; }\r\n\r\n   /**\r\n    * @returns The filters adapter.\r\n    */\r\n   get filters(): AdapterFilters<T> { return this.#filters; }\r\n\r\n   /**\r\n    * @returns Returns the Indexer public API.\r\n    */\r\n   get index(): IndexerAPI<K, T> { return this.#indexPublicAPI; }\r\n\r\n   /**\r\n    * Returns whether this instance is destroyed.\r\n    */\r\n   get destroyed(): boolean { return this.#destroyed; }\r\n\r\n   /**\r\n    * Gets the main data / items length.\r\n    *\r\n    * @returns {number} Main data / items length.\r\n    */\r\n   get length()\r\n   {\r\n      const map = this.#map[0];\r\n      return this.#index.active ? this.#indexPublicAPI.length :\r\n       map ? map.size : 0;\r\n   }\r\n\r\n   /**\r\n    * Gets current reversed state.\r\n    *\r\n    * @returns {boolean} Reversed state.\r\n    */\r\n   get reversed() { return this.#reversed; }\r\n\r\n   /**\r\n    * @returns The sort adapter.\r\n    */\r\n   get sort(): AdapterSort<T> { return this.#sort; }\r\n\r\n   /**\r\n    * Sets reversed state and notifies subscribers.\r\n    *\r\n    * @param reversed - New reversed state.\r\n    */\r\n   set reversed(reversed: boolean)\r\n   {\r\n      if (typeof reversed !== 'boolean')\r\n      {\r\n         throw new TypeError(`DynMapReducer.reversed error: 'reversed' is not a boolean.`);\r\n      }\r\n\r\n      this.#reversed = reversed;\r\n      this.#index.reversed = reversed;\r\n\r\n      // Recalculate index and force an update to any subscribers.\r\n      this.index.update(true);\r\n   }\r\n\r\n   /**\r\n    * Removes all derived reducers, subscriptions, and cleans up all resources.\r\n    */\r\n   destroy()\r\n   {\r\n      if (this.#destroyed) { return; }\r\n\r\n      this.#destroyed = true;\r\n      this.#derived.destroy();\r\n\r\n      // Set the backing data to null and provide a final update.\r\n      this.#map = [null];\r\n      this.index.update(true);\r\n\r\n      // Remove all subscriptions.\r\n      this.#subscriptions.length = 0;\r\n\r\n      this.#index.destroy();\r\n      this.#filters.clear();\r\n      this.#sort.clear();\r\n   }\r\n\r\n   /**\r\n    * Provides a callback for custom reducers to initialize any data / custom configuration. This allows\r\n    * child classes to avoid implementing the constructor.\r\n    *\r\n    * @protected\r\n    */\r\n   initialize() {}\r\n\r\n   /**\r\n    * Removes internal data and pushes new data. This does not destroy any initial array set to internal data unless\r\n    * `replace` is set to true.\r\n    *\r\n    * @param data - New data to set to internal data.\r\n    *\r\n    * @param replace=false - New data to set to internal data.\r\n    */\r\n   setData(data: Map<K, T> | null, replace: boolean = false)\r\n   {\r\n      if (data !== null && !(data instanceof Map))\r\n      {\r\n         throw new TypeError(`DynMapReducer.setData error: 'data' is not iterable.`);\r\n      }\r\n\r\n      if (typeof replace !== 'boolean')\r\n      {\r\n         throw new TypeError(`DynMapReducer.setData error: 'replace' is not a boolean.`);\r\n      }\r\n\r\n      const map = this.#map[0];\r\n\r\n      // If the array isn't defined or 'replace' is true then replace internal data with new array or create an array\r\n      // from an iterable.\r\n      if (!(map instanceof Map) || replace)\r\n      {\r\n         this.#map[0] = data instanceof Map ? data : null;\r\n      }\r\n      else if (data instanceof Map && map instanceof Map)\r\n      {\r\n         // Create a set of all current entry IDs.\r\n         const removeKeySet = new Set(map.keys());\r\n\r\n         for (const key of data.keys())\r\n         {\r\n            map.set(key, data.get(key));\r\n\r\n            if (removeKeySet.has(key)) { removeKeySet.delete(key); }\r\n         }\r\n\r\n         // Remove entries that are no longer in data.\r\n         for (const key of removeKeySet) { map.delete(key); }\r\n      }\r\n      else if (data === null)\r\n      {\r\n         this.#map[0] = null;\r\n      }\r\n\r\n      // Recalculate index and force an update to any subscribers.\r\n      this.index.update(true);\r\n   }\r\n\r\n   /**\r\n    * Add a subscriber to this DynMapReducer instance.\r\n    *\r\n    * @param handler - Callback function that is invoked on update / changes. Receives `this` reference.\r\n    *\r\n    * @returns Unsubscribe function.\r\n    */\r\n   subscribe(handler: (value: DynMapReducer<K, T>) => void): () => void\r\n   {\r\n      this.#subscriptions.push(handler); // add handler to the array of subscribers\r\n\r\n      handler(this);                     // call handler with current value\r\n\r\n      // Return unsubscribe function.\r\n      return () =>\r\n      {\r\n         const index = this.#subscriptions.findIndex((sub) => sub === handler);\r\n         if (index >= 0) { this.#subscriptions.splice(index, 1); }\r\n      };\r\n   }\r\n\r\n   /**\r\n    * Updates subscribers on changes.\r\n    */\r\n   #updateSubscribers()\r\n   {\r\n      for (let cntr = 0; cntr < this.#subscriptions.length; cntr++) { this.#subscriptions[cntr](this); }\r\n   }\r\n\r\n   /**\r\n    * Provides an iterator for data stored in DynMapReducer.\r\n    *\r\n    * @returns Generator / iterator of all data.\r\n    * @yields {T}\r\n    */\r\n   *[Symbol.iterator](): Generator<T, T, T>\r\n   {\r\n      const map = this.#map[0];\r\n\r\n      if (this.#destroyed || map === null || map?.size === 0) { return; }\r\n\r\n      if (this.#index.active)\r\n      {\r\n         for (const key of this.index) { yield map.get(key); }\r\n      }\r\n      else\r\n      {\r\n         if (this.reversed)\r\n         {\r\n            // TODO: Not efficient due to creating temporary values array.\r\n            const values = [...map.values()];\r\n            for (let cntr = values.length; --cntr >= 0;) { yield values[cntr]; }\r\n         }\r\n         else\r\n         {\r\n            for (const value of map.values()) { yield value; }\r\n         }\r\n      }\r\n   }\r\n}\r\n","/**\r\n * Provides a basic test for a given variable to test if it has the shape of a readable store by having a `subscribe`\r\n * function.\r\n *\r\n * Note: functions are also objects, so test that the variable might be a function w/ a `subscribe` function.\r\n *\r\n * @param {*}  store - variable to test that might be a store.\r\n *\r\n * @returns {boolean} Whether the variable tested has the shape of a store.\r\n */\r\nexport function isReadableStore(store)\r\n{\r\n   if (store === null || store === void 0) { return false; }\r\n\r\n   switch (typeof store)\r\n   {\r\n      case 'function':\r\n      case 'object':\r\n         return typeof store.subscribe === 'function';\r\n   }\r\n\r\n   return false;\r\n}\r\n\r\n/**\r\n * Provides a basic test for a given variable to test if it has the shape of a writable store by having a `subscribe`\r\n * function and an `update` function.\r\n *\r\n * Note: functions are also objects, so test that the variable might be a function w/ a `subscribe` function.\r\n *\r\n * @param {*}  store - variable to test that might be a store.\r\n *\r\n * @returns {boolean} Whether the variable tested has the shape of a store.\r\n */\r\nexport function isUpdatableStore(store)\r\n{\r\n   if (store === null || store === void 0) { return false; }\r\n\r\n   switch (typeof store)\r\n   {\r\n      case 'function':\r\n      case 'object':\r\n         return typeof store.subscribe === 'function' && typeof store.update === 'function';\r\n   }\r\n\r\n   return false;\r\n}\r\n\r\n/**\r\n * Provides a basic test for a given variable to test if it has the shape of a writable store by having a `subscribe`\r\n * `set`, and `update` functions.\r\n *\r\n * Note: functions are also objects, so test that the variable might be a function w/ `subscribe` & `set` functions.\r\n *\r\n * @param {*}  store - variable to test that might be a store.\r\n *\r\n * @returns {boolean} Whether the variable tested has the shape of a store.\r\n */\r\nexport function isWritableStore(store)\r\n{\r\n   if (store === null || store === void 0) { return false; }\r\n\r\n   switch (typeof store)\r\n   {\r\n      case 'function':\r\n      case 'object':\r\n         return typeof store.subscribe === 'function' && typeof store.set === 'function';\r\n   }\r\n\r\n   return false;\r\n}\r\n\r\n/**\r\n * Subscribes to the given store with the update function provided and ignores the first automatic\r\n * update. All future updates are dispatched to the update function.\r\n *\r\n * @param {import('svelte/store').Readable | import('svelte/store').Writable} store -\r\n *  Store to subscribe to...\r\n *\r\n * @param {import('svelte/store').Updater} update - function to receive future updates.\r\n *\r\n * @returns {import('svelte/store').Unsubscriber} Store unsubscribe function.\r\n */\r\nexport function subscribeIgnoreFirst(store, update)\r\n{\r\n   let firedFirst = false;\r\n\r\n   return store.subscribe((value) => {\r\n      if (!firedFirst)\r\n      {\r\n         firedFirst = true;\r\n      }\r\n      else {\r\n         update(value);\r\n      }\r\n   })\r\n}\r\n\r\n/**\r\n * Subscribes to the given store with two update functions provided. The first function is invoked on the initial\r\n * subscription. All future updates are dispatched to the update function.\r\n *\r\n * @param {import('svelte/store').Readable | import('svelte/store').Writable} store -\r\n *  Store to subscribe to...\r\n *\r\n * @param {import('svelte/store').Updater} first - Function to receive first update.\r\n *\r\n * @param {import('svelte/store').Updater} update - Function to receive future updates.\r\n *\r\n * @returns {import('svelte/store').Unsubscriber} Store unsubscribe function.\r\n */\r\nexport function subscribeFirstRest(store, first, update)\r\n{\r\n   let firedFirst = false;\r\n\r\n   return store.subscribe((value) => {\r\n      if (!firedFirst)\r\n      {\r\n         firedFirst = true;\r\n         first(value);\r\n      }\r\n      else {\r\n         update(value);\r\n      }\r\n   })\r\n}\r\n","// src/generator.ts\nimport {writable as ogWritable, get as ogGet} from \"svelte/store\";\nimport {run_all, noop, is_function} from \"svelte/internal\";\nfunction isSimpleDeriver(deriver) {\n  return deriver.length < 2;\n}\nfunction generator(storage) {\n  function readable(key, value, start) {\n    return {\n      subscribe: writable(key, value, start).subscribe\n    };\n  }\n  function writable(key, value, start = noop) {\n    function wrap_start(ogSet) {\n      return start(function wrap_set(new_value) {\n        if (storage) {\n          storage.setItem(key, JSON.stringify(new_value));\n        }\n        return ogSet(new_value);\n      });\n    }\n    if (storage) {\n      const storageValue = storage.getItem(key);\n      try {\n        if (storageValue) {\n          value = JSON.parse(storageValue);\n        }\n      } catch (err) {\n      }\n      storage.setItem(key, JSON.stringify(value));\n    }\n    const ogStore = ogWritable(value, start ? wrap_start : void 0);\n    function set(new_value) {\n      if (storage) {\n        storage.setItem(key, JSON.stringify(new_value));\n      }\n      ogStore.set(new_value);\n    }\n    function update(fn) {\n      set(fn(ogGet(ogStore)));\n    }\n    function subscribe(run, invalidate = noop) {\n      return ogStore.subscribe(run, invalidate);\n    }\n    return {set, update, subscribe};\n  }\n  function derived(key, stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single ? [stores] : stores;\n    if (storage && storage.getItem(key)) {\n      try {\n        initial_value = JSON.parse(storage.getItem(key));\n      } catch (err) {\n      }\n    }\n    return readable(key, initial_value, (set) => {\n      let inited = false;\n      const values = [];\n      let pending = 0;\n      let cleanup = noop;\n      const sync = () => {\n        if (pending) {\n          return;\n        }\n        cleanup();\n        const input = single ? values[0] : values;\n        if (isSimpleDeriver(fn)) {\n          set(fn(input));\n        } else {\n          const result = fn(input, set);\n          cleanup = is_function(result) ? result : noop;\n        }\n      };\n      const unsubscribers = stores_array.map((store, i) => store.subscribe((value) => {\n        values[i] = value;\n        pending &= ~(1 << i);\n        if (inited) {\n          sync();\n        }\n      }, () => {\n        pending |= 1 << i;\n      }));\n      inited = true;\n      sync();\n      return function stop() {\n        run_all(unsubscribers);\n        cleanup();\n      };\n    });\n  }\n  return {\n    readable,\n    writable,\n    derived,\n    get: ogGet\n  };\n}\n\nexport {\n  generator\n};\n","import {\n  generator\n} from \"./chunk.PXUOYU5R.mjs\";\n\n// src/local.ts\nvar storage = typeof window !== \"undefined\" ? window.localStorage : void 0;\nvar g = generator(storage);\nvar readable = g.readable;\nvar writable = g.writable;\nvar derived = g.derived;\nvar get = g.get;\n\nexport {\n  readable,\n  writable,\n  derived,\n  get\n};\n","import { writable }  from 'svelte-persistent-store/local';\r\n\r\n/**\r\n * @typedef {import('svelte/store').Writable} LSStore - The backing Svelte store; a writable w/ get method attached.\r\n */\r\n\r\nexport class LocalStorage\r\n{\r\n   /**\r\n    * @type {Map<string, LSStore>}\r\n    */\r\n   #stores = new Map();\r\n\r\n   /**\r\n    * Creates a new LSStore for the given key.\r\n    *\r\n    * @param {string}   key - Key to lookup in stores map.\r\n    *\r\n    * @param {boolean}  [defaultValue] - A default value to set for the store.\r\n    *\r\n    * @returns {LSStore} The new LSStore.\r\n    */\r\n   static #createStore(key, defaultValue = void 0)\r\n   {\r\n      try\r\n      {\r\n         const value = localStorage.getItem(key);\r\n         if (value !== null) { defaultValue = value === 'undefined' ? void 0 : JSON.parse(value); }\r\n      }\r\n      catch (err) { /**/ }\r\n\r\n      return writable(key, defaultValue);\r\n   }\r\n\r\n   /**\r\n    * Gets a store from the LSStore Map or creates a new store for the key and a given default value.\r\n    *\r\n    * @param {string}               key - Key to lookup in stores map.\r\n    *\r\n    * @param {boolean}              [defaultValue] - A default value to set for the store.\r\n    *\r\n    * @returns {LSStore} The store for the given key.\r\n    */\r\n   #getStore(key, defaultValue = void 0)\r\n   {\r\n      let store = this.#stores.get(key);\r\n      if (store === void 0)\r\n      {\r\n         store = LocalStorage.#createStore(key, defaultValue);\r\n         this.#stores.set(key, store);\r\n      }\r\n\r\n      return store;\r\n   }\r\n\r\n   /**\r\n    * Get value from the localStorage.\r\n    *\r\n    * @param {string}   key - Key to lookup in localStorage.\r\n    *\r\n    * @param {*}        [defaultValue] - A default value to return if key not present in session storage.\r\n    *\r\n    * @returns {*} Value from session storage or if not defined any default value provided.\r\n    */\r\n   getItem(key, defaultValue)\r\n   {\r\n      let value = defaultValue;\r\n\r\n      const storageValue = localStorage.getItem(key);\r\n\r\n      if (storageValue !== null)\r\n      {\r\n         try\r\n         {\r\n            value = storageValue === 'undefined' ? void 0 : JSON.parse(storageValue);\r\n         } catch (err)\r\n         {\r\n            value = defaultValue;\r\n         }\r\n      }\r\n      else if (defaultValue !== void 0)\r\n      {\r\n         try\r\n         {\r\n            const newValue = JSON.stringify(defaultValue);\r\n\r\n            // If there is no existing storage value and defaultValue is defined the storage value needs to be set.\r\n            localStorage.setItem(key, newValue === 'undefined' ? void 0 : newValue);\r\n         }\r\n         catch (err) { /* */ }\r\n      }\r\n\r\n      return value;\r\n   }\r\n\r\n   /**\r\n    * Returns the backing Svelte store for the given key; potentially sets a default value if the key\r\n    * is not already set.\r\n    *\r\n    * @param {string}   key - Key to lookup in localStorage.\r\n    *\r\n    * @param {*}        [defaultValue] - A default value to return if key not present in session storage.\r\n    *\r\n    * @returns {LSStore} The Svelte store for this key.\r\n    */\r\n   getStore(key, defaultValue)\r\n   {\r\n      return this.#getStore(key, defaultValue);\r\n   }\r\n\r\n   /**\r\n    * Sets the value for the given key in localStorage.\r\n    *\r\n    * @param {string}   key - Key to lookup in localStorage.\r\n    *\r\n    * @param {*}        value - A value to set for this key.\r\n    */\r\n   setItem(key, value)\r\n   {\r\n      const store = this.#getStore(key);\r\n      store.set(value);\r\n   }\r\n\r\n   /**\r\n    * Convenience method to swap a boolean value stored in session storage.\r\n    *\r\n    * @param {string}   key - Key to lookup in localStorage.\r\n    *\r\n    * @param {boolean}  [defaultValue] - A default value to return if key not present in session storage.\r\n    *\r\n    * @returns {boolean} The boolean swap for the given key.\r\n    */\r\n   swapItemBoolean(key, defaultValue)\r\n   {\r\n      const store = this.#getStore(key, defaultValue);\r\n\r\n      let currentValue = false;\r\n\r\n      try\r\n      {\r\n         currentValue = !!JSON.parse(localStorage.getItem(key));\r\n      }\r\n      catch (err) { /**/ }\r\n\r\n      const newValue = typeof currentValue === 'boolean' ? !currentValue : false;\r\n\r\n      store.set(newValue);\r\n      return newValue;\r\n   }\r\n}\r\n","import {\n  generator\n} from \"./chunk.PXUOYU5R.mjs\";\n\n// src/session.ts\nvar storage = typeof window !== \"undefined\" ? window.sessionStorage : void 0;\nvar g = generator(storage);\nvar readable = g.readable;\nvar writable = g.writable;\nvar derived = g.derived;\nvar get = g.get;\n\nexport {\n  readable,\n  writable,\n  derived,\n  get\n};\n","import { writable }  from 'svelte-persistent-store/session';\r\n\r\n/**\r\n * @typedef {import('svelte/store').Writable} SSStore - The backing Svelte store; a writable w/ get method attached.\r\n */\r\n\r\nexport class SessionStorage\r\n{\r\n   /**\r\n    * @type {Map<string, SSStore>}\r\n    */\r\n   #stores = new Map();\r\n\r\n   /**\r\n    * Creates a new SSStore for the given key.\r\n    *\r\n    * @param {string}   key - Key to lookup in stores map.\r\n    *\r\n    * @param {boolean}  [defaultValue] - A default value to set for the store.\r\n    *\r\n    * @returns {SSStore} The new SSStore.\r\n    */\r\n   static #createStore(key, defaultValue = void 0)\r\n   {\r\n      try\r\n      {\r\n         const value = sessionStorage.getItem(key);\r\n         if (value !== null) { defaultValue = value === 'undefined' ? void 0 : JSON.parse(value); }\r\n      }\r\n      catch (err) { /**/ }\r\n\r\n      return writable(key, defaultValue);\r\n   }\r\n\r\n   /**\r\n    * Gets a store from the SSStore Map or creates a new store for the key and a given default value.\r\n    *\r\n    * @param {string}               key - Key to lookup in stores map.\r\n    *\r\n    * @param {boolean}              [defaultValue] - A default value to set for the store.\r\n    *\r\n    * @returns {SSStore} The store for the given key.\r\n    */\r\n   #getStore(key, defaultValue = void 0)\r\n   {\r\n      let store = this.#stores.get(key);\r\n      if (store === void 0)\r\n      {\r\n         store = SessionStorage.#createStore(key, defaultValue);\r\n         this.#stores.set(key, store);\r\n      }\r\n\r\n      return store;\r\n   }\r\n\r\n   /**\r\n    * Get value from the sessionStorage.\r\n    *\r\n    * @param {string}   key - Key to lookup in sessionStorage.\r\n    *\r\n    * @param {*}        [defaultValue] - A default value to return if key not present in session storage.\r\n    *\r\n    * @returns {*} Value from session storage or if not defined any default value provided.\r\n    */\r\n   getItem(key, defaultValue)\r\n   {\r\n      let value = defaultValue;\r\n\r\n      const storageValue = sessionStorage.getItem(key);\r\n\r\n      if (storageValue !== null)\r\n      {\r\n         try\r\n         {\r\n            value = storageValue === 'undefined' ? void 0 : JSON.parse(storageValue);\r\n         } catch (err)\r\n         {\r\n            value = defaultValue;\r\n         }\r\n      }\r\n      else if (defaultValue !== void 0)\r\n      {\r\n         try\r\n         {\r\n            const newValue = JSON.stringify(defaultValue);\r\n\r\n            // If there is no existing storage value and defaultValue is defined the storage value needs to be set.\r\n            sessionStorage.setItem(key, newValue === 'undefined' ? void 0 : newValue);\r\n         }\r\n         catch (err) { /* */ }\r\n      }\r\n\r\n      return value;\r\n   }\r\n\r\n   /**\r\n    * Returns the backing Svelte store for the given key; potentially sets a default value if the key\r\n    * is not already set.\r\n    *\r\n    * @param {string}   key - Key to lookup in sessionStorage.\r\n    *\r\n    * @param {*}        [defaultValue] - A default value to return if key not present in session storage.\r\n    *\r\n    * @returns {SSStore} The Svelte store for this key.\r\n    */\r\n   getStore(key, defaultValue)\r\n   {\r\n      return this.#getStore(key, defaultValue);\r\n   }\r\n\r\n   /**\r\n    * Sets the value for the given key in sessionStorage.\r\n    *\r\n    * @param {string}   key - Key to lookup in sessionStorage.\r\n    *\r\n    * @param {*}        value - A value to set for this key.\r\n    */\r\n   setItem(key, value)\r\n   {\r\n      const store = this.#getStore(key);\r\n      store.set(value);\r\n   }\r\n\r\n   /**\r\n    * Convenience method to swap a boolean value stored in session storage.\r\n    *\r\n    * @param {string}   key - Key to lookup in sessionStorage.\r\n    *\r\n    * @param {boolean}  [defaultValue] - A default value to return if key not present in session storage.\r\n    *\r\n    * @returns {boolean} The boolean swap for the given key.\r\n    */\r\n   swapItemBoolean(key, defaultValue)\r\n   {\r\n      const store = this.#getStore(key, defaultValue);\r\n\r\n      let currentValue = false;\r\n\r\n      try\r\n      {\r\n         currentValue = !!JSON.parse(sessionStorage.getItem(key));\r\n      }\r\n      catch (err) { /**/ }\r\n\r\n      const newValue = typeof currentValue === 'boolean' ? !currentValue : false;\r\n\r\n      store.set(newValue);\r\n      return newValue;\r\n   }\r\n}\r\n","import { derived, get } from \"svelte/store\";\n/**\n * @external Store\n * @see [Svelte stores](https://svelte.dev/docs#component-format-script-4-prefix-stores-with-$-to-access-their-values-store-contract)\n */\n\n/**\n * Create a store similar to [Svelte's `derived`](https://svelte.dev/docs#run-time-svelte-store-writable),\n * but which has its own `set` and `update` methods and can send values back to the origin stores.\n * [Read more...](https://github.com/PixievoltNo1/svelte-writable-derived#default-export-writablederived)\n * \n * @param {Store|Store[]} origins One or more stores to derive from. Same as\n * [`derived`](https://svelte.dev/docs#run-time-svelte-store-writable)'s 1st parameter.\n * @param {!Function} derive The callback to determine the derived value. Same as\n * [`derived`](https://svelte.dev/docs#run-time-svelte-store-writable)'s 2nd parameter.\n * @param {!Function|{withOld: !Function}} reflect Called when the\n * derived store gets a new value via its `set` or `update` methods, and determines new values for\n * the origin stores. [Read more...](https://github.com/PixievoltNo1/svelte-writable-derived#new-parameter-reflect)\n * @param [initial] The new store's initial value. Same as\n * [`derived`](https://svelte.dev/docs#run-time-svelte-store-writable)'s 3rd parameter.\n * \n * @returns {Store} A writable store.\n */\nexport default function writableDerived(origins, derive, reflect, initial) {\n\tvar childDerivedSetter, originValues, blockNextDerive = false;\n\tvar reflectOldValues = \"withOld\" in reflect;\n\tvar wrappedDerive = (got, set) => {\n\t\tchildDerivedSetter = set;\n\t\tif (reflectOldValues) {\n\t\t\toriginValues = got;\n\t\t}\n\t\tif (!blockNextDerive) {\n\t\t\tlet returned = derive(got, set);\n\t\t\tif (derive.length < 2) {\n\t\t\t\tset(returned);\n\t\t\t} else {\n\t\t\t\treturn returned;\n\t\t\t}\n\t\t}\n\t\tblockNextDerive = false;\n\t};\n\tvar childDerived = derived(origins, wrappedDerive, initial);\n\t\n\tvar singleOrigin = !Array.isArray(origins);\n\tvar sendUpstream = (setWith) => {\n\t\tif (singleOrigin) {\n\t\t\tblockNextDerive = true;\n\t\t\torigins.set(setWith);\n\t\t} else {\n\t\t\tsetWith.forEach( (value, i) => {\n\t\t\t\tblockNextDerive = true;\n\t\t\t\torigins[i].set(value);\n\t\t\t} );\n\t\t}\n\t\tblockNextDerive = false;\n\t};\n\tif (reflectOldValues) {\n\t\treflect = reflect.withOld;\n\t}\n\tvar reflectIsAsync = reflect.length >= (reflectOldValues ? 3 : 2);\n\tvar cleanup = null;\n\tfunction doReflect(reflecting) {\n\t\tif (cleanup) {\n\t\t\tcleanup();\n\t\t\tcleanup = null;\n\t\t}\n\n\t\tif (reflectOldValues) {\n\t\t\tvar returned = reflect(reflecting, originValues, sendUpstream);\n\t\t} else {\n\t\t\tvar returned = reflect(reflecting, sendUpstream);\n\t\t}\n\t\tif (reflectIsAsync) {\n\t\t\tif (typeof returned == \"function\") {\n\t\t\t\tcleanup = returned;\n\t\t\t}\n\t\t} else {\n\t\t\tsendUpstream(returned);\n\t\t}\n\t}\n\t\n\tvar tryingSet = false;\n\tfunction update(fn) {\n\t\tvar isUpdated, mutatedBySubscriptions, oldValue, newValue;\n\t\tif (tryingSet) {\n\t\t\tnewValue = fn( get(childDerived) );\n\t\t\tchildDerivedSetter(newValue);\n\t\t\treturn;\n\t\t}\n\t\tvar unsubscribe = childDerived.subscribe( (value) => {\n\t\t\tif (!tryingSet) {\n\t\t\t\toldValue = value;\n\t\t\t} else if (!isUpdated) {\n\t\t\t\tisUpdated = true;\n\t\t\t} else {\n\t\t\t\tmutatedBySubscriptions = true;\n\t\t\t}\n\t\t} );\n\t\tnewValue = fn(oldValue);\n\t\ttryingSet = true;\n\t\tchildDerivedSetter(newValue);\n\t\tunsubscribe();\n\t\ttryingSet = false;\n\t\tif (mutatedBySubscriptions) {\n\t\t\tnewValue = get(childDerived);\n\t\t}\n\t\tif (isUpdated) {\n\t\t\tdoReflect(newValue);\n\t\t}\n\t}\n\treturn {\n\t\tsubscribe: childDerived.subscribe,\n\t\tset(value) { update( () => value ); },\n\t\tupdate,\n\t};\n}\nexport { writableDerived };\n\n/**\n * Create a store for a property value in an object contained in another store.\n * [Read more...](https://github.com/PixievoltNo1/svelte-writable-derived#named-export-propertystore)\n * \n * @param {Store} origin The store containing the object to get/set from.\n * @param {string|number|symbol|Array<string|number|symbol>} propName The property to get/set, or a path of\n * properties in nested objects.\n *\n * @returns {Store} A writable store.\n */\nexport function propertyStore(origin, propName) {\n\tif (!Array.isArray(propName)) {\n\t\treturn writableDerived(\n\t\t\torigin,\n\t\t\t(object) => object[propName],\n\t\t\t{ withOld(reflecting, object) {\n\t\t\t\tobject[propName] = reflecting;\n\t\t\t\treturn object;\n\t\t\t} }\n\t\t);\n\t} else {\n\t\tlet props = propName.concat();\n\t\treturn writableDerived(\n\t\t\torigin,\n\t\t\t(value) => {\n\t\t\t\tfor (let i = 0; i < props.length; ++i) {\n\t\t\t\t\tvalue = value[ props[i] ];\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t},\n\t\t\t{ withOld(reflecting, object) {\n\t\t\t\tlet target = object;\n\t\t\t\tfor (let i = 0; i < props.length - 1; ++i) {\n\t\t\t\t\ttarget = target[ props[i] ];\n\t\t\t\t}\n\t\t\t\ttarget[ props[props.length - 1] ] = reflecting;\n\t\t\t\treturn object;\n\t\t\t} }\n\t\t);\n\t}\n}","import { DynMapReducer }   from '@typhonjs-svelte/lib/store';\r\nimport { hasPrototype }    from '@typhonjs-svelte/lib/util';\r\n\r\n/**\r\n */\r\nexport class EmbeddedStoreManager\r\n{\r\n   /**\r\n    * RegExp for detecting CRUD updates for renderContext.\r\n    *\r\n    * @type {RegExp}\r\n    */\r\n   static #renderContextRegex = /(create|delete|update)(\\w+)/;\r\n\r\n   /**\r\n    * @type {Map<string, EmbeddedCollectionData>}\r\n    */\r\n   #name = new Map();\r\n\r\n   /**\r\n    * @type {foundry.abstract.Document[]}\r\n    */\r\n   #document;\r\n\r\n   /**\r\n    * @type {Set<string>}\r\n    */\r\n   #embeddedNames = new Set();\r\n\r\n   /**\r\n    * @param {foundry.abstract.Document[]} document - The associated document holder.\r\n    */\r\n   constructor(document)\r\n   {\r\n      this.#document = document;\r\n\r\n      this.handleDocChange();\r\n   }\r\n\r\n   /**\r\n    * @template T\r\n    *\r\n    * @param {string} embeddedName -\r\n    *\r\n    * @param {import('@typhonjs-fvtt/svelte/store').OptionsDynMapCreate<string, T>} options -\r\n    *\r\n    * @returns {import('@typhonjs-fvtt/svelte/store').DynMapReducer<string, T>} DynMapReducer instance\r\n    */\r\n   create(embeddedName, options)\r\n   {\r\n      /** @type {foundry.abstract.Document} */\r\n      const doc = this.#document[0];\r\n\r\n      let collection = null;\r\n\r\n      if (doc)\r\n      {\r\n         try\r\n         {\r\n            collection = doc.getEmbeddedCollection(embeddedName);\r\n         }\r\n         catch (err)\r\n         {\r\n            console.warn(`EmbeddedStoreManager.create error: No valid embedded collection for: ${embeddedName}`);\r\n         }\r\n      }\r\n\r\n      let embeddedData;\r\n\r\n      if (!this.#name.has(embeddedName))\r\n      {\r\n         embeddedData = {\r\n            collection,\r\n            stores: new Map()\r\n         };\r\n\r\n         this.#name.set(embeddedName, embeddedData);\r\n      }\r\n      else\r\n      {\r\n         embeddedData = this.#name.get(embeddedName);\r\n      }\r\n\r\n      /** @type {string} */\r\n      let name;\r\n\r\n      /** @type {import('@typhonjs-fvtt/svelte/store').DataOptions<T>} */\r\n      let rest = {};\r\n\r\n      /** @type {import('@typhonjs-fvtt/svelte/store').IDynMapReducerCtor<string, T>} */\r\n      let ctor;\r\n\r\n      if (typeof options === 'string')\r\n      {\r\n         name = options;\r\n         ctor = DynMapReducer;\r\n      }\r\n      else if (typeof options === 'function' && hasPrototype(options, DynMapReducer))\r\n      {\r\n         ctor = options;\r\n      }\r\n      else if (typeof options === 'object' && options !== null)\r\n      {\r\n         ({ name, ctor = DynMapReducer, ...rest } = options);\r\n      }\r\n      else\r\n      {\r\n         throw new TypeError(`EmbeddedStoreManager.create error: 'options' does not conform to allowed parameters.`);\r\n      }\r\n\r\n      if (!hasPrototype(ctor, DynMapReducer))\r\n      {\r\n         throw new TypeError(`EmbeddedStoreManager.create error: 'ctor' is not a 'DynMapReducer'.`);\r\n      }\r\n\r\n      name = name ?? ctor?.name;\r\n\r\n      if (typeof name !== 'string') { throw new TypeError(`EmbeddedStoreManager.create error: 'name' is not a string.`); }\r\n\r\n      if (embeddedData.stores.has(name))\r\n      {\r\n         return embeddedData.stores.get(name);\r\n      }\r\n      else\r\n      {\r\n         const storeOptions = collection ? { data: collection, ...rest } : { ...rest };\r\n         const store = new ctor(storeOptions);\r\n         embeddedData.stores.set(name, store);\r\n         return store;\r\n      }\r\n   }\r\n\r\n   /**\r\n    * Destroys and removes embedded collection stores. Invoking this method with no parameters destroys all stores.\r\n    * Invoking with an embedded name destroys all stores for that particular collection. If you provide an embedded and\r\n    * store name just that particular store is destroyed and removed.\r\n    *\r\n    * @param {string}   [embeddedName] - Specific embedded collection name.\r\n    *\r\n    * @param {string}   [storeName] - Specific store name.\r\n    *\r\n    * @returns {boolean} One or more stores destroyed?\r\n    */\r\n   destroy(embeddedName, storeName)\r\n   {\r\n      let count = 0;\r\n\r\n      // Destroy all embedded stores\r\n      if (embeddedName === void 0)\r\n      {\r\n         for (const embeddedData of this.#name.values())\r\n         {\r\n            embeddedData.collection = null;\r\n            for (const store of embeddedData.stores.values())\r\n            {\r\n               store.destroy();\r\n               count++;\r\n            }\r\n         }\r\n\r\n         this.#name.clear();\r\n      }\r\n      else if (typeof embeddedName === 'string' && storeName === void 0)\r\n      {\r\n         const embeddedData = this.#name.get(embeddedName);\r\n         if (embeddedData)\r\n         {\r\n            embeddedData.collection = null;\r\n            for (const store of embeddedData.stores.values())\r\n            {\r\n               store.destroy();\r\n               count++;\r\n            }\r\n         }\r\n\r\n         this.#name.delete(embeddedName);\r\n      }\r\n      else if (typeof embeddedName === 'string' && storeName === 'string')\r\n      {\r\n         const embeddedData = this.#name.get(embeddedName);\r\n         if (embeddedData)\r\n         {\r\n            const store = embeddedData.stores.get(storeName);\r\n            if (store)\r\n            {\r\n               store.destroy();\r\n               count++;\r\n            }\r\n         }\r\n      }\r\n\r\n      return count > 0;\r\n   }\r\n\r\n   /**\r\n    * @template T\r\n    *\r\n    * @param {string} embeddedName -\r\n    *\r\n    * @param {string} storeName -\r\n    *\r\n    * @returns {import('@typhonjs-fvtt/svelte/store').DynMapReducer<string, T>} DynMapReducer instance.\r\n    */\r\n   get(embeddedName, storeName)\r\n   {\r\n      if (!this.#name.has(embeddedName)) { return void 0; }\r\n\r\n      return this.#name.get(embeddedName).stores.get(storeName);\r\n   }\r\n\r\n   /**\r\n    * Updates all existing embedded collection stores with the associated embedded collection\r\n    */\r\n   handleDocChange()\r\n   {\r\n      const doc = this.#document[0];\r\n\r\n      if (doc instanceof foundry.abstract.Document)\r\n      {\r\n         const existingEmbeddedNames = new Set(this.#name.keys());\r\n\r\n         /** @type {string[]} */\r\n         const embeddedNames = Object.keys(doc.constructor?.metadata?.embedded ?? []);\r\n\r\n         // Remove all previously stored embedded name CRUD keys.\r\n         this.#embeddedNames.clear();\r\n\r\n         for (const embeddedName of embeddedNames)\r\n         {\r\n            // Remove processed embedded name from existingEmbeddedNames set.\r\n            existingEmbeddedNames.delete(embeddedName);\r\n\r\n            // Update CRUD keys.\r\n            this.#embeddedNames.add(`create${embeddedName}`);\r\n            this.#embeddedNames.add(`delete${embeddedName}`);\r\n            this.#embeddedNames.add(`update${embeddedName}`);\r\n\r\n            let collection = null;\r\n\r\n            try\r\n            {\r\n               // Update any existing stores with the actual collection.\r\n               collection = doc.getEmbeddedCollection(embeddedName);\r\n            }\r\n            catch (err)\r\n            {\r\n               console.warn(`EmbeddedStoreManager.handleDocUpdate error: No valid embedded collection for: ${\r\n                embeddedName}`);\r\n            }\r\n\r\n            // Update EmbeddedData for new collection.\r\n            const embeddedData = this.#name.get(embeddedName);\r\n            if (embeddedData)\r\n            {\r\n               embeddedData.collection = collection;\r\n\r\n               // Update all existing stores.\r\n               for (const store of embeddedData.stores.values()) { store.setData(collection, true); }\r\n            }\r\n         }\r\n\r\n         // Update all existing embedded collections with null data that aren't processed above.\r\n         for (const embeddedName of existingEmbeddedNames)\r\n         {\r\n            const embeddedData = this.#name.get(embeddedName);\r\n            if (embeddedData)\r\n            {\r\n               embeddedData.collection = null;\r\n\r\n               for (const store of embeddedData.stores.values()) { store.setData(null, true); }\r\n            }\r\n         }\r\n      }\r\n      else // Reset all embedded reducer stores to null data.\r\n      {\r\n         this.#embeddedNames.clear();\r\n\r\n         for (const embeddedData of this.#name.values())\r\n         {\r\n            embeddedData.collection = null;\r\n\r\n            for (const store of embeddedData.stores.values()) { store.setData(null, true); }\r\n         }\r\n      }\r\n   }\r\n\r\n   /**\r\n    * Handles updates to embedded stores parsing the render context for valid embedded store types.\r\n    *\r\n    * On create, delete, update parse the type being modified then force index updates for the embedded type.\r\n    *\r\n    * @param {string}   renderContext - render context update from document.\r\n    */\r\n   handleUpdate(renderContext)\r\n   {\r\n      if (!this.#embeddedNames.has(renderContext)) { return; }\r\n\r\n      const match = EmbeddedStoreManager.#renderContextRegex.exec(renderContext);\r\n\r\n      if (match)\r\n      {\r\n         const embeddedName = match[2];\r\n         if (!this.#name.has(embeddedName)) { return; }\r\n\r\n         for (const store of this.#name.get(embeddedName).stores.values())\r\n         {\r\n            store.index.update(true);\r\n         }\r\n      }\r\n   }\r\n}\r\n\r\n/**\r\n * @typedef {object} EmbeddedCollectionData\r\n *\r\n * @property {foundry.abstract.Collection} collection -\r\n *\r\n * @property {Map<string, import('@typhonjs-fvtt/svelte/store').DynMapReducer<string, T>>} stores -\r\n */\r\n","import {\r\n   getUUIDFromDataTransfer,\r\n   isObject,\r\n   isPlainObject,\r\n   uuidv4 } from '@typhonjs-fvtt/svelte/util';\r\n\r\nimport { EmbeddedStoreManager } from './EmbeddedStoreManager.js';\r\n\r\n/**\r\n * Provides a wrapper implementing the Svelte store / subscriber protocol around any Document / ClientMixinDocument.\r\n * This makes documents reactive in a Svelte component, but otherwise provides subscriber functionality external to\r\n * Svelte.\r\n */\r\nexport class TJSDocument\r\n{\r\n   /**\r\n    * @type {foundry.abstract.Document[]}\r\n    */\r\n   #document = [void 0];\r\n\r\n   /**\r\n    * @type {EmbeddedStoreManager}\r\n    */\r\n   #embeddedStoreManager;\r\n   #embeddedAPI;\r\n\r\n   /**\r\n    * @type {string}\r\n    */\r\n   #uuidv4;\r\n\r\n   /**\r\n    * @type {TJSDocumentOptions}\r\n    */\r\n   #options = { delete: void 0 };\r\n\r\n   #subscriptions = [];\r\n   #updateOptions;\r\n\r\n   /**\r\n    * @param {foundry.abstract.Document | TJSDocumentOptions}  [document] - Document to wrap or TJSDocumentOptions.\r\n    *\r\n    * @param {TJSDocumentOptions}      [options] - TJSDocument options.\r\n    */\r\n   constructor(document, options = {})\r\n   {\r\n      this.#uuidv4 = `tjs-document-${uuidv4()}`;\r\n\r\n      if (isPlainObject(document)) // Handle case when only options are passed into ctor.\r\n      {\r\n         this.setOptions(document);\r\n      }\r\n      else\r\n      {\r\n         this.setOptions(options);\r\n         this.set(document);\r\n      }\r\n   }\r\n\r\n   /**\r\n    * @returns {EmbeddedAPI} Embedded store manager.\r\n    */\r\n   get embedded()\r\n   {\r\n      if (!this.#embeddedAPI)\r\n      {\r\n         this.#embeddedStoreManager = new EmbeddedStoreManager(this.#document);\r\n         this.#embeddedAPI = {\r\n            create: (embeddedName, options) => this.#embeddedStoreManager.create(embeddedName, options),\r\n            destroy: (embeddedName, storeName) => this.#embeddedStoreManager.destroy(embeddedName, storeName),\r\n            get: (embeddedName, storeName) => this.#embeddedStoreManager.get(embeddedName, storeName)\r\n         };\r\n      }\r\n\r\n      return this.#embeddedAPI;\r\n   }\r\n\r\n   /**\r\n    * Returns the options passed on last update.\r\n    *\r\n    * @returns {object} Last update options.\r\n    */\r\n   get updateOptions() { return this.#updateOptions ?? {}; }\r\n\r\n   /**\r\n    * Returns the UUID assigned to this store.\r\n    *\r\n    * @returns {string} UUID\r\n    */\r\n   get uuidv4() { return this.#uuidv4; }\r\n\r\n   /**\r\n    * Handles cleanup when the document is deleted. Invoking any optional delete function set in the constructor.\r\n    *\r\n    * @returns {Promise<void>}\r\n    */\r\n   async #deleted()\r\n   {\r\n      const doc = this.#document[0];\r\n\r\n      // Check to see if the document is still in the associated collection to determine if actually deleted.\r\n      if (doc instanceof foundry.abstract.Document && !doc?.collection?.has(doc.id))\r\n      {\r\n         delete doc?.apps[this.#uuidv4];\r\n         this.#setDocument(void 0);\r\n\r\n         this.#updateSubscribers(false, { action: 'delete', data: void 0 });\r\n\r\n         if (typeof this.#options.delete === 'function') { await this.#options.delete(); }\r\n\r\n         this.#updateOptions = void 0;\r\n      }\r\n   }\r\n\r\n   /**\r\n    * Completely removes all internal subscribers, any optional delete callback, and unregisters from the\r\n    * ClientDocumentMixin `apps` tracking object.\r\n    */\r\n   destroy()\r\n   {\r\n      const doc = this.#document[0];\r\n\r\n      if (this.#embeddedStoreManager)\r\n      {\r\n         this.#embeddedStoreManager.destroy();\r\n         this.#embeddedStoreManager = void 0;\r\n         this.#embeddedAPI = void 0;\r\n      }\r\n\r\n      if (doc instanceof foundry.abstract.Document)\r\n      {\r\n         delete doc?.apps[this.#uuidv4];\r\n         this.#setDocument(void 0);\r\n      }\r\n\r\n      this.#options.delete = void 0;\r\n      this.#subscriptions.length = 0;\r\n   }\r\n\r\n   /**\r\n    * @param {boolean}  [force] - unused - signature from Foundry render function.\r\n    *\r\n    * @param {object}   [options] - Options from render call; will have document update context.\r\n    */\r\n   #updateSubscribers(force = false, options = {}) // eslint-disable-line no-unused-vars\r\n   {\r\n      this.#updateOptions = options;\r\n\r\n      const doc = this.#document[0];\r\n\r\n      for (let cntr = 0; cntr < this.#subscriptions.length; cntr++) { this.#subscriptions[cntr](doc, options); }\r\n\r\n      if (this.#embeddedStoreManager)\r\n      {\r\n         this.#embeddedStoreManager.handleUpdate(options.renderContext);\r\n      }\r\n   }\r\n\r\n   /**\r\n    * @returns {foundry.abstract.Document | undefined} Current document\r\n    */\r\n   get() { return this.#document[0]; }\r\n\r\n   /**\r\n    * @param {foundry.abstract.Document | undefined}  document - New document to set.\r\n    *\r\n    * @param {object}         [options] - New document update options to set.\r\n    */\r\n   set(document, options = {})\r\n   {\r\n      if (this.#document[0])\r\n      {\r\n         delete this.#document[0].apps[this.#uuidv4];\r\n      }\r\n\r\n      if (document !== void 0 && !(document instanceof foundry.abstract.Document))\r\n      {\r\n         throw new TypeError(`TJSDocument set error: 'document' is not a valid Document or undefined.`);\r\n      }\r\n\r\n      if (options === null || typeof options !== 'object')\r\n      {\r\n         throw new TypeError(`TJSDocument set error: 'options' is not an object.`);\r\n      }\r\n\r\n      if (document instanceof foundry.abstract.Document)\r\n      {\r\n         document.apps[this.#uuidv4] = {\r\n            close: this.#deleted.bind(this),\r\n            render: this.#updateSubscribers.bind(this)\r\n         };\r\n      }\r\n\r\n      this.#setDocument(document);\r\n      this.#updateOptions = options;\r\n      this.#updateSubscribers();\r\n   }\r\n\r\n   /**\r\n    *\r\n    * @param {foundry.abstract.Document | undefined} doc -\r\n    */\r\n   #setDocument(doc)\r\n   {\r\n      this.#document[0] = doc;\r\n\r\n      if (this.#embeddedStoreManager) { this.#embeddedStoreManager.handleDocChange(); }\r\n   }\r\n\r\n   /**\r\n    * Potentially sets new document from data transfer object.\r\n    *\r\n    * @param {object}   data - Document transfer data.\r\n    *\r\n    * @param {ParseDataTransferOptions & TJSDocumentOptions}   [options] - Optional parameters.\r\n    *\r\n    * @returns {Promise<boolean>} Returns true if new document set from data transfer blob.\r\n    */\r\n   async setFromDataTransfer(data, options)\r\n   {\r\n      return this.setFromUUID(getUUIDFromDataTransfer(data, options), options);\r\n   }\r\n\r\n   /**\r\n    * Sets the document by Foundry UUID performing a lookup and setting the document if found.\r\n    *\r\n    * @param {string}   uuid - A Foundry UUID to lookup.\r\n    *\r\n    * @param {TJSDocumentOptions}   [options] - New document update options to set.\r\n    *\r\n    * @returns {Promise<boolean>} True if successfully set document from UUID.\r\n    */\r\n   async setFromUUID(uuid, options = {})\r\n   {\r\n      if (typeof uuid !== 'string' || uuid.length === 0) { return false; }\r\n\r\n      try\r\n      {\r\n         const doc = await globalThis.fromUuid(uuid);\r\n\r\n         if (doc)\r\n         {\r\n            this.set(doc, options);\r\n            return true;\r\n         }\r\n      }\r\n      catch (err) { /**/ }\r\n\r\n      return false;\r\n   }\r\n\r\n   /**\r\n    * Sets options for this document wrapper / store.\r\n    *\r\n    * @param {TJSDocumentOptions}   options - Options for TJSDocument.\r\n    */\r\n   setOptions(options)\r\n   {\r\n      if (!isObject(options))\r\n      {\r\n         throw new TypeError(`TJSDocument error: 'options' is not a plain object.`);\r\n      }\r\n\r\n      if (options.delete !== void 0 && typeof options.delete !== 'function')\r\n      {\r\n         throw new TypeError(`TJSDocument error: 'delete' attribute in options is not a function.`);\r\n      }\r\n\r\n      if (options.delete === void 0 || typeof options.delete === 'function')\r\n      {\r\n         this.#options.delete = options.delete;\r\n      }\r\n   }\r\n\r\n   /**\r\n    * @param {function(foundry.abstract.Document, object): void} handler - Callback function that is invoked on update / changes.\r\n    *\r\n    * @returns {(function(): void)} Unsubscribe function.\r\n    */\r\n   subscribe(handler)\r\n   {\r\n      this.#subscriptions.push(handler);           // Add handler to the array of subscribers.\r\n\r\n      const updateOptions = { action: 'subscribe', data: void 0 };\r\n\r\n      handler(this.#document[0], updateOptions);      // Call handler with current value and update options.\r\n\r\n      // Return unsubscribe function.\r\n      return () =>\r\n      {\r\n         const index = this.#subscriptions.findIndex((sub) => sub === handler);\r\n         if (index >= 0) { this.#subscriptions.splice(index, 1); }\r\n      };\r\n   }\r\n}\r\n\r\n/**\r\n * @typedef {object} TJSDocumentOptions\r\n *\r\n * @property {Function} [delete] - Optional delete function to invoke when document is deleted.\r\n */\r\n\r\n/**\r\n * @typedef {object} EmbeddedAPI\r\n *\r\n * @property {(embeddedName: string, options: import('@typhonjs-fvtt/runtime/svelte/store').OptionsDynMapCreate<string, any>) => import('@typhonjs-fvtt/runtime/svelte/store').DynMapReducer<string, T>} create - Creates an embedded collection store.\r\n *\r\n * @property {(embeddedName?: string, storeName?: string) => boolean} destroy - Destroys one or more embedded collection stores.\r\n *\r\n * @property {(embeddedName: string, storeName: string) => import('@typhonjs-fvtt/runtime/svelte/store').DynMapReducer<string, T>} get - Returns a specific existing embedded collection store.\r\n */\r\n","import {\r\n   isObject,\r\n   isPlainObject,\r\n   uuidv4 }       from '@typhonjs-fvtt/svelte/util';\r\n\r\n/**\r\n * Provides a wrapper implementing the Svelte store / subscriber protocol around any DocumentCollection. This makes\r\n * document collections reactive in a Svelte component, but otherwise provides subscriber functionality external to\r\n * Svelte.\r\n *\r\n * @template {DocumentCollection} T\r\n */\r\nexport class TJSDocumentCollection\r\n{\r\n   #collection;\r\n   #collectionCallback;\r\n   #uuid;\r\n\r\n   /**\r\n    * @type {TJSDocumentCollectionOptions}\r\n    */\r\n   #options = { delete: void 0 };\r\n\r\n   #subscriptions = [];\r\n   #updateOptions;\r\n\r\n   /**\r\n    * @param {T|TJSDocumentCollectionOptions}   [collection] - Collection to wrap or TJSDocumentCollectionOptions.\r\n    *\r\n    * @param {TJSDocumentCollectionOptions}     [options] - TJSDocumentCollection options.\r\n    */\r\n   constructor(collection, options = {})\r\n   {\r\n      this.#uuid = `tjs-collection-${uuidv4()}`;\r\n\r\n      if (isPlainObject(collection)) // Handle case when only options are passed into ctor.\r\n      {\r\n         this.setOptions(collection);\r\n      }\r\n      else\r\n      {\r\n         this.setOptions(options);\r\n         this.set(collection);\r\n      }\r\n   }\r\n\r\n   /**\r\n    * Returns the options passed on last update.\r\n    *\r\n    * @returns {object} Last update options.\r\n    */\r\n   get updateOptions() { return this.#updateOptions ?? {}; }\r\n\r\n   /**\r\n    * Returns the UUID assigned to this store.\r\n    *\r\n    * @returns {*} UUID\r\n    */\r\n   get uuid() { return this.#uuid; }\r\n\r\n   /**\r\n    * Handles cleanup when the collection is deleted. Invoking any optional delete function set in the constructor.\r\n    *\r\n    * @returns {Promise<void>}\r\n    */\r\n   async #deleted()\r\n   {\r\n      const collection = this.#collection;\r\n\r\n      if (collection instanceof DocumentCollection)\r\n      {\r\n         const index = collection?.apps?.findIndex((sub) => sub === this.#collectionCallback);\r\n         if (index >= 0) { collection?.apps?.splice(index, 1); }\r\n\r\n         this.#collection = void 0;\r\n      }\r\n\r\n      this.#notify(false, { action: 'delete', documentType: collection.documentName, documents: [], data: [] });\r\n\r\n      if (typeof this.#options.delete === 'function') { await this.#options.delete(); }\r\n\r\n      this.#updateOptions = void 0;\r\n   }\r\n\r\n   /**\r\n    * Completely removes all internal subscribers, any optional delete callback, and unregisters from the\r\n    * DocumentCollection `apps` tracking array.\r\n    */\r\n   destroy()\r\n   {\r\n      const collection = this.#collection;\r\n\r\n      if (collection instanceof DocumentCollection)\r\n      {\r\n         const index = collection?.apps?.findIndex((sub) => sub === this.#collectionCallback);\r\n         if (index >= 0) { collection?.apps?.splice(index, 1); }\r\n\r\n         this.#collection = void 0;\r\n      }\r\n\r\n      this.#options.delete = void 0;\r\n      this.#subscriptions.length = 0;\r\n   }\r\n\r\n   /**\r\n    * @param {boolean}  [force] - unused - signature from Foundry render function.\r\n    *\r\n    * @param {object}   [options] - Options from render call; will have collection update context.\r\n    */\r\n   #notify(force = false, options = {}) // eslint-disable-line no-unused-vars\r\n   {\r\n      this.#updateOptions = options;\r\n\r\n      // Subscriptions are stored locally as on the browser Babel is still used for private class fields / Babel\r\n      // support until 2023. IE not doing this will require several extra method calls otherwise.\r\n      const subscriptions = this.#subscriptions;\r\n      const collection = this.#collection;\r\n\r\n      for (let cntr = 0; cntr < subscriptions.length; cntr++) { subscriptions[cntr](collection, options); }\r\n   }\r\n\r\n   /**\r\n    * @returns {T | undefined} Current collection\r\n    */\r\n   get() { return this.#collection; }\r\n\r\n   /**\r\n    * @param {T | undefined}  collection - New collection to set.\r\n    *\r\n    * @param {object}         [options] - New collection update options to set.\r\n    */\r\n   set(collection, options = {})\r\n   {\r\n      if (this.#collection)\r\n      {\r\n         const index = this.#collection.apps.findIndex((sub) => sub === this.#collectionCallback);\r\n         if (index >= 0) { this.#collection.apps.splice(index, 1); }\r\n\r\n         this.#collectionCallback = void 0;\r\n      }\r\n\r\n      if (collection !== void 0 && !(collection instanceof DocumentCollection))\r\n      {\r\n         throw new TypeError(\r\n          `TJSDocumentCollection set error: 'collection' is not a valid DocumentCollection or undefined.`);\r\n      }\r\n\r\n      if (!isObject(options))\r\n      {\r\n         throw new TypeError(`TJSDocument set error: 'options' is not an object.`);\r\n      }\r\n\r\n      if (collection instanceof DocumentCollection)\r\n      {\r\n         this.#collectionCallback = {\r\n            close: this.#deleted.bind(this),\r\n            render: this.#notify.bind(this)\r\n         };\r\n\r\n         collection?.apps?.push(this.#collectionCallback);\r\n      }\r\n\r\n      this.#collection = collection;\r\n      this.#updateOptions = options;\r\n      this.#notify();\r\n   }\r\n\r\n   /**\r\n    * Sets options for this collection wrapper / store.\r\n    *\r\n    * @param {TJSDocumentCollectionOptions}   options - Options for TJSDocumentCollection.\r\n    */\r\n   setOptions(options)\r\n   {\r\n      if (!isObject(options))\r\n      {\r\n         throw new TypeError(`TJSDocumentCollection error: 'options' is not an object.`);\r\n      }\r\n\r\n      if (options.delete !== void 0 && typeof options.delete !== 'function')\r\n      {\r\n         throw new TypeError(`TJSDocumentCollection error: 'delete' attribute in options is not a function.`);\r\n      }\r\n\r\n      if (options.delete === void 0 || typeof options.delete === 'function')\r\n      {\r\n         this.#options.delete = options.delete;\r\n      }\r\n   }\r\n\r\n   /**\r\n    * @param {function(T, object): void} handler - Callback function that is invoked on update / changes.\r\n    *\r\n    * @returns {(function(): void)} Unsubscribe function.\r\n    */\r\n   subscribe(handler)\r\n   {\r\n      this.#subscriptions.push(handler);              // Add handler to the array of subscribers.\r\n\r\n      const collection = this.#collection;\r\n\r\n      const documentType = collection?.documentName ?? void 0;\r\n\r\n      const updateOptions = { action: 'subscribe', documentType, documents: [], data: [] };\r\n\r\n      handler(collection, updateOptions);  // Call handler with current value and update options.\r\n\r\n      // Return unsubscribe function.\r\n      return () =>\r\n      {\r\n         const index = this.#subscriptions.findIndex((sub) => sub === handler);\r\n         if (index >= 0) { this.#subscriptions.splice(index, 1); }\r\n      };\r\n   }\r\n}\r\n\r\n/**\r\n * @typedef TJSDocumentCollectionOptions\r\n *\r\n * @property {Function} [delete] - Optional delete function to invoke when document is deleted.\r\n */\r\n","import { writable } from 'svelte/store';\r\n\r\nconst storeState = writable(void 0);\r\n\r\n/**\r\n * @type {GameState} Provides a Svelte store wrapping the Foundry runtime / global game state.\r\n */\r\nconst gameState = {\r\n   subscribe: storeState.subscribe,\r\n   get: () => game\r\n};\r\n\r\nObject.freeze(gameState);\r\n\r\nHooks.once('ready', () => storeState.set(game));\r\n\r\nexport { gameState };\r\n\r\n/**\r\n * @typedef {import('svelte/store').Readable} GameState - Provides a Svelte store wrapping the Foundry `game` global variable. It is initialized\r\n * on the `ready` hook. You may use this store to access the global game state from a Svelte template. It is a read only\r\n * store and will receive no reactive updates during runtime.\r\n *\r\n * @property {import('svelte/store').Readable.subscribe} subscribe - Provides the Svelte store subscribe function.\r\n *\r\n * @property {Function} get - Provides a mechanism to directly access the Foundry game state without subscribing.\r\n */\r\n","import { writable }   from 'svelte/store';\r\n\r\nimport { isIterable }      from '@typhonjs-svelte/lib/util';\r\n\r\nimport {\r\n   isWritableStore,\r\n   subscribeIgnoreFirst }  from '@typhonjs-svelte/lib/store';\r\n\r\n/**\r\n * Registers game settings and creates a backing Svelte store for each setting. It is possible to add multiple\r\n * `onChange` callbacks on registration.\r\n */\r\nexport class TJSGameSettings\r\n{\r\n   /**\r\n    * @type {Map<string, GSWritableStore>}\r\n    */\r\n   #stores = new Map();\r\n\r\n   /**\r\n    * Creates a new GSWritableStore for the given key.\r\n    *\r\n    * @param {string}   initialValue - An initial value to set to new stores.\r\n    *\r\n    * @returns {GSWritableStore} The new GSWritableStore.\r\n    */\r\n   static #createStore(initialValue)\r\n   {\r\n      return writable(initialValue);\r\n   }\r\n\r\n   /**\r\n    * Gets a store from the GSWritableStore Map or creates a new store for the key.\r\n    *\r\n    * @param {string}   key - Key to lookup in stores map.\r\n    *\r\n    * @param {string}   [initialValue] - An initial value to set to new stores.\r\n    *\r\n    * @returns {GSWritableStore} The store for the given key.\r\n    */\r\n   #getStore(key, initialValue)\r\n   {\r\n      let store = this.#stores.get(key);\r\n      if (store === void 0)\r\n      {\r\n         store = TJSGameSettings.#createStore(initialValue);\r\n         this.#stores.set(key, store);\r\n      }\r\n\r\n      return store;\r\n   }\r\n\r\n   /**\r\n    * Returns a readable Game Settings store for the associated key.\r\n    *\r\n    * @param {string}   key - Game setting key.\r\n    *\r\n    * @returns {GSReadableStore|undefined} The associated store for the given game setting key.\r\n    */\r\n   getReadableStore(key)\r\n   {\r\n      if (!this.#stores.has(key))\r\n      {\r\n         console.warn(`TJSGameSettings - getReadableStore: '${key}' is not a registered setting.`);\r\n         return;\r\n      }\r\n\r\n      const store = this.#getStore(key);\r\n\r\n      return { subscribe: store.subscribe, get: store.get };\r\n   }\r\n\r\n   /**\r\n    * Returns a writable Game Settings store for the associated key.\r\n    *\r\n    * @param {string}   key - Game setting key.\r\n    *\r\n    * @returns {GSWritableStore|undefined} The associated store for the given game setting key.\r\n    */\r\n   getStore(key)\r\n   {\r\n      return this.getWritableStore(key);\r\n   }\r\n\r\n   /**\r\n    * Returns a writable Game Settings store for the associated key.\r\n    *\r\n    * @param {string}   key - Game setting key.\r\n    *\r\n    * @returns {GSWritableStore|undefined} The associated store for the given game setting key.\r\n    */\r\n   getWritableStore(key)\r\n   {\r\n      if (!this.#stores.has(key))\r\n      {\r\n         console.warn(`TJSGameSettings - getWritableStore: '${key}' is not a registered setting.`);\r\n         return;\r\n      }\r\n\r\n      return this.#getStore(key);\r\n   }\r\n\r\n   /**\r\n    * @param {GameSetting} setting - A GameSetting instance to set to Foundry game settings.\r\n    */\r\n   register(setting)\r\n   {\r\n      if (typeof setting !== 'object')\r\n      {\r\n         throw new TypeError(`TJSGameSettings - register: setting is not an object.`);\r\n      }\r\n\r\n      if (typeof setting.options !== 'object')\r\n      {\r\n         throw new TypeError(`TJSGameSettings - register: 'options' attribute is not an object.`);\r\n      }\r\n\r\n      if (setting.store !== void 0 && !isWritableStore(setting.store))\r\n      {\r\n         throw new TypeError(\r\n          `TJSGameSettings - register: 'setting.store' attribute is not a writable store.`);\r\n      }\r\n\r\n      // TODO: Remove deprecation warning and fully remove support for `moduleId` in a future TRL release.\r\n      if (typeof setting.moduleId === 'string')\r\n      {\r\n         console.warn(\r\n          `TJSGameSettings - register deprecation warning: 'moduleId' should be replaced with 'namespace'.`);\r\n         console.warn(`'moduleId' will cease to work in a future update of TRL / TJSGameSettings.`);\r\n      }\r\n\r\n      // TODO: Remove nullish coalescing operator in a future TRL release.\r\n      const namespace = setting.namespace ?? setting.moduleId;\r\n      const key = setting.key;\r\n\r\n      if (typeof namespace !== 'string')\r\n      {\r\n         throw new TypeError(`TJSGameSettings - register: 'namespace' attribute is not a string.`);\r\n      }\r\n\r\n      if (typeof key !== 'string')\r\n      {\r\n         throw new TypeError(`TJSGameSettings - register: 'key' attribute is not a string.`);\r\n      }\r\n\r\n      const store = setting.store;\r\n\r\n      /**\r\n       * @type {GameSettingOptions}\r\n       */\r\n      const options = setting.options;\r\n\r\n      const onchangeFunctions = [];\r\n\r\n      // When true prevents local store subscription from a loop when values are object data.\r\n      let gateSet = false;\r\n\r\n      // Provides an `onChange` callback to update the associated store.\r\n      onchangeFunctions.push((value) =>\r\n      {\r\n         const callbackStore = this.#getStore(key);\r\n         if (callbackStore && !gateSet)\r\n         {\r\n            gateSet = true;\r\n            callbackStore.set(value);\r\n            gateSet = false;\r\n         }\r\n      });\r\n\r\n      // Handle loading any existing `onChange` callbacks.\r\n      if (isIterable(options?.onChange))\r\n      {\r\n         for (const entry of options.onChange)\r\n         {\r\n            if (typeof entry === 'function') { onchangeFunctions.push(entry); }\r\n         }\r\n      }\r\n      else if (typeof options.onChange === 'function')\r\n      {\r\n         onchangeFunctions.push(options.onChange);\r\n      }\r\n\r\n      // Provides the final onChange callback that iterates over all the stored onChange callbacks.\r\n      const onChange = (value) =>\r\n      {\r\n         for (const entry of onchangeFunctions) { entry(value); }\r\n      };\r\n\r\n      game.settings.register(namespace, key, { ...options, onChange });\r\n\r\n      // Set new store value with existing setting or default value.\r\n      const targetStore = store ? store : this.#getStore(key, game.settings.get(namespace, key));\r\n\r\n      // If a store instance is passed into register then initialize it with game settings data.\r\n      if (store)\r\n      {\r\n         this.#stores.set(key, targetStore);\r\n         store.set(game.settings.get(namespace, key));\r\n      }\r\n\r\n      // Subscribe to self to set associated game setting on updates after verifying that the new value does not match\r\n      // existing game setting.\r\n      subscribeIgnoreFirst(targetStore, async (value) =>\r\n      {\r\n         if (!gateSet && game.settings.get(namespace, key) !== value)\r\n         {\r\n            gateSet = true;\r\n            await game.settings.set(namespace, key, value);\r\n         }\r\n\r\n         gateSet = false;\r\n      });\r\n   }\r\n\r\n   /**\r\n    * Registers multiple settings.\r\n    *\r\n    * @param {Iterable<GameSetting>} settings - An iterable list of game setting configurations to register.\r\n    */\r\n   registerAll(settings)\r\n   {\r\n      if (!isIterable(settings)) { throw new TypeError(`TJSGameSettings - registerAll: settings is not iterable.`); }\r\n\r\n      for (const entry of settings)\r\n      {\r\n         if (typeof entry !== 'object')\r\n         {\r\n            throw new TypeError(`TJSGameSettings - registerAll: entry in settings is not an object.`);\r\n         }\r\n\r\n         // TODO: Uncomment when deprecation for 'moduleId' is removed in future TRL release.\r\n         // if (typeof entry.namespace !== 'string')\r\n         // {\r\n         //    throw new TypeError(`TJSGameSettings - registerAll: entry in settings missing 'namespace' attribute.`);\r\n         // }\r\n\r\n         if (typeof entry.key !== 'string')\r\n         {\r\n            throw new TypeError(`TJSGameSettings - registerAll: entry in settings missing 'key' attribute.`);\r\n         }\r\n\r\n         if (typeof entry.options !== 'object')\r\n         {\r\n            throw new TypeError(`TJSGameSettings - registerAll: entry in settings missing 'options' attribute.`);\r\n         }\r\n\r\n         this.register(entry);\r\n      }\r\n   }\r\n}\r\n\r\n/**\r\n * @typedef {object} GameSettingOptions\r\n *\r\n * @property {object} [choices] - If choices are defined, the resulting setting will be a select menu.\r\n *\r\n * @property {boolean} [config=true] - Specifies that the setting appears in the configuration view.\r\n *\r\n * @property {string} [hint] - A description of the registered setting and its behavior.\r\n *\r\n * @property {string} name - The displayed name of the setting.\r\n *\r\n * @property {Function} [onChange] - An onChange callback to directly receive callbacks from Foundry on setting change.\r\n *\r\n * @property {object} [range] - If range is specified, the resulting setting will be a range slider.\r\n *\r\n * @property {('client' | 'world')} [scope='client'] - Scope for setting.\r\n *\r\n * @property {Object|Function} type - A constructable object or function.\r\n */\r\n\r\n/**\r\n * @typedef {object} GameSetting - Defines a game setting.\r\n *\r\n * @property {string} namespace - The setting namespace; usually the ID of the module / system.\r\n *\r\n * @property {string} key - The setting key to register.\r\n *\r\n * @property {import('svelte/store').Writable} [store] - An existing store instance to use.\r\n *\r\n * @property {GameSettingOptions} options - Configuration for setting data.\r\n */\r\n\r\n/**\r\n * @typedef {import('svelte/store').Writable} GSWritableStore - The backing Svelte store; writable w/ get method attached.\r\n */\r\n\r\n/**\r\n * @typedef {import('svelte/store').Readable} GSReadableStore - The backing Svelte store; readable w/ get method attached.\r\n */\r\n"],"names":["Indexer","ogWritable","ogGet","storage","g","writable"],"mappings":";;;;;AAEa,MAAA,eAAe,CAAA;AAEzB;;;;;;;;AAQG;AACH,IAAA,OAAO,WAAW,CAAC,CAAQ,EAAE,CAAQ,EAAA;QAElC,IAAI,CAAC,KAAK,CAAC,EAAE;AAAE,YAAA,OAAO,IAAI,CAAC;AAAE,SAAA;AAC7B,QAAA,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,IAAI,EAAE;AAAE,YAAA,OAAO,KAAK,CAAC;AAAE,SAAA;;AAG/C,QAAA,IAAI,CAAC,CAAC,MAAM,KAAK,CAAC,CAAC,MAAM,EAAE;AAAE,YAAA,OAAO,KAAK,CAAC;AAAE,SAAA;QAE5C,KAAK,IAAI,IAAI,GAAG,CAAC,CAAC,MAAM,EAAE,EAAE,IAAI,IAAI,CAAC,GACrC;;YAEG,IAAI,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,EAAE;AAAE,gBAAA,OAAO,KAAK,CAAC;AAAE,aAAA;AAC5C,SAAA;AAED,QAAA,OAAO,IAAI,CAAC;AACd,KAAA;AAED;;;;;;;;;;AAUG;AACH,IAAA,OAAO,UAAU,CAAC,GAAW,EAAE,IAAA,GAAe,CAAC,EAAA;QAE5C,IAAI,EAAE,GAAG,UAAU,GAAG,IAAI,EAAE,EAAE,GAAG,UAAU,GAAG,IAAI,CAAC;AAEnD,QAAA,KAAK,IAAI,EAAE,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,EAAE,EACvC;AACG,YAAA,EAAE,GAAG,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;YACvB,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,EAAE,UAAU,CAAC,CAAC;YACpC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,EAAE,UAAU,CAAC,CAAC;AACtC,SAAA;AAED,QAAA,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,EAAE,UAAU,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,EAAE,UAAU,CAAC,CAAC;AACvF,QAAA,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,EAAE,UAAU,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,EAAE,UAAU,CAAC,CAAC;AAEvF,QAAA,OAAO,UAAU,IAAI,OAAO,GAAG,EAAE,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC;AAClD,KAAA;AAED;;;;;;;AAOG;IACH,OAAO,WAAW,CAAC,KAAc,EAAA;QAE9B,IAAI,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,KAAK,CAAC,EAAE;AAAE,YAAA,OAAO,CAAC,CAAC;AAAE,SAAA;QAErD,IAAI,MAAM,GAAW,CAAC,CAAC;AAEvB,QAAA,QAAQ,OAAO,KAAK;AAEjB,YAAA,KAAK,SAAS;AACX,gBAAA,MAAM,GAAG,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC;gBACvB,MAAM;AAET,YAAA,KAAK,QAAQ;AACV,gBAAA,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC,CAAC;gBAC1C,MAAM;AAET,YAAA,KAAK,UAAU;gBACZ,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;gBACrC,MAAM;AAET,YAAA,KAAK,QAAQ;AACV,gBAAA,MAAM,GAAG,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,KAAK,GAAG,CAAC,CAAC;gBAC5C,MAAM;AAET,YAAA,KAAK,QAAQ;;gBAEV,MAAM;AAET,YAAA,KAAK,QAAQ;AACV,gBAAA,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;gBAChC,MAAM;AAET,YAAA,KAAK,QAAQ;AACV,gBAAA,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;gBAC/C,MAAM;AACX,SAAA;AAED,QAAA,OAAO,MAAM,CAAC;AAChB,KAAA;AAED;;;;;;AAMG;AACH,IAAA,OAAO,YAAY,CAAC,MAAW,EAAE,SAAmC,EAAA;;AAGjE,QAAA,IAAI,OAAO,MAAM,KAAK,UAAU,EAAE;AAAE,YAAA,OAAO,KAAK,CAAC;AAAE,SAAA;QAEnD,IAAI,MAAM,KAAK,SAAS,EAAE;AAAE,YAAA,OAAO,IAAI,CAAC;AAAE,SAAA;;QAG1C,KAAK,IAAI,KAAK,GAAG,MAAM,CAAC,cAAc,CAAC,MAAM,CAAC,EAAE,KAAK,EAAE,KAAK,GAAG,MAAM,CAAC,cAAc,CAAC,KAAK,CAAC,EAC3F;YACG,IAAI,KAAK,KAAK,SAAS,EAAE;AAAE,gBAAA,OAAO,IAAI,CAAC;AAAE,aAAA;AAC3C,SAAA;AAED,QAAA,OAAO,KAAK,CAAC;AACf,KAAA;AAED;;;;;;AAMG;IACH,OAAO,UAAU,CAAC,IAAS,EAAA;AAExB,QAAA,OAAO,IAAI,KAAK,IAAI,IAAI,IAAI,KAAK,KAAK,CAAC,IAAI,OAAO,IAAI,KAAK,QAAQ;YAClE,OAAO,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,UAAU,CAAC;AAC/C,KAAA;AACH,CAAA;;AClID;;AAEG;AACU,MAAA,cAAc,CAAA;AAExB,IAAA,SAAS,CAAc;AAEd,IAAA,mBAAmB,CAAyB;AAErD,IAAA,YAAY,CAAmB;AAE/B,IAAA,QAAQ,GAA0C,IAAI,GAAG,EAAE,CAAC;IAE5D,UAAU,GAAG,KAAK,CAAC;AAEnB;;;;;;AAMG;AACH,IAAA,WAAA,CAAY,QAAqB,EAAE,WAA6B,EAAE,kBAA0C,EAAA;AAEzG,QAAA,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;AAE1B,QAAA,IAAI,CAAC,YAAY,GAAG,WAAW,CAAC;AAEhC,QAAA,IAAI,CAAC,mBAAmB,GAAG,kBAAkB,CAAC;AAE9C,QAAA,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;AACtB,KAAA;AAED;;;;;;AAMG;AACH,IAAA,MAAM,CAAC,OAAgC,EAAA;QAEpC,IAAI,IAAI,CAAC,UAAU,EAAE;AAAE,YAAA,MAAM,KAAK,CAAC,CAAgE,8DAAA,CAAA,CAAC,CAAC;AAAE,SAAA;AAEvG,QAAA,IAAI,IAAY,CAAC;QAEjB,IAAI,IAAI,GAAmB,EAAE,CAAC;AAE9B,QAAA,IAAI,IAA4B,CAAC;AAEjC,QAAA,MAAM,kBAAkB,GAA2B,IAAI,CAAC,mBAAmB,CAAC;AAE5E,QAAA,IAAI,OAAO,OAAO,KAAK,QAAQ,EAC/B;YACG,IAAI,GAAG,OAAO,CAAC;YACf,IAAI,GAAG,kBAAkB,CAAC;AAC5B,SAAA;AACI,aAAA,IAAI,OAAO,OAAO,KAAK,UAAU,IAAI,eAAe,CAAC,YAAY,CAAC,OAAO,EAAE,kBAAkB,CAAC,EACnG;YACG,IAAI,GAAG,OAAO,CAAC;AACjB,SAAA;aACI,IAAI,OAAO,OAAO,KAAK,QAAQ,IAAI,OAAO,KAAK,IAAI,EACxD;AACG,YAAA,CAAC,EAAE,IAAI,EAAE,IAAI,GAAG,kBAAkB,EAAE,GAAG,IAAI,EAAE,GAAG,OAAO,EAAE;AAC3D,SAAA;AAED,aAAA;AACG,YAAA,MAAM,IAAI,SAAS,CAAC,CAAA,8EAAA,CAAgF,CAAC,CAAC;AACxG,SAAA;QAED,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,IAAI,EAAE,kBAAkB,CAAC,EAC3D;AACG,YAAA,MAAM,IAAI,SAAS,CAAC,CAAA,8CAAA,EAAiD,kBAAkB,EAAE,IAAI,CAAI,EAAA,CAAA,CAAC,CAAC;AACrG,SAAA;AAED,QAAA,IAAI,GAAG,IAAI,IAAI,IAAI,EAAE,IAAI,CAAC;AAE1B,QAAA,IAAI,OAAO,IAAI,KAAK,QAAQ,EAAE;AAAE,YAAA,MAAM,IAAI,SAAS,CAAC,CAAA,oDAAA,CAAsD,CAAC,CAAC;AAAE,SAAA;AAE9G,QAAA,MAAM,cAAc,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC;QAEzE,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,EAAE,cAAc,CAAC,CAAC;AAExC,QAAA,OAAO,cAAc,CAAC;AACxB,KAAA;AAED;;AAEG;AACH,IAAA,KAAK,GAAA;QAEF,IAAI,IAAI,CAAC,UAAU,EAAE;YAAE,OAAO;AAAE,SAAA;QAEhC,KAAK,MAAM,OAAO,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,EAAE;YAAE,OAAO,CAAC,OAAO,EAAE,CAAC;AAAE,SAAA;AAEpE,QAAA,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;AACxB,KAAA;AAED;;;;AAIG;AACH,IAAA,MAAM,CAAC,IAAY,EAAA;QAEhB,IAAI,IAAI,CAAC,UAAU,EAAE;AAAE,YAAA,MAAM,KAAK,CAAC,CAAgE,8DAAA,CAAA,CAAC,CAAC;AAAE,SAAA;QAEvG,MAAM,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;AAExC,QAAA,IAAI,OAAO,EAAE;YAAE,OAAO,CAAC,OAAO,EAAE,CAAC;AAAE,SAAA;QAEnC,OAAO,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;AACpC,KAAA;AAED;;AAEG;AACH,IAAA,OAAO,GAAA;QAEJ,IAAI,IAAI,CAAC,UAAU,EAAE;YAAE,OAAO;AAAE,SAAA;QAEhC,IAAI,CAAC,KAAK,EAAE,CAAC;AAEb,QAAA,IAAI,CAAC,SAAS,GAAG,CAAC,IAAI,CAAC,CAAC;AACxB,QAAA,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;AAEzB,QAAA,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;AACzB,KAAA;AAED;;;;AAIG;AACH,IAAA,GAAG,CAAC,IAAY,EAAA;QAEb,IAAI,IAAI,CAAC,UAAU,EAAE;AAAE,YAAA,MAAM,KAAK,CAAC,CAA6D,2DAAA,CAAA,CAAC,CAAC;AAAE,SAAA;QAEpG,OAAO,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;AACjC,KAAA;AAED;;;;AAIG;AACH,IAAA,MAAM,CAAC,KAAiB,GAAA,KAAK,EAAA;QAE1B,IAAI,IAAI,CAAC,UAAU,EAAE;YAAE,OAAO;AAAE,SAAA;QAEhC,KAAK,MAAM,OAAO,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,EAAE;AAAE,YAAA,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;AAAE,SAAA;AAChF,KAAA;AACH,CAAA;;AC/JD;;;;;;;;;;;;;;;;;;;;;;;;AAwBG;AACU,MAAA,cAAc,CAAA;AAExB,IAAA,YAAY,CAA+B;AAElC,IAAA,YAAY,CAAW;AAEhC,IAAA,eAAe,GAA4B,IAAI,GAAG,EAAE,CAAC;AAErD;;;;AAIG;AACH,IAAA,WAAY,CAAA,WAAW,EAAE,cAA4C,EAAA;AAElE,QAAA,IAAI,CAAC,YAAY,GAAG,WAAW,CAAC;AAEhC,QAAA,IAAI,CAAC,YAAY,GAAG,cAAc,CAAC;AAEnC,QAAA,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;AACtB,KAAA;AAED;;AAEG;AACH,IAAA,IAAI,MAAM,GAAA,EAAa,OAAO,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;AAEjE;;;;;AAKG;AACH,IAAA,EAAE,MAAM,CAAC,QAAQ,CAAC,GAAA;QAEf,IAAI,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM,KAAK,CAAC,EAAE;YAAE,OAAO;AAAE,SAAA;QAEvD,KAAK,MAAM,KAAK,IAAI,IAAI,CAAC,YAAY,CAAC,OAAO,EAC7C;AACG,YAAA,MAAM,EAAE,GAAG,KAAK,EAAE,CAAC;AACrB,SAAA;AACH,KAAA;AAED;;AAEG;IACH,GAAG,CAAC,GAAG,OAAsC,EAAA;AAE1C;;AAEG;QACH,IAAI,cAAc,GAAW,CAAC,CAAC;AAE/B,QAAA,KAAK,MAAM,MAAM,IAAI,OAAO,EAC5B;AACG,YAAA,MAAM,UAAU,GAAG,OAAO,MAAM,CAAC;AAEjC,YAAA,IAAI,UAAU,KAAK,UAAU,KAAK,UAAU,KAAK,QAAQ,IAAI,MAAM,KAAK,IAAI,CAAC,EAC7E;AACG,gBAAA,MAAM,IAAI,SAAS,CAAC,CAAA,2DAAA,CAA6D,CAAC,CAAC;AACrF,aAAA;AAED,YAAA,IAAI,IAAI,GAAG,KAAK,CAAC,CAAC;AAClB,YAAA,IAAI,WAAW,GAAG,KAAK,CAAC,CAAC;YAEzB,IAAI,UAAU,KAAK,UAAU,EAC7B;AACG,gBAAA,IAAI,GAAG;oBACJ,EAAE,EAAE,KAAK,CAAC;oBACV,MAAM;AACN,oBAAA,MAAM,EAAE,CAAC;iBACX,CAAC;AAEF,gBAAA,WAAW,GAAG,MAAM,CAAC,SAAS,CAAC;AACjC,aAAA;iBACI,IAAI,UAAU,KAAK,QAAQ,EAChC;gBACG,IAAI,QAAQ,IAAI,MAAM,EACtB;AACG,oBAAA,IAAI,OAAO,MAAM,CAAC,MAAM,KAAK,UAAU,EACvC;AACG,wBAAA,MAAM,IAAI,SAAS,CAAC,CAAA,2DAAA,CAA6D,CAAC,CAAC;AACrF,qBAAA;AAED,oBAAA,IAAI,MAAM,CAAC,MAAM,KAAK,KAAK,CAAC,IAAI,OAAO,MAAM,CAAC,MAAM,KAAK,QAAQ;AAC7D,yBAAC,MAAM,CAAC,MAAM,GAAG,CAAC,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,EAC5C;AACG,wBAAA,MAAM,IAAI,SAAS,CACf,CAAA,mFAAA,CAAqF,CAAC,CAAC;AAC7F,qBAAA;AAED,oBAAA,IAAI,GAAG;AACJ,wBAAA,EAAE,EAAE,MAAM,CAAC,EAAE,KAAK,KAAK,CAAC,GAAG,MAAM,CAAC,EAAE,GAAG,KAAK,CAAC;wBAC7C,MAAM,EAAE,MAAM,CAAC,MAAM;AACrB,wBAAA,MAAM,EAAE,MAAM,CAAC,MAAM,IAAI,CAAC;qBAC5B,CAAC;oBAEF,WAAW,GAAG,MAAM,CAAC,MAAM,CAAC,SAAS,IAAI,MAAM,CAAC,SAAS,CAAC;AAC5D,iBAAA;AAED,qBAAA;AACG,oBAAA,MAAM,IAAI,SAAS,CAAC,CAAA,2DAAA,CAA6D,CAAC,CAAC;AACrF,iBAAA;AACH,aAAA;;AAGD,YAAA,MAAM,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,KAAK,KAAI;AAEzD,gBAAA,OAAO,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC;AACrC,aAAC,CAAC,CAAC;;YAGH,IAAI,KAAK,IAAI,CAAC,EACd;AACG,gBAAA,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;AACnD,aAAA;;AAED,aAAA;gBACG,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACvC,aAAA;AAED,YAAA,IAAI,OAAO,WAAW,KAAK,UAAU,EACrC;gBACG,MAAM,WAAW,GAAG,WAAW,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;;AAGnD,gBAAA,IAAI,OAAO,WAAW,KAAK,UAAU,EACrC;AACG,oBAAA,MAAM,IAAI,SAAS,CAClB,+FAA+F,CAAC,CAAC;AACpG,iBAAA;;gBAGD,IAAI,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,EACzC;AACG,oBAAA,MAAM,IAAI,KAAK,CACd,oFAAoF,CAAC,CAAC;AACzF,iBAAA;gBAED,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,WAAW,CAAC,CAAC;AACnD,gBAAA,cAAc,EAAE,CAAC;AACnB,aAAA;AACH,SAAA;;;AAID,QAAA,IAAI,cAAc,GAAG,OAAO,CAAC,MAAM,EAAE;YAAE,IAAI,CAAC,YAAY,EAAE,CAAC;AAAE,SAAA;AAC/D,KAAA;AAED;;AAEG;AACH,IAAA,KAAK,GAAA;QAEF,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC;;QAGrC,KAAK,MAAM,WAAW,IAAI,IAAI,CAAC,eAAe,CAAC,MAAM,EAAE,EACvD;AACG,YAAA,WAAW,EAAE,CAAC;AAChB,SAAA;AAED,QAAA,IAAI,CAAC,eAAe,CAAC,KAAK,EAAE,CAAC;QAE7B,IAAI,CAAC,YAAY,EAAE,CAAC;AACtB,KAAA;AAED;;AAEG;IACH,MAAM,CAAC,GAAG,OAAsC,EAAA;QAE7C,MAAM,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC;QAEhD,IAAI,MAAM,KAAK,CAAC,EAAE;YAAE,OAAO;AAAE,SAAA;AAE7B,QAAA,KAAK,MAAM,IAAI,IAAI,OAAO,EAC1B;;AAEG,YAAA,MAAM,YAAY,GAAG,OAAO,IAAI,KAAK,UAAU,GAAG,IAAI,GAAG,IAAI,KAAK,IAAI,IAAI,OAAO,IAAI,KAAK,QAAQ;AACjG,gBAAA,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,CAAC;YAEtB,IAAI,CAAC,YAAY,EAAE;gBAAE,SAAS;AAAE,aAAA;AAEhC,YAAA,KAAK,IAAI,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE,IAAI,IAAI,CAAC,GAC7D;AACG,gBAAA,IAAI,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,MAAM,KAAK,YAAY,EAC3D;oBACG,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;;AAG1C,oBAAA,IAAI,WAAW,GAAG,KAAK,CAAC,CAAC;AACzB,oBAAA,IAAI,QAAQ,WAAW,GAAG,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,KAAK,UAAU,EAChF;AACG,wBAAA,WAAW,EAAE,CAAC;AACd,wBAAA,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;AAC5C,qBAAA;AACH,iBAAA;AACH,aAAA;AACH,SAAA;;QAGD,IAAI,MAAM,KAAK,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM,EAAE;YAAE,IAAI,CAAC,YAAY,EAAE,CAAC;AAAE,SAAA;AAC3E,KAAA;AAED;;;;;AAKG;AACH,IAAA,QAAQ,CAAC,QAAmE,EAAA;QAEzE,MAAM,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC;QAEhD,IAAI,MAAM,KAAK,CAAC,EAAE;YAAE,OAAO;AAAE,SAAA;AAE7B,QAAA,IAAI,OAAO,QAAQ,KAAK,UAAU,EAClC;AACG,YAAA,MAAM,IAAI,SAAS,CAAC,CAAA,mDAAA,CAAqD,CAAC,CAAC;AAC7E,SAAA;AAED,QAAA,IAAI,CAAC,YAAY,CAAC,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,IAAI,KAAI;AAEnE,YAAA,MAAM,MAAM,GAAG,QAAQ,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,GAAG,IAAI,EAAE,CAAC,CAAC;AAEpD,YAAA,IAAI,MAAM,EACV;AACG,gBAAA,IAAI,WAAW,CAAC;AAChB,gBAAA,IAAI,QAAQ,WAAW,GAAG,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,KAAK,UAAU,EAC/E;AACG,oBAAA,WAAW,EAAE,CAAC;oBACd,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAC3C,iBAAA;AACH,aAAA;;YAGD,OAAO,CAAC,MAAM,CAAC;AAClB,SAAC,CAAC,CAAC;QAEH,IAAI,MAAM,KAAK,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM,EAAE;YAAE,IAAI,CAAC,YAAY,EAAE,CAAC;AAAE,SAAA;AAC3E,KAAA;AAED;;AAEG;IACH,UAAU,CAAC,GAAG,GAAU,EAAA;QAErB,MAAM,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC;QAEhD,IAAI,MAAM,KAAK,CAAC,EAAE;YAAE,OAAO;AAAE,SAAA;AAE7B,QAAA,IAAI,CAAC,YAAY,CAAC,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,IAAI,KAAI;YAEnE,IAAI,MAAM,GAAG,CAAC,CAAC;AAEf,YAAA,KAAK,MAAM,EAAE,IAAI,GAAG,EAAE;AAAE,gBAAA,MAAM,KAAK,IAAI,CAAC,EAAE,KAAK,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;AAAE,aAAA;;YAG7D,IAAI,CAAC,CAAC,MAAM,EACZ;AACG,gBAAA,IAAI,WAAW,CAAC;AAChB,gBAAA,IAAI,QAAQ,WAAW,GAAG,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,KAAK,UAAU,EAC/E;AACG,oBAAA,WAAW,EAAE,CAAC;oBACd,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAC3C,iBAAA;AACH,aAAA;AAED,YAAA,OAAO,CAAC,MAAM,CAAC;AAClB,SAAC,CAAC,CAAC;QAEH,IAAI,MAAM,KAAK,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM,EAAE;YAAE,IAAI,CAAC,YAAY,EAAE,CAAC;AAAE,SAAA;AAC3E,KAAA;AACH,CAAA;;ACnSD;;;AAGG;AACmB,MAAA,cAAc,CAAA;AAE1B,IAAA,cAAc,CAAyB;AAEvC,IAAA,WAAW,CAA+B;AAE1C,IAAA,QAAQ,CAAc;AAEtB,IAAA,UAAU,CAAW;AAErB,IAAA,SAAS,CAAoB;AAE7B,IAAA,QAAQ,CAA8B;AAEtC,IAAA,MAAM,CAAyB;IAE/B,SAAS,GAAG,KAAK,CAAC;AAEzB;;;;;;;;AAQG;AACH,IAAA,WAAA,CAAY,QAAqB,EAAE,UAAoB,EAAE,aAAgC,EAAA;AAEtF,QAAA,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;AAEzB,QAAA,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAE7B,IAAI,CAAC,SAAS,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,MAAM,EAAE,aAAa,EAAE,CAAC;AACvF,KAAA;AAED;;AAEG;AACH,IAAA,IAAI,MAAM,GAAA;AAEP,QAAA,OAAO,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,SAAS,KAAK,IAAI;YAC7E,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,MAAM,KAAK,IAAI,CAAC;AAC1C,KAAA;AAED;;AAEG;AACH,IAAA,IAAI,MAAM,GAAA;AAEP,QAAA,OAAO,IAAI,CAAC,SAAS,CAAC,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC;AAChE,KAAA;;AAGD;;AAEG;IACH,IAAI,QAAQ,GAAc,EAAA,OAAO,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;;AAG3D;;AAEG;AACH,IAAA,IAAI,QAAQ,CAAC,QAAiB,EAAA,EAAI,IAAI,CAAC,SAAS,CAAC,QAAQ,GAAG,QAAQ,CAAC,EAAE;;AAIvE;;;;;;;;;;;;AAYG;AACH,IAAA,cAAc,CAAC,QAAa,EAAE,OAAsB,EAAE,KAAA,GAAiB,KAAK,EAAA;;AAGzE,QAAA,MAAM,WAAW,GAAG,OAAO,KAAK,KAAK,SAAS,GAAG,KAAK,wBAAwB,KAAK,CAAC;QAEpF,IAAI,OAAO,GAAG,IAAI,CAAC;AACnB,QAAA,MAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC;AAEtC,QAAA,IAAI,QAAQ,EACZ;YACG,KAAK,IAAI,IAAI,GAAW,QAAQ,CAAC,MAAM,EAAE,EAAE,IAAI,IAAI,CAAC,GACpD;gBACG,OAAO,IAAI,eAAe,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,GAAG,UAAU,IAAI,OAAO,IAAI,CAAC,CAAC,IAAI,OAAO,IAAI,CAAC,CAAC,CAAC;AACxG,aAAA;AACH,SAAA;AAED,QAAA,IAAI,CAAC,SAAS,CAAC,IAAI,GAAG,OAAO,CAAC;AAE9B,QAAA,IAAI,WAAW,KAAK,OAAO,KAAK,OAAO,GAAG,CAAC,eAAe,CAAC,WAAW,CAAC,QAAQ,EAAE,QAAQ,CAAC,GAAG,IAAI,CAAC,EAClG;YACG,IAAI,CAAC,UAAU,EAAE,CAAC;AACpB,SAAA;AACH,KAAA;AAOD;;AAEG;AACH,IAAA,OAAO,GAAA;QAEJ,IAAI,IAAI,CAAC,SAAS,EAAE;YAAE,OAAO;AAAE,SAAA;AAE/B,QAAA,IAAI,CAAC,SAAS,CAAC,KAAK,GAAG,IAAI,CAAC;AAC5B,QAAA,IAAI,CAAC,SAAS,CAAC,IAAI,GAAG,IAAI,CAAC;AAC3B,QAAA,IAAI,CAAC,SAAS,CAAC,QAAQ,GAAG,IAAI,CAAC;AAC/B,QAAA,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,IAAI,CAAC;AAE7B,QAAA,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;AACxB,KAAA;AAED;;;;;;;;AAQG;AACH,IAAA,YAAY,CAAC,WAAyC,EAAE,QAAqC,EAC5F,cAAuC,EAAA;AAErC,QAAA,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;AAE/B,QAAA,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;AAEzB,QAAA,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC;AAErC,QAAA,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC;AACpC,KAAA;AAQH,CAAA;;ACnKD;;;;;;;;;;;;;;;AAeG;AACU,MAAA,WAAW,CAAA;AAErB,IAAA,SAAS,CAA8B;AAE9B,IAAA,YAAY,CAAW;AAEhC,IAAA,YAAY,CAAW;AAEvB;;;;AAIG;AACH,IAAA,WAAY,CAAA,WAAqB,EAAE,QAAqC,EAAA;AAErE,QAAA,IAAI,CAAC,YAAY,GAAG,WAAW,CAAC;AAEhC,QAAA,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;AAE1B,QAAA,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;AACtB,KAAA;AAED;;AAEG;AACH,IAAA,KAAK,GAAA;AAEF,QAAA,MAAM,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC;AAE9C,QAAA,IAAI,CAAC,SAAS,CAAC,SAAS,GAAG,IAAI,CAAC;AAEhC,QAAA,IAAI,OAAO,IAAI,CAAC,YAAY,KAAK,UAAU,EAC3C;YACG,IAAI,CAAC,YAAY,EAAE,CAAC;AACpB,YAAA,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC,CAAC;AAC7B,SAAA;;AAGD,QAAA,IAAI,OAAO,YAAY,KAAK,UAAU,EAAE;YAAE,IAAI,CAAC,YAAY,EAAE,CAAC;AAAE,SAAA;AAClE,KAAA;AAED;;;;;;;AAOG;AACH,IAAA,GAAG,CAAC,IAA8B,EAAA;AAE/B,QAAA,IAAI,OAAO,IAAI,CAAC,YAAY,KAAK,UAAU,EAC3C;YACG,IAAI,CAAC,YAAY,EAAE,CAAC;AACpB,YAAA,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC,CAAC;AAC7B,SAAA;AAED,QAAA,IAAI,SAAS,GAAG,KAAK,CAAC,CAAC;AACvB,QAAA,IAAI,WAAW,GAAG,KAAK,CAAC,CAAC;AAEzB,QAAA,QAAQ,OAAO,IAAI;AAEhB,YAAA,KAAK,UAAU;gBACZ,SAAS,GAAG,IAAI,CAAC;AACjB,gBAAA,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC;gBAC7B,MAAM;AAET,YAAA,KAAK,QAAQ;;gBAEV,IAAI,IAAI,KAAK,IAAI,EAAE;oBAAE,MAAM;AAAE,iBAAA;AAE7B,gBAAA,IAAI,OAAO,IAAI,CAAC,OAAO,KAAK,UAAU,EACtC;AACG,oBAAA,MAAM,IAAI,SAAS,CAAC,CAAA,yDAAA,CAA2D,CAAC,CAAC;AACnF,iBAAA;AAED,gBAAA,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC;gBACzB,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,IAAI,IAAI,CAAC,SAAS,CAAC;gBACvD,MAAM;AACX,SAAA;AAED,QAAA,IAAI,OAAO,SAAS,KAAK,UAAU,EACnC;AACG,YAAA,IAAI,CAAC,SAAS,CAAC,SAAS,GAAG,SAAS,CAAC;AACvC,SAAA;AAED,aAAA;AACG,YAAA,MAAM,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC;AAC9C,YAAA,IAAI,CAAC,SAAS,CAAC,SAAS,GAAG,IAAI,CAAC;;AAGhC,YAAA,IAAI,OAAO,YAAY,KAAK,UAAU,EAAE;gBAAE,IAAI,CAAC,YAAY,EAAE,CAAC;AAAE,aAAA;YAChE,OAAO;AACT,SAAA;AAED,QAAA,IAAI,OAAO,WAAW,KAAK,UAAU,EACrC;YACG,IAAI,CAAC,YAAY,GAAG,WAAW,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;;AAGnD,YAAA,IAAI,OAAO,IAAI,CAAC,YAAY,KAAK,UAAU,EAC3C;AACG,gBAAA,MAAM,IAAI,KAAK,CACd,CAAA,4FAAA,CAA8F,CAAC,CAAC;AACnG,aAAA;AACH,SAAA;AAED,aAAA;;;YAGG,IAAI,CAAC,YAAY,EAAE,CAAC;AACtB,SAAA;AACH,KAAA;AACH,CAAA;;AClID;;;;;;;;;;;AAWG;AACU,MAAA,UAAU,CAAA;AAEV,IAAA,UAAU,CAAmB;AAEtC;;AAEG;AACM,IAAA,MAAM,CAAU;AAEzB;;AAEG;AACM,IAAA,MAAM,CAAS;AAExB;;;;AAIG;AACM,IAAA,MAAM,CAA4B;AAE3C,IAAA,WAAA,CAAY,cAAyC,EAAA;AAEjD,QAAA,IAAI,CAAC,UAAU,GAAG,cAAc,CAAC,SAAS,CAAC;QAE3C,IAAI,CAAC,MAAM,GAAG,cAAc,CAAC,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;;AAGzD,QAAA,MAAM,CAAC,gBAAgB,CAAC,IAAI,EAAE;YAC3B,MAAM,EAAE,EAAE,GAAG,EAAE,MAAM,cAAc,CAAC,MAAM,EAAE;YAC5C,MAAM,EAAE,EAAE,GAAG,EAAE,MAAM,cAAc,CAAC,MAAM,EAAE;AAC9C,SAAA,CAAC,CAAC;AAEH,QAAA,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;AACvB,KAAA;AAED;;AAEG;AACH,IAAA,IAAI,IAAI,GAAA;AAEJ,QAAA,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC;AAC/B,KAAA;AAED;;;;;AAKG;AACH,IAAA,EAAE,MAAM,CAAC,QAAQ,CAAC,GAAA;AAEd,QAAA,MAAM,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC;AAElC,QAAA,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE;YAAE,OAAO;AAAE,SAAA;AAEjC,QAAA,MAAM,QAAQ,GAAG,SAAS,CAAC,QAAQ,CAAC;AACpC,QAAA,MAAM,MAAM,GAAG,SAAS,CAAC,KAAK,CAAC,MAAM,CAAC;AAEtC,QAAA,IAAI,QAAQ,EACZ;YACI,KAAK,IAAI,IAAI,GAAG,MAAM,EAAE,EAAE,IAAI,IAAI,CAAC,GAAG;AAAE,gBAAA,MAAM,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;AAAE,aAAA;AACzE,SAAA;AAED,aAAA;YACI,KAAK,IAAI,IAAI,GAAG,CAAC,EAAE,IAAI,GAAG,MAAM,EAAE,IAAI,EAAE,EAAE;AAAE,gBAAA,MAAM,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;AAAE,aAAA;AAC7E,SAAA;AACJ,KAAA;AACJ,CAAA;;AC7ED;;;;;;;;;;;;;AAaG;AACU,MAAA,UAAU,CAAA;AAEnB;;AAEG;AACH,IAAA,KAAK,CAAa;AAElB;;;;AAIG;AACH,IAAA,MAAM,CAAiE;AAEvE;;;;AAIG;AACH,IAAA,MAAM,CAA4B;AAElC;;AAEG;AACH,IAAA,OAAO,CAAa;AAEpB;;;;AAIG;AACH,IAAA,GAAG,CAA4C;AAE/C,IAAA,WAAA,CAAY,cAAuC,EAAA;QAE/C,IAAI,CAAC,KAAK,GAAG,cAAc,CAAC,KAAK,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;QACvD,IAAI,CAAC,MAAM,GAAG,cAAc,CAAC,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;QACzD,IAAI,CAAC,MAAM,GAAG,cAAc,CAAC,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;QACzD,IAAI,CAAC,OAAO,GAAG,cAAc,CAAC,OAAO,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;QAC3D,IAAI,CAAC,GAAG,GAAG,cAAc,CAAC,GAAG,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;AAEnD,QAAA,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;AACvB,KAAA;AACJ,CAAA;;AC3DD;AACG;AACG,MAAOA,SAAW,SAAQ,cAA8B,CAAA;AAE3D;;AAEG;AACH,IAAA,YAAY,GAAA;AAET,QAAA,OAAO,CAAC,CAAC,EAAE,CAAC,KAAK,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrF,KAAA;AAED;;;;;;;AAOG;AACH,IAAA,UAAU,GAAA;QAEP,MAAM,IAAI,GAAG,EAAE,CAAC;QAEhB,MAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;QAC/B,IAAI,CAAC,KAAK,EAAE;AAAE,YAAA,OAAO,IAAI,CAAC;AAAE,SAAA;AAE5B,QAAA,MAAM,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC;QAEzC,IAAI,OAAO,GAAG,IAAI,CAAC;AAEnB,QAAA,MAAM,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;;QAG1C,IAAI,eAAe,CAAC,UAAU,CAAC,WAAW,CAAC,IAAI,WAAW,CAAC,MAAM,EACjE;AACG,YAAA,KAAK,MAAM,aAAa,IAAI,WAAW,EACvC;AACG,gBAAA,MAAM,KAAK,GAAG,KAAK,CAAC,aAAa,CAAC,CAAC;gBACnC,OAAO,GAAG,IAAI,CAAC;AAEf,gBAAA,KAAK,IAAI,OAAO,GAAG,CAAC,EAAE,SAAS,GAAG,OAAO,CAAC,MAAM,EAAE,OAAO,GAAG,SAAS,EAAE,OAAO,EAAE,EAChF;oBACG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,EACnC;wBACG,OAAO,GAAG,KAAK,CAAC;wBAChB,MAAM;AACR,qBAAA;AACH,iBAAA;AAED,gBAAA,IAAI,OAAO,EAAE;AAAE,oBAAA,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;AAAE,iBAAA;AAC5C,aAAA;AACH,SAAA;AAED,aAAA;AACG,YAAA,KAAK,IAAI,IAAI,GAAG,CAAC,EAAE,MAAM,GAAG,KAAK,CAAC,MAAM,EAAE,IAAI,GAAG,MAAM,EAAE,IAAI,EAAE,EAC/D;gBACG,OAAO,GAAG,IAAI,CAAC;AAEf,gBAAA,KAAK,IAAI,OAAO,GAAG,CAAC,EAAE,SAAS,GAAG,OAAO,CAAC,MAAM,EAAE,OAAO,GAAG,SAAS,EAAE,OAAO,EAAE,EAChF;AACG,oBAAA,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,EACzC;wBACG,OAAO,GAAG,KAAK,CAAC;wBAChB,MAAM;AACR,qBAAA;AACH,iBAAA;AAED,gBAAA,IAAI,OAAO,EAAE;AAAE,oBAAA,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAAE,iBAAA;AACnC,aAAA;AACH,SAAA;AAED,QAAA,OAAO,IAAI,CAAC;AACd,KAAA;AAED;;;;;AAKG;AACH,IAAA,MAAM,CAAC,KAAiB,GAAA,KAAK,EAAA;QAE1B,IAAI,IAAI,CAAC,SAAS,EAAE;YAAE,OAAO;AAAE,SAAA;AAE/B,QAAA,MAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC;AACtC,QAAA,MAAM,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;QAEpC,MAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;AAC/B,QAAA,MAAM,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;;AAG1C,QAAA,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,MAAM,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS;AACrE,aAAC,IAAI,CAAC,SAAS,CAAC,KAAK,IAAI,KAAK,EAAE,MAAM,KAAK,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,MAAM,CAAC,EACxE;AACG,YAAA,IAAI,CAAC,SAAS,CAAC,KAAK,GAAG,IAAI,CAAC;AAC9B,SAAA;;QAGD,IAAI,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,EACvC;YACG,IAAI,CAAC,SAAS,CAAC,KAAK,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC;AAC3C,SAAA;;QAGD,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,IAAI,WAAW,EAAE,MAAM,EAChD;YACG,IAAI,CAAC,SAAS,CAAC,KAAK,GAAG,CAAC,GAAG,WAAW,CAAC,CAAC;AAC1C,SAAA;AAED,QAAA,IAAI,IAAI,CAAC,QAAQ,CAAC,SAAS,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EACnD;;AAEG,YAAA,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,EACzB;AACG,gBAAA,IAAI,CAAC,SAAS,CAAC,KAAK,GAAG,CAAC,GAAG,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC;AACzD,aAAA;YAED,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AACzC,SAAA;QAED,IAAI,CAAC,cAAc,CAAC,QAAQ,EAAE,OAAO,EAAE,KAAK,CAAC,CAAC;;AAG9C,QAAA,IAAI,CAAC,cAAc,EAAE,MAAM,CAAC,KAAK,CAAC,CAAC;AACrC,KAAA;AACH,CAAA;;AC/GD;;AAEG;AACU,MAAA,mBAAmB,CAAA;AAE7B,IAAA,MAAM,CAAgB;AAEb,IAAA,QAAQ,CAAC;AAET,IAAA,iBAAiB,CAAC;AAElB,IAAA,QAAQ,CAAoB;AAE5B,IAAA,YAAY,GAAiC,EAAE,OAAO,EAAE,EAAE,EAAE,CAAC;AAE7D,IAAA,MAAM,CAAa;AAEnB,IAAA,eAAe,CAAwB;IAEhD,SAAS,GAAY,KAAK,CAAC;AAElB,IAAA,KAAK,CAAiB;AAE/B,IAAA,SAAS,GAAgC,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;IAE7D,cAAc,GAAG,EAAE,CAAC;IAEpB,UAAU,GAAG,KAAK,CAAC;AAEnB;;;;;;AAMG;AACH,IAAA,WAAA,CAAY,KAAoB,EAAE,WAAkC,EAAE,OAAuB,EAAA;AAE1F,QAAA,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QAEpB,IAAI,CAAC,MAAM,GAAG,IAAIA,SAAO,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,WAAW,CAAC,CAAC;QACxF,IAAI,CAAC,eAAe,GAAG,IAAI,UAAU,CAAY,IAAI,CAAC,MAAM,CAAC,CAAC;AAE9D,QAAA,IAAI,CAAC,QAAQ,GAAG,IAAI,cAAc,CAAC,IAAI,CAAC,eAAe,CAAC,MAAM,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;AAEnF,QAAA,IAAI,CAAC,KAAK,GAAG,IAAI,WAAW,CAAC,IAAI,CAAC,eAAe,CAAC,MAAM,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;AAE1E,QAAA,IAAI,CAAC,QAAQ,GAAG,IAAI,cAAc,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,eAAe,EAAE,mBAAmB,CAAC,CAAC;QAC3F,IAAI,CAAC,iBAAiB,GAAG,IAAI,UAAU,CAAiB,IAAI,CAAC,QAAQ,CAAC,CAAC;AAEvE,QAAA,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;AAE3E,QAAA,IAAI,OAAO,GAAwC,KAAK,CAAC,CAAC;AAC1D,QAAA,IAAI,IAAI,GAA+B,KAAK,CAAC,CAAC;AAE9C,QAAA,IAAI,OAAO,KAAK,KAAK,CAAC,KAAK,SAAS,IAAI,OAAO,IAAI,MAAM,IAAI,OAAO,CAAC,EACrE;AACG,YAAA,IAAI,OAAO,CAAC,OAAO,KAAK,KAAK,CAAC,EAC9B;gBACG,IAAI,eAAe,CAAC,UAAU,CAAC,OAAO,CAAC,OAAO,CAAC,EAC/C;AACG,oBAAA,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC;AAC5B,iBAAA;AAED,qBAAA;AACG,oBAAA,MAAM,IAAI,SAAS,CAClB,CAAA,oFAAA,CAAsF,CAAC,CAAC;AAC3F,iBAAA;AACH,aAAA;AAED,YAAA,IAAI,OAAO,CAAC,IAAI,KAAK,KAAK,CAAC,EAC3B;AACG,gBAAA,IAAI,OAAO,OAAO,CAAC,IAAI,KAAK,UAAU,EACtC;AACG,oBAAA,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC;AACtB,iBAAA;AACI,qBAAA,IAAI,OAAO,OAAO,CAAC,IAAI,KAAK,QAAQ,IAAI,OAAO,CAAC,IAAI,KAAK,IAAI,EAClE;AACG,oBAAA,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC;AACtB,iBAAA;AAED,qBAAA;AACG,oBAAA,MAAM,IAAI,SAAS,CAClB,CAAA,6FAAA,CAA+F,CAAC,CAAC;AACpG,iBAAA;AACH,aAAA;AACH,SAAA;;AAGD,QAAA,IAAI,OAAO,EAAE;YAAE,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,OAAO,CAAC,CAAC;AAAE,SAAA;AAC9C,QAAA,IAAI,IAAI,EAAE;AAAE,YAAA,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;AAAE,SAAA;;QAGlC,IAAI,CAAC,UAAU,EAAE,CAAC;AACpB,KAAA;AAED;;;;;;;;AAQG;IACH,IAAI,IAAI,GAAiB,EAAA,OAAO,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE;AAEjD;;AAEG;AACH,IAAA,IAAI,OAAO,GAAiC,EAAA,OAAO,IAAI,CAAC,iBAAiB,CAAC,EAAE;AAE5E;;AAEG;AACH,IAAA,IAAI,OAAO,GAAwB,EAAA,OAAO,IAAI,CAAC,QAAQ,CAAC,EAAE;AAE1D;;;;AAIG;AACH,IAAA,IAAI,KAAK,GAA4B,EAAA,OAAO,IAAI,CAAC,eAAe,CAAC,EAAE;AAEnE;;AAEG;AACH,IAAA,IAAI,SAAS,GAAc,EAAA,OAAO,IAAI,CAAC,UAAU,CAAC,EAAE;AAEpD;;AAEG;AACH,IAAA,IAAI,MAAM,GAAA;QAEP,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;AAE7B,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM;AAC5C,YAAA,KAAK,GAAG,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC;AAC5B,KAAA;AAED;;AAEG;AACH,IAAA,IAAI,QAAQ,GAAc,EAAA,OAAO,IAAI,CAAC,SAAS,CAAC,EAAE;AAElD;;AAEG;AACH,IAAA,IAAI,IAAI,GAAqB,EAAA,OAAO,IAAI,CAAC,KAAK,CAAC,EAAE;AAEjD;;;;AAIG;IACH,IAAI,QAAQ,CAAC,QAAiB,EAAA;AAE3B,QAAA,IAAI,OAAO,QAAQ,KAAK,SAAS,EACjC;AACG,YAAA,MAAM,IAAI,SAAS,CAAC,CAAA,gEAAA,CAAkE,CAAC,CAAC;AAC1F,SAAA;AAED,QAAA,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;AAC1B,QAAA,IAAI,CAAC,MAAM,CAAC,QAAQ,GAAG,QAAQ,CAAC;;AAGhC,QAAA,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;AAC1B,KAAA;AAED;;AAEG;AACH,IAAA,OAAO,GAAA;AAEJ,QAAA,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;;AAGvB,QAAA,IAAI,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,CAAC;AACrB,QAAA,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;;AAGzB,QAAA,IAAI,CAAC,cAAc,CAAC,MAAM,GAAG,CAAC,CAAC;AAE/B,QAAA,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC;AACxB,QAAA,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC;AACtB,QAAA,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;AACtB,QAAA,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;AACrB,KAAA;AAED;;;;;AAKG;AACH,IAAA,UAAU,GAAK,GAAA;AAEf;;;;AAIG;AACH,IAAA,EAAE,MAAM,CAAC,QAAQ,CAAC,GAAA;QAEf,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;AAE7B,QAAA,IAAI,IAAI,CAAC,UAAU,IAAI,KAAK,KAAK,IAAI,IAAI,KAAK,EAAE,MAAM,KAAK,CAAC,EAAE;YAAE,OAAO;AAAE,SAAA;AAEzE,QAAA,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,EACtB;AACG,YAAA,KAAK,MAAM,KAAK,IAAI,IAAI,CAAC,KAAK,EAAE;AAAE,gBAAA,MAAM,KAAK,CAAC,KAAK,CAAC,CAAC;AAAE,aAAA;AACzD,SAAA;AAED,aAAA;YACG,IAAI,IAAI,CAAC,QAAQ,EACjB;gBACG,KAAK,IAAI,IAAI,GAAG,KAAK,CAAC,MAAM,EAAE,EAAE,IAAI,IAAI,CAAC,GAAG;AAAE,oBAAA,MAAM,KAAK,CAAC,IAAI,CAAC,CAAC;AAAE,iBAAA;AACpE,aAAA;AAED,iBAAA;AACG,gBAAA,KAAK,IAAI,IAAI,GAAG,CAAC,EAAE,IAAI,GAAG,KAAK,CAAC,MAAM,EAAE,IAAI,EAAE,EAAE;AAAE,oBAAA,MAAM,KAAK,CAAC,IAAI,CAAC,CAAC;AAAE,iBAAA;AACxE,aAAA;AACH,SAAA;AACH,KAAA;;AAID;;;;;;AAMG;AACH,IAAA,SAAS,CAAC,OAAgD,EAAA;AAEvD,QAAA,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AAElC,QAAA,OAAO,CAAC,IAAI,CAAC,CAAC;;AAGd,QAAA,OAAO,MAAK;AAET,YAAA,MAAM,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC,GAAG,KAAK,GAAG,KAAK,OAAO,CAAC,CAAC;YACtE,IAAI,KAAK,IAAI,CAAC,EAAE;gBAAE,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;AAAE,aAAA;AAC5D,SAAC,CAAC;AACJ,KAAA;AAED;;AAEG;AACH,IAAA,kBAAkB,GAAA;AAEf,QAAA,KAAK,IAAI,IAAI,GAAG,CAAC,EAAE,IAAI,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE,IAAI,EAAE,EAAE;YAAE,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC;AAAE,SAAA;AACpG,KAAA;AACH,CAAA;;AC9PD;;;AAGG;AACU,MAAA,eAAe,CAAA;AAEzB,IAAA,MAAM,GAAkB,CAAC,IAAI,CAAC,CAAC;AAEtB,IAAA,QAAQ,CAAiC;AAEzC,IAAA,iBAAiB,CAA6B;AAE9C,IAAA,QAAQ,CAAoB;AAE5B,IAAA,YAAY,GAAiC,EAAE,OAAO,EAAE,EAAE,EAAE,CAAC;AAE7D,IAAA,MAAM,CAAa;AAEnB,IAAA,eAAe,CAAwB;IAEhD,SAAS,GAAY,KAAK,CAAC;AAElB,IAAA,KAAK,CAAiB;AAE/B,IAAA,SAAS,GAAgC,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;IAE7D,cAAc,GAAG,EAAE,CAAC;IAEpB,UAAU,GAAG,KAAK,CAAC;AAEnB;;;;;AAKG;AACH,IAAA,WAAA,CAAY,IAAkC,EAAA;AAE3C,QAAA,IAAI,YAAY,GAAG,KAAK,CAAC,CAAC;AAC1B,QAAA,IAAI,OAAO,GAA0C,KAAK,CAAC,CAAC;AAC5D,QAAA,IAAI,IAAI,GAA+B,KAAK,CAAC,CAAC;QAE9C,IAAI,IAAI,KAAK,IAAI,EACjB;AACG,YAAA,MAAM,IAAI,SAAS,CAAC,CAAA,8CAAA,CAAgD,CAAC,CAAC;AACxE,SAAA;AAED,QAAA,IAAI,IAAI,KAAK,KAAK,CAAC,IAAI,OAAO,IAAI,KAAK,QAAQ,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,IAAI,CAAC,EACpF;AACG,YAAA,MAAM,IAAI,SAAS,CAAC,CAAA,8CAAA,CAAgD,CAAC,CAAC;AACxE,SAAA;QAED,IAAI,IAAI,KAAK,KAAK,CAAC,IAAI,MAAM,CAAC,QAAQ,IAAK,IAAoB,EAC/D;YACG,YAAY,GAAG,IAAI,CAAC;AACtB,SAAA;AACI,aAAA,IAAI,IAAI,KAAK,KAAK,CAAC,KAAK,MAAM,IAAI,IAAI,IAAI,SAAS,IAAI,IAAI,IAAI,MAAM,IAAI,IAAI,CAAC,EACnF;AACG,YAAA,IAAI,IAAI,CAAC,IAAI,KAAK,KAAK,CAAC,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,EAClE;AACG,gBAAA,MAAM,IAAI,SAAS,CAAC,CAAA,uEAAA,CAAyE,CAAC,CAAC;AACjG,aAAA;AAED,YAAA,YAAY,GAAG,IAAI,CAAC,IAAI,CAAC;AAEzB,YAAA,IAAI,IAAI,CAAC,OAAO,KAAK,KAAK,CAAC,EAC3B;gBACG,IAAI,eAAe,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,EAC5C;AACG,oBAAA,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;AACzB,iBAAA;AAED,qBAAA;AACG,oBAAA,MAAM,IAAI,SAAS,CAAC,CAAA,0EAAA,CAA4E,CAAC,CAAC;AACpG,iBAAA;AACH,aAAA;AAED,YAAA,IAAI,IAAI,CAAC,IAAI,KAAK,KAAK,CAAC,EACxB;AACG,gBAAA,IAAI,OAAO,IAAI,CAAC,IAAI,KAAK,UAAU,EACnC;AACG,oBAAA,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;AACnB,iBAAA;AACI,qBAAA,IAAI,OAAO,IAAI,CAAC,IAAI,KAAK,QAAQ,IAAI,IAAI,CAAC,IAAI,KAAK,IAAI,EAC5D;AACG,oBAAA,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;AACnB,iBAAA;AAED,qBAAA;AACG,oBAAA,MAAM,IAAI,SAAS,CAClB,CAAA,mFAAA,CAAqF,CAAC,CAAC;AAC1F,iBAAA;AACH,aAAA;AACH,SAAA;;AAGD,QAAA,IAAI,YAAY,EAChB;AACG,YAAA,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,OAAO,CAAC,YAAY,CAAC,GAAG,YAAY,GAAG,CAAC,GAAG,YAAY,CAAC,CAAC;AAClF,SAAA;AAED,QAAA,IAAI,CAAC,MAAM,GAAG,IAAIA,SAAO,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QAC3E,IAAI,CAAC,eAAe,GAAG,IAAI,UAAU,CAAY,IAAI,CAAC,MAAM,CAAC,CAAC;AAE9D,QAAA,IAAI,CAAC,QAAQ,GAAG,IAAI,cAAc,CAAC,IAAI,CAAC,eAAe,CAAC,MAAM,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;AAEnF,QAAA,IAAI,CAAC,KAAK,GAAG,IAAI,WAAW,CAAC,IAAI,CAAC,eAAe,CAAC,MAAM,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;AAE1E,QAAA,IAAI,CAAC,QAAQ,GAAG,IAAI,cAAc,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,eAAe,EAAE,mBAAmB,CAAC,CAAC;QAC3F,IAAI,CAAC,iBAAiB,GAAG,IAAI,UAAU,CAAiB,IAAI,CAAC,QAAQ,CAAC,CAAC;AAEvE,QAAA,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;;AAG3E,QAAA,IAAI,OAAO,EAAE;YAAE,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,OAAO,CAAC,CAAC;AAAE,SAAA;AAC9C,QAAA,IAAI,IAAI,EAAE;AAAE,YAAA,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;AAAE,SAAA;;QAGlC,IAAI,CAAC,UAAU,EAAE,CAAC;AACpB,KAAA;AAED;;;;;;;;AAQG;IACH,IAAI,IAAI,GAAe,EAAA,OAAO,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE;AAE/C;;AAEG;AACH,IAAA,IAAI,OAAO,GAAiC,EAAA,OAAO,IAAI,CAAC,iBAAiB,CAAC,EAAE;AAE5E;;AAEG;AACH,IAAA,IAAI,OAAO,GAAwB,EAAA,OAAO,IAAI,CAAC,QAAQ,CAAC,EAAE;AAE1D;;AAEG;AACH,IAAA,IAAI,KAAK,GAA4B,EAAA,OAAO,IAAI,CAAC,eAAe,CAAC,EAAE;AAEnE;;AAEG;AACH,IAAA,IAAI,SAAS,GAAc,EAAA,OAAO,IAAI,CAAC,UAAU,CAAC,EAAE;AAEpD;;;;AAIG;AACH,IAAA,IAAI,MAAM,GAAA;QAEP,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;AAC7B,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,eAAe,CAAC,MAAM;AACtD,YAAA,KAAK,GAAG,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC;AAC5B,KAAA;AAED;;;;AAIG;AACH,IAAA,IAAI,QAAQ,GAAK,EAAA,OAAO,IAAI,CAAC,SAAS,CAAC,EAAE;AAEzC;;AAEG;AACH,IAAA,IAAI,IAAI,GAAqB,EAAA,OAAO,IAAI,CAAC,KAAK,CAAC,EAAE;AAEjD;;;;AAIG;IACH,IAAI,QAAQ,CAAC,QAAiB,EAAA;AAE3B,QAAA,IAAI,OAAO,QAAQ,KAAK,SAAS,EACjC;AACG,YAAA,MAAM,IAAI,SAAS,CAAC,CAAA,4DAAA,CAA8D,CAAC,CAAC;AACtF,SAAA;AAED,QAAA,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;AAC1B,QAAA,IAAI,CAAC,MAAM,CAAC,QAAQ,GAAG,QAAQ,CAAC;;AAGhC,QAAA,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;AAC1B,KAAA;AAED;;AAEG;AACH,IAAA,OAAO,GAAA;QAEJ,IAAI,IAAI,CAAC,UAAU,EAAE;YAAE,OAAO;AAAE,SAAA;AAEhC,QAAA,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;AACvB,QAAA,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC;;AAGxB,QAAA,IAAI,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,CAAC;AACrB,QAAA,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;;AAGxB,QAAA,IAAI,CAAC,cAAc,CAAC,MAAM,GAAG,CAAC,CAAC;AAE/B,QAAA,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC;AACtB,QAAA,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;AACtB,QAAA,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;AACrB,KAAA;AAED;;;;;AAKG;AACH,IAAA,UAAU,GAAK,GAAA;AAEf;;;;;;;AAOG;AACH,IAAA,OAAO,CAAC,IAA8B,EAAE,OAAA,GAAmB,KAAK,EAAA;QAE7D,IAAI,IAAI,KAAK,IAAI,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,IAAI,CAAC,EACtD;AACG,YAAA,MAAM,IAAI,SAAS,CAAC,CAAA,sDAAA,CAAwD,CAAC,CAAC;AAChF,SAAA;AAED,QAAA,IAAI,OAAO,OAAO,KAAK,SAAS,EAChC;AACG,YAAA,MAAM,IAAI,SAAS,CAAC,CAAA,0DAAA,CAA4D,CAAC,CAAC;AACpF,SAAA;QAED,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;;;QAI7B,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,OAAO,EACpC;AACG,YAAA,IAAI,IAAI,EACR;AACG,gBAAA,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC;AAC1D,aAAA;AACH,SAAA;AAED,aAAA;AACG,YAAA,IAAI,IAAI,EACR;;AAEG,gBAAA,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC;;AAGjB,gBAAA,KAAK,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC;AACtB,aAAA;AAED,iBAAA;AACG,gBAAA,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;AACxB,aAAA;AACH,SAAA;;AAGD,QAAA,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;AAC1B,KAAA;AAED;;;;;;AAMG;AACH,IAAA,SAAS,CAAC,OAA4C,EAAA;AAEnD,QAAA,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AAElC,QAAA,OAAO,CAAC,IAAI,CAAC,CAAC;;AAGd,QAAA,OAAO,MAAK;AAET,YAAA,MAAM,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC,GAAG,KAAK,GAAG,KAAK,OAAO,CAAC,CAAC;YACtE,IAAI,KAAK,IAAI,CAAC,EAAE;gBAAE,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;AAAE,aAAA;AAC5D,SAAC,CAAC;AACJ,KAAA;AAED;;AAEG;AACH,IAAA,kBAAkB,GAAA;AAEf,QAAA,KAAK,IAAI,IAAI,GAAG,CAAC,EAAE,IAAI,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE,IAAI,EAAE,EAAE;YAAE,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC;AAAE,SAAA;AACpG,KAAA;AAED;;;;;AAKG;AACH,IAAA,EAAE,MAAM,CAAC,QAAQ,CAAC,GAAA;QAEf,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;AAE7B,QAAA,IAAI,IAAI,CAAC,UAAU,IAAI,KAAK,KAAK,IAAI,IAAI,KAAK,EAAE,MAAM,KAAK,CAAC,EAAE;YAAE,OAAO;AAAE,SAAA;AAEzE,QAAA,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,EACtB;AACG,YAAA,KAAK,MAAM,KAAK,IAAI,IAAI,CAAC,KAAK,EAAE;AAAE,gBAAA,MAAM,KAAK,CAAC,KAAK,CAAC,CAAC;AAAE,aAAA;AACzD,SAAA;AAED,aAAA;YACG,IAAI,IAAI,CAAC,QAAQ,EACjB;gBACG,KAAK,IAAI,IAAI,GAAG,KAAK,CAAC,MAAM,EAAE,EAAE,IAAI,IAAI,CAAC,GAAG;AAAE,oBAAA,MAAM,KAAK,CAAC,IAAI,CAAC,CAAC;AAAE,iBAAA;AACpE,aAAA;AAED,iBAAA;AACG,gBAAA,KAAK,IAAI,IAAI,GAAG,CAAC,EAAE,IAAI,GAAG,KAAK,CAAC,MAAM,EAAE,IAAI,EAAE,EAAE;AAAE,oBAAA,MAAM,KAAK,CAAC,IAAI,CAAC,CAAC;AAAE,iBAAA;AACxE,aAAA;AACH,SAAA;AACH,KAAA;AACH,CAAA;;AC7VD;AACG;AACG,MAAO,OAAc,SAAQ,cAA+B,CAAA;AAE/D;;AAEG;AACH,IAAA,YAAY,GAAA;AAET,QAAA,OAAO,CAAC,CAAC,EAAE,CAAC,KAAK,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7F,KAAA;AAED;;;;;;;AAOG;AACH,IAAA,UAAU,GAAA;QAEP,MAAM,IAAI,GAAG,EAAE,CAAC;QAEhB,MAAM,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;QAC7B,IAAI,CAAC,GAAG,EAAE;AAAE,YAAA,OAAO,IAAI,CAAC;AAAE,SAAA;AAE1B,QAAA,MAAM,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC;QAEzC,IAAI,OAAO,GAAG,IAAI,CAAC;AAEnB,QAAA,MAAM,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;;QAG1C,IAAI,eAAe,CAAC,UAAU,CAAC,WAAW,CAAC,IAAI,WAAW,CAAC,MAAM,EACjE;AACG,YAAA,KAAK,MAAM,GAAG,IAAI,WAAW,EAC7B;gBACG,MAAM,KAAK,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;gBAC3B,OAAO,GAAG,IAAI,CAAC;AAEf,gBAAA,KAAK,IAAI,OAAO,GAAG,CAAC,EAAE,SAAS,GAAG,OAAO,CAAC,MAAM,EAAE,OAAO,GAAG,SAAS,EAAE,OAAO,EAAE,EAChF;oBACG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,EACnC;wBACG,OAAO,GAAG,KAAK,CAAC;wBAChB,MAAM;AACR,qBAAA;AACH,iBAAA;AAED,gBAAA,IAAI,OAAO,EAAE;AAAE,oBAAA,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AAAE,iBAAA;AAClC,aAAA;AACH,SAAA;AAED,aAAA;AACG,YAAA,KAAK,MAAM,GAAG,IAAI,GAAG,CAAC,IAAI,EAAE,EAC5B;gBACG,OAAO,GAAG,IAAI,CAAC;gBAEf,MAAM,KAAK,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AAE3B,gBAAA,KAAK,IAAI,OAAO,GAAG,CAAC,EAAE,SAAS,GAAG,OAAO,CAAC,MAAM,EAAE,OAAO,GAAG,SAAS,EAAE,OAAO,EAAE,EAChF;oBACG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,EACnC;wBACG,OAAO,GAAG,KAAK,CAAC;wBAChB,MAAM;AACR,qBAAA;AACH,iBAAA;AAED,gBAAA,IAAI,OAAO,EAAE;AAAE,oBAAA,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AAAE,iBAAA;AAClC,aAAA;AACH,SAAA;AAED,QAAA,OAAO,IAAI,CAAC;AACd,KAAA;AAED;;;;;AAKG;AACH,IAAA,MAAM,CAAC,KAAiB,GAAA,KAAK,EAAA;QAE1B,IAAI,IAAI,CAAC,SAAS,EAAE;YAAE,OAAO;AAAE,SAAA;AAE/B,QAAA,MAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC;AACtC,QAAA,MAAM,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;QAEpC,MAAM,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;AAC7B,QAAA,MAAM,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;;AAG1C,QAAA,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,MAAM,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS;AACrE,aAAC,IAAI,CAAC,SAAS,CAAC,KAAK,IAAI,GAAG,EAAE,IAAI,KAAK,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,MAAM,CAAC,EACpE;AACG,YAAA,IAAI,CAAC,SAAS,CAAC,KAAK,GAAG,IAAI,CAAC;AAC9B,SAAA;;QAGD,IAAI,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,EACvC;YACG,IAAI,CAAC,SAAS,CAAC,KAAK,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC;AAC3C,SAAA;;QAGD,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,IAAI,WAAW,EAAE,MAAM,EAChD;YACG,IAAI,CAAC,SAAS,CAAC,KAAK,GAAG,CAAC,GAAG,WAAW,CAAC,CAAC;AAC1C,SAAA;QAED,IAAI,IAAI,CAAC,QAAQ,CAAC,SAAS,IAAI,GAAG,YAAY,GAAG,EACjD;;AAEG,YAAA,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE;AAAE,gBAAA,IAAI,CAAC,SAAS,CAAC,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,GAAG,CAAC,GAAG,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC;AAAE,aAAA;YAE7F,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AACzC,SAAA;QAED,IAAI,CAAC,cAAc,CAAC,QAAQ,EAAE,OAAO,EAAE,KAAK,CAAC,CAAC;;AAG9C,QAAA,IAAI,CAAC,cAAc,EAAE,MAAM,CAAC,KAAK,CAAC,CAAC;AACrC,KAAA;AACH,CAAA;;AC9GD;;AAEG;AACU,MAAA,iBAAiB,CAAA;AAE3B,IAAA,IAAI,CAAsB;AAEjB,IAAA,QAAQ,CAAC;AAET,IAAA,iBAAiB,CAAC;AAElB,IAAA,QAAQ,CAAoB;AAE5B,IAAA,YAAY,GAAiC,EAAE,OAAO,EAAE,EAAE,EAAE,CAAC;AAE7D,IAAA,MAAM,CAAgB;AAEtB,IAAA,eAAe,CAAmB;IAE3C,SAAS,GAAY,KAAK,CAAC;AAElB,IAAA,KAAK,CAAiB;AAE/B,IAAA,SAAS,GAAgC,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;IAE7D,cAAc,GAAG,EAAE,CAAC;IAEpB,UAAU,GAAG,KAAK,CAAC;AAEnB;;;;;;AAMG;AACH,IAAA,WAAA,CAAY,GAAwB,EAAE,WAA6B,EAAE,OAAuB,EAAA;AAEzF,QAAA,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC;QAEhB,IAAI,CAAC,MAAM,GAAG,IAAI,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,WAAW,CAAC,CAAC;QACtF,IAAI,CAAC,eAAe,GAAG,IAAI,UAAU,CAAO,IAAI,CAAC,MAAM,CAAC,CAAC;AAEzD,QAAA,IAAI,CAAC,QAAQ,GAAG,IAAI,cAAc,CAAC,IAAI,CAAC,eAAe,CAAC,MAAM,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;AAEnF,QAAA,IAAI,CAAC,KAAK,GAAG,IAAI,WAAW,CAAC,IAAI,CAAC,eAAe,CAAC,MAAM,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;AAE1E,QAAA,IAAI,CAAC,QAAQ,GAAG,IAAI,cAAc,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,eAAe,EAAE,iBAAiB,CAAC,CAAC;QACvF,IAAI,CAAC,iBAAiB,GAAG,IAAI,UAAU,CAAkB,IAAI,CAAC,QAAQ,CAAC,CAAC;AAExE,QAAA,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;AAE3E,QAAA,IAAI,OAAO,GAAwC,KAAK,CAAC,CAAC;AAC1D,QAAA,IAAI,IAAI,GAA+B,KAAK,CAAC,CAAC;AAE9C,QAAA,IAAI,OAAO,KAAK,KAAK,CAAC,KAAK,SAAS,IAAI,OAAO,IAAI,MAAM,IAAI,OAAO,CAAC,EACrE;AACG,YAAA,IAAI,OAAO,CAAC,OAAO,KAAK,KAAK,CAAC,EAC9B;gBACG,IAAI,eAAe,CAAC,UAAU,CAAC,OAAO,CAAC,OAAO,CAAC,EAC/C;AACG,oBAAA,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC;AAC5B,iBAAA;AAED,qBAAA;AACG,oBAAA,MAAM,IAAI,SAAS,CAClB,CAAA,kFAAA,CAAoF,CAAC,CAAC;AACzF,iBAAA;AACH,aAAA;AAED,YAAA,IAAI,OAAO,CAAC,IAAI,KAAK,KAAK,CAAC,EAC3B;AACG,gBAAA,IAAI,OAAO,OAAO,CAAC,IAAI,KAAK,UAAU,EACtC;AACG,oBAAA,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC;AACtB,iBAAA;AACI,qBAAA,IAAI,OAAO,OAAO,CAAC,IAAI,KAAK,QAAQ,IAAI,OAAO,CAAC,IAAI,KAAK,IAAI,EAClE;AACG,oBAAA,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC;AACtB,iBAAA;AAED,qBAAA;AACG,oBAAA,MAAM,IAAI,SAAS,CAClB,CAAA,2FAAA,CAA6F,CAAC,CAAC;AAClG,iBAAA;AACH,aAAA;AACH,SAAA;;AAGD,QAAA,IAAI,OAAO,EAAE;YAAE,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,OAAO,CAAC,CAAC;AAAE,SAAA;AAC9C,QAAA,IAAI,IAAI,EAAE;AAAE,YAAA,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;AAAE,SAAA;;QAGlC,IAAI,CAAC,UAAU,EAAE,CAAC;AACpB,KAAA;AAED;;;;;;;AAOG;IACH,IAAI,IAAI,GAAuB,EAAA,OAAO,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE;AAErD;;AAEG;AACH,IAAA,IAAI,OAAO,GAAkC,EAAA,OAAO,IAAI,CAAC,iBAAiB,CAAC,EAAE;AAE7E;;AAEG;AACH,IAAA,IAAI,OAAO,GAAwB,EAAA,OAAO,IAAI,CAAC,QAAQ,CAAC,EAAE;AAE1D;;;;AAIG;AACH,IAAA,IAAI,KAAK,GAAuB,EAAA,OAAO,IAAI,CAAC,eAAe,CAAC,EAAE;AAE9D;;AAEG;AACH,IAAA,IAAI,SAAS,GAAc,EAAA,OAAO,IAAI,CAAC,UAAU,CAAC,EAAE;AAEpD;;AAEG;AACH,IAAA,IAAI,MAAM,GAAA;QAEP,MAAM,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAEzB,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM;AAC5C,YAAA,GAAG,GAAG,GAAG,CAAC,IAAI,GAAG,CAAC,CAAC;AACtB,KAAA;AAED;;AAEG;AACH,IAAA,IAAI,QAAQ,GAAc,EAAA,OAAO,IAAI,CAAC,SAAS,CAAC,EAAE;AAElD;;AAEG;AACH,IAAA,IAAI,IAAI,GAAqB,EAAA,OAAO,IAAI,CAAC,KAAK,CAAC,EAAE;AAEjD;;;;AAIG;IACH,IAAI,QAAQ,CAAC,QAAiB,EAAA;AAE3B,QAAA,IAAI,OAAO,QAAQ,KAAK,SAAS,EACjC;AACG,YAAA,MAAM,IAAI,SAAS,CAAC,CAAA,8DAAA,CAAgE,CAAC,CAAC;AACxF,SAAA;AAED,QAAA,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;AAC1B,QAAA,IAAI,CAAC,MAAM,CAAC,QAAQ,GAAG,QAAQ,CAAC;;AAGhC,QAAA,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;AAC1B,KAAA;AAED;;AAEG;AACH,IAAA,OAAO,GAAA;AAEJ,QAAA,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;;AAGvB,QAAA,IAAI,CAAC,IAAI,GAAG,CAAC,IAAI,CAAC,CAAC;AACnB,QAAA,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;;AAGzB,QAAA,IAAI,CAAC,cAAc,CAAC,MAAM,GAAG,CAAC,CAAC;AAE/B,QAAA,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC;AACxB,QAAA,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC;AACtB,QAAA,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;AACtB,QAAA,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;AACrB,KAAA;AAED;;;;;AAKG;AACH,IAAA,UAAU,GAAK,GAAA;AAEf;;;;AAIG;AACH,IAAA,EAAE,MAAM,CAAC,QAAQ,CAAC,GAAA;QAEf,MAAM,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAEzB,QAAA,IAAI,IAAI,CAAC,UAAU,IAAI,GAAG,KAAK,IAAI,IAAI,GAAG,EAAE,IAAI,KAAK,CAAC,EAAE;YAAE,OAAO;AAAE,SAAA;AAEnE,QAAA,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,EACtB;AACG,YAAA,KAAK,MAAM,GAAG,IAAI,IAAI,CAAC,KAAK,EAAE;AAAE,gBAAA,MAAM,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AAAE,aAAA;AACvD,SAAA;AAED,aAAA;YACG,IAAI,IAAI,CAAC,QAAQ,EACjB;;gBAEG,MAAM,MAAM,GAAG,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,CAAC;gBACjC,KAAK,IAAI,IAAI,GAAG,MAAM,CAAC,MAAM,EAAE,EAAE,IAAI,IAAI,CAAC,GAAG;AAAE,oBAAA,MAAM,MAAM,CAAC,IAAI,CAAC,CAAC;AAAE,iBAAA;AACtE,aAAA;AAED,iBAAA;AACG,gBAAA,KAAK,MAAM,KAAK,IAAI,GAAG,CAAC,MAAM,EAAE,EAAE;AAAE,oBAAA,MAAM,KAAK,CAAC;AAAE,iBAAA;AACpD,aAAA;AACH,SAAA;AACH,KAAA;;AAID;;;;;;AAMG;AACH,IAAA,SAAS,CAAC,OAAiD,EAAA;AAExD,QAAA,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AAElC,QAAA,OAAO,CAAC,IAAI,CAAC,CAAC;;AAGd,QAAA,OAAO,MAAK;AAET,YAAA,MAAM,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC,GAAG,KAAK,GAAG,KAAK,OAAO,CAAC,CAAC;YACtE,IAAI,KAAK,IAAI,CAAC,EAAE;gBAAE,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;AAAE,aAAA;AAC5D,SAAC,CAAC;AACJ,KAAA;AAED;;AAEG;AACH,IAAA,kBAAkB,GAAA;AAEf,QAAA,KAAK,IAAI,IAAI,GAAG,CAAC,EAAE,IAAI,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE,IAAI,EAAE,EAAE;YAAE,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC;AAAE,SAAA;AACpG,KAAA;AACH,CAAA;;AC/PD;;;AAGG;AACU,MAAA,aAAa,CAAA;AAEvB,IAAA,IAAI,GAAwB,CAAC,IAAI,CAAC,CAAC;AAE1B,IAAA,QAAQ,CAAkC;AAE1C,IAAA,iBAAiB,CAA8B;AAE/C,IAAA,QAAQ,CAAoB;AAE5B,IAAA,YAAY,GAAiC,EAAE,OAAO,EAAE,EAAE,EAAE,CAAC;AAE7D,IAAA,MAAM,CAAgB;AAEtB,IAAA,eAAe,CAAmB;IAE3C,SAAS,GAAY,KAAK,CAAC;AAElB,IAAA,KAAK,CAAiB;AAE/B,IAAA,SAAS,GAAgC,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;IAE7D,cAAc,GAAG,EAAE,CAAC;IAEpB,UAAU,GAAG,KAAK,CAAC;AAEnB;;;;;AAKG;AACH,IAAA,WAAA,CAAY,IAAmC,EAAA;AAE5C,QAAA,IAAI,OAAO,GAAc,KAAK,CAAC,CAAC;AAChC,QAAA,IAAI,OAAO,GAA0C,KAAK,CAAC,CAAC;AAC5D,QAAA,IAAI,IAAI,GAA+B,KAAK,CAAC,CAAC;QAE9C,IAAI,IAAI,KAAK,IAAI,EACjB;AACG,YAAA,MAAM,IAAI,SAAS,CAAC,CAAA,oDAAA,CAAsD,CAAC,CAAC;AAC9E,SAAA;AAED,QAAA,IAAI,IAAI,KAAK,KAAK,CAAC,IAAI,OAAO,IAAI,KAAK,QAAQ,IAAI,EAAE,IAAW,YAAY,GAAG,CAAC,EAChF;AACG,YAAA,MAAM,IAAI,SAAS,CAAC,CAAA,oDAAA,CAAsD,CAAC,CAAC;AAC9E,SAAA;QAED,IAAI,IAAI,KAAK,KAAK,CAAC,IAAI,IAAI,YAAY,GAAG,EAC1C;YACG,OAAO,GAAG,IAAI,CAAC;AACjB,SAAA;AACI,aAAA,IAAI,IAAI,KAAK,KAAK,CAAC,KAAK,MAAM,IAAI,IAAI,IAAI,SAAS,IAAI,IAAI,IAAI,MAAM,IAAI,IAAI,CAAC,EACnF;AACG,YAAA,IAAI,IAAI,CAAC,IAAI,KAAK,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,YAAY,GAAG,CAAC,EACvD;AACG,gBAAA,MAAM,IAAI,SAAS,CAAC,CAAA,gEAAA,CAAkE,CAAC,CAAC;AAC1F,aAAA;AAED,YAAA,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC;AAEpB,YAAA,IAAI,IAAI,CAAC,OAAO,KAAK,KAAK,CAAC,EAC3B;gBACG,IAAI,eAAe,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,EAC5C;AACG,oBAAA,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;AACzB,iBAAA;AAED,qBAAA;AACG,oBAAA,MAAM,IAAI,SAAS,CAAC,CAAA,sEAAA,CAAwE,CAAC,CAAC;AAChG,iBAAA;AACH,aAAA;AAED,YAAA,IAAI,IAAI,CAAC,IAAI,KAAK,KAAK,CAAC,EACxB;AACG,gBAAA,IAAI,OAAO,IAAI,CAAC,IAAI,KAAK,UAAU,EACnC;AACG,oBAAA,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;AACnB,iBAAA;AACI,qBAAA,IAAI,OAAO,IAAI,CAAC,IAAI,KAAK,QAAQ,IAAI,IAAI,CAAC,IAAI,KAAK,IAAI,EAC5D;AACG,oBAAA,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;AACnB,iBAAA;AAED,qBAAA;AACG,oBAAA,MAAM,IAAI,SAAS,CAClB,CAAA,+EAAA,CAAiF,CAAC,CAAC;AACtF,iBAAA;AACH,aAAA;AACH,SAAA;;AAGD,QAAA,IAAI,OAAO,EACX;AACG,YAAA,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC;AACzB,SAAA;AAED,QAAA,IAAI,CAAC,MAAM,GAAG,IAAI,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QACzE,IAAI,CAAC,eAAe,GAAG,IAAI,UAAU,CAAO,IAAI,CAAC,MAAM,CAAC,CAAC;AAEzD,QAAA,IAAI,CAAC,QAAQ,GAAG,IAAI,cAAc,CAAC,IAAI,CAAC,eAAe,CAAC,MAAM,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;AAEnF,QAAA,IAAI,CAAC,KAAK,GAAG,IAAI,WAAW,CAAC,IAAI,CAAC,eAAe,CAAC,MAAM,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;AAE1E,QAAA,IAAI,CAAC,QAAQ,GAAG,IAAI,cAAc,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,eAAe,EAAE,iBAAiB,CAAC,CAAC;QACvF,IAAI,CAAC,iBAAiB,GAAG,IAAI,UAAU,CAAkB,IAAI,CAAC,QAAQ,CAAC,CAAC;AAExE,QAAA,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;;AAG3E,QAAA,IAAI,OAAO,EAAE;YAAE,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,OAAO,CAAC,CAAC;AAAE,SAAA;AAC9C,QAAA,IAAI,IAAI,EAAE;AAAE,YAAA,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;AAAE,SAAA;;QAGlC,IAAI,CAAC,UAAU,EAAE,CAAC;AACpB,KAAA;AAED;;;;;;;;AAQG;IACH,IAAI,IAAI,GAAuB,EAAA,OAAO,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE;AAErD;;AAEG;AACH,IAAA,IAAI,OAAO,GAAkC,EAAA,OAAO,IAAI,CAAC,iBAAiB,CAAC,EAAE;AAE7E;;AAEG;AACH,IAAA,IAAI,OAAO,GAAwB,EAAA,OAAO,IAAI,CAAC,QAAQ,CAAC,EAAE;AAE1D;;AAEG;AACH,IAAA,IAAI,KAAK,GAAuB,EAAA,OAAO,IAAI,CAAC,eAAe,CAAC,EAAE;AAE9D;;AAEG;AACH,IAAA,IAAI,SAAS,GAAc,EAAA,OAAO,IAAI,CAAC,UAAU,CAAC,EAAE;AAEpD;;;;AAIG;AACH,IAAA,IAAI,MAAM,GAAA;QAEP,MAAM,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACzB,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,eAAe,CAAC,MAAM;AACtD,YAAA,GAAG,GAAG,GAAG,CAAC,IAAI,GAAG,CAAC,CAAC;AACtB,KAAA;AAED;;;;AAIG;AACH,IAAA,IAAI,QAAQ,GAAK,EAAA,OAAO,IAAI,CAAC,SAAS,CAAC,EAAE;AAEzC;;AAEG;AACH,IAAA,IAAI,IAAI,GAAqB,EAAA,OAAO,IAAI,CAAC,KAAK,CAAC,EAAE;AAEjD;;;;AAIG;IACH,IAAI,QAAQ,CAAC,QAAiB,EAAA;AAE3B,QAAA,IAAI,OAAO,QAAQ,KAAK,SAAS,EACjC;AACG,YAAA,MAAM,IAAI,SAAS,CAAC,CAAA,0DAAA,CAA4D,CAAC,CAAC;AACpF,SAAA;AAED,QAAA,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;AAC1B,QAAA,IAAI,CAAC,MAAM,CAAC,QAAQ,GAAG,QAAQ,CAAC;;AAGhC,QAAA,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;AAC1B,KAAA;AAED;;AAEG;AACH,IAAA,OAAO,GAAA;QAEJ,IAAI,IAAI,CAAC,UAAU,EAAE;YAAE,OAAO;AAAE,SAAA;AAEhC,QAAA,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;AACvB,QAAA,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC;;AAGxB,QAAA,IAAI,CAAC,IAAI,GAAG,CAAC,IAAI,CAAC,CAAC;AACnB,QAAA,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;;AAGxB,QAAA,IAAI,CAAC,cAAc,CAAC,MAAM,GAAG,CAAC,CAAC;AAE/B,QAAA,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC;AACtB,QAAA,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;AACtB,QAAA,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;AACrB,KAAA;AAED;;;;;AAKG;AACH,IAAA,UAAU,GAAK,GAAA;AAEf;;;;;;;AAOG;AACH,IAAA,OAAO,CAAC,IAAsB,EAAE,OAAA,GAAmB,KAAK,EAAA;QAErD,IAAI,IAAI,KAAK,IAAI,IAAI,EAAE,IAAI,YAAY,GAAG,CAAC,EAC3C;AACG,YAAA,MAAM,IAAI,SAAS,CAAC,CAAA,oDAAA,CAAsD,CAAC,CAAC;AAC9E,SAAA;AAED,QAAA,IAAI,OAAO,OAAO,KAAK,SAAS,EAChC;AACG,YAAA,MAAM,IAAI,SAAS,CAAC,CAAA,wDAAA,CAA0D,CAAC,CAAC;AAClF,SAAA;QAED,MAAM,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;;;AAIzB,QAAA,IAAI,EAAE,GAAG,YAAY,GAAG,CAAC,IAAI,OAAO,EACpC;AACG,YAAA,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,YAAY,GAAG,GAAG,IAAI,GAAG,IAAI,CAAC;AACnD,SAAA;AACI,aAAA,IAAI,IAAI,YAAY,GAAG,IAAI,GAAG,YAAY,GAAG,EAClD;;YAEG,MAAM,YAAY,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC;AAEzC,YAAA,KAAK,MAAM,GAAG,IAAI,IAAI,CAAC,IAAI,EAAE,EAC7B;AACG,gBAAA,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;AAE5B,gBAAA,IAAI,YAAY,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE;AAAE,oBAAA,YAAY,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;AAAE,iBAAA;AAC1D,aAAA;;AAGD,YAAA,KAAK,MAAM,GAAG,IAAI,YAAY,EAAE;AAAE,gBAAA,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;AAAE,aAAA;AACtD,SAAA;aACI,IAAI,IAAI,KAAK,IAAI,EACtB;AACG,YAAA,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;AACtB,SAAA;;AAGD,QAAA,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;AAC1B,KAAA;AAED;;;;;;AAMG;AACH,IAAA,SAAS,CAAC,OAA6C,EAAA;AAEpD,QAAA,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AAElC,QAAA,OAAO,CAAC,IAAI,CAAC,CAAC;;AAGd,QAAA,OAAO,MAAK;AAET,YAAA,MAAM,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC,GAAG,KAAK,GAAG,KAAK,OAAO,CAAC,CAAC;YACtE,IAAI,KAAK,IAAI,CAAC,EAAE;gBAAE,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;AAAE,aAAA;AAC5D,SAAC,CAAC;AACJ,KAAA;AAED;;AAEG;AACH,IAAA,kBAAkB,GAAA;AAEf,QAAA,KAAK,IAAI,IAAI,GAAG,CAAC,EAAE,IAAI,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE,IAAI,EAAE,EAAE;YAAE,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC;AAAE,SAAA;AACpG,KAAA;AAED;;;;;AAKG;AACH,IAAA,EAAE,MAAM,CAAC,QAAQ,CAAC,GAAA;QAEf,MAAM,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAEzB,QAAA,IAAI,IAAI,CAAC,UAAU,IAAI,GAAG,KAAK,IAAI,IAAI,GAAG,EAAE,IAAI,KAAK,CAAC,EAAE;YAAE,OAAO;AAAE,SAAA;AAEnE,QAAA,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,EACtB;AACG,YAAA,KAAK,MAAM,GAAG,IAAI,IAAI,CAAC,KAAK,EAAE;AAAE,gBAAA,MAAM,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AAAE,aAAA;AACvD,SAAA;AAED,aAAA;YACG,IAAI,IAAI,CAAC,QAAQ,EACjB;;gBAEG,MAAM,MAAM,GAAG,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,CAAC;gBACjC,KAAK,IAAI,IAAI,GAAG,MAAM,CAAC,MAAM,EAAE,EAAE,IAAI,IAAI,CAAC,GAAG;AAAE,oBAAA,MAAM,MAAM,CAAC,IAAI,CAAC,CAAC;AAAE,iBAAA;AACtE,aAAA;AAED,iBAAA;AACG,gBAAA,KAAK,MAAM,KAAK,IAAI,GAAG,CAAC,MAAM,EAAE,EAAE;AAAE,oBAAA,MAAM,KAAK,CAAC;AAAE,iBAAA;AACpD,aAAA;AACH,SAAA;AACH,KAAA;AACH,CAAA;;ACpWD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS,eAAe,CAAC,KAAK;AACrC;AACA,GAAG,IAAI,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,KAAK,CAAC,EAAE,EAAE,OAAO,KAAK,CAAC,EAAE;AAC5D;AACA,GAAG,QAAQ,OAAO,KAAK;AACvB;AACA,MAAM,KAAK,UAAU,CAAC;AACtB,MAAM,KAAK,QAAQ;AACnB,SAAS,OAAO,OAAO,KAAK,CAAC,SAAS,KAAK,UAAU,CAAC;AACtD,IAAI;AACJ;AACA,GAAG,OAAO,KAAK,CAAC;AAChB,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS,gBAAgB,CAAC,KAAK;AACtC;AACA,GAAG,IAAI,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,KAAK,CAAC,EAAE,EAAE,OAAO,KAAK,CAAC,EAAE;AAC5D;AACA,GAAG,QAAQ,OAAO,KAAK;AACvB;AACA,MAAM,KAAK,UAAU,CAAC;AACtB,MAAM,KAAK,QAAQ;AACnB,SAAS,OAAO,OAAO,KAAK,CAAC,SAAS,KAAK,UAAU,IAAI,OAAO,KAAK,CAAC,MAAM,KAAK,UAAU,CAAC;AAC5F,IAAI;AACJ;AACA,GAAG,OAAO,KAAK,CAAC;AAChB,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS,eAAe,CAAC,KAAK;AACrC;AACA,GAAG,IAAI,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,KAAK,CAAC,EAAE,EAAE,OAAO,KAAK,CAAC,EAAE;AAC5D;AACA,GAAG,QAAQ,OAAO,KAAK;AACvB;AACA,MAAM,KAAK,UAAU,CAAC;AACtB,MAAM,KAAK,QAAQ;AACnB,SAAS,OAAO,OAAO,KAAK,CAAC,SAAS,KAAK,UAAU,IAAI,OAAO,KAAK,CAAC,GAAG,KAAK,UAAU,CAAC;AACzF,IAAI;AACJ;AACA,GAAG,OAAO,KAAK,CAAC;AAChB,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS,oBAAoB,CAAC,KAAK,EAAE,MAAM;AAClD;AACA,GAAG,IAAI,UAAU,GAAG,KAAK,CAAC;AAC1B;AACA,GAAG,OAAO,KAAK,CAAC,SAAS,CAAC,CAAC,KAAK,KAAK;AACrC,MAAM,IAAI,CAAC,UAAU;AACrB,MAAM;AACN,SAAS,UAAU,GAAG,IAAI,CAAC;AAC3B,OAAO;AACP,WAAW;AACX,SAAS,MAAM,CAAC,KAAK,CAAC,CAAC;AACvB,OAAO;AACP,IAAI,CAAC;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS,kBAAkB,CAAC,KAAK,EAAE,KAAK,EAAE,MAAM;AACvD;AACA,GAAG,IAAI,UAAU,GAAG,KAAK,CAAC;AAC1B;AACA,GAAG,OAAO,KAAK,CAAC,SAAS,CAAC,CAAC,KAAK,KAAK;AACrC,MAAM,IAAI,CAAC,UAAU;AACrB,MAAM;AACN,SAAS,UAAU,GAAG,IAAI,CAAC;AAC3B,SAAS,KAAK,CAAC,KAAK,CAAC,CAAC;AACtB,OAAO;AACP,WAAW;AACX,SAAS,MAAM,CAAC,KAAK,CAAC,CAAC;AACvB,OAAO;AACP,IAAI,CAAC;AACL,CAAA;;AC7HA;AAGA,SAAS,eAAe,CAAC,OAAO,EAAE;AAClC,EAAE,OAAO,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC;AAC5B,CAAC;AACD,SAAS,SAAS,CAAC,OAAO,EAAE;AAC5B,EAAE,SAAS,QAAQ,CAAC,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE;AACvC,IAAI,OAAO;AACX,MAAM,SAAS,EAAE,QAAQ,CAAC,GAAG,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC,SAAS;AACtD,KAAK,CAAC;AACN,GAAG;AACH,EAAE,SAAS,QAAQ,CAAC,GAAG,EAAE,KAAK,EAAE,KAAK,GAAG,IAAI,EAAE;AAC9C,IAAI,SAAS,UAAU,CAAC,KAAK,EAAE;AAC/B,MAAM,OAAO,KAAK,CAAC,SAAS,QAAQ,CAAC,SAAS,EAAE;AAChD,QAAQ,IAAI,OAAO,EAAE;AACrB,UAAU,OAAO,CAAC,OAAO,CAAC,GAAG,EAAE,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC;AAC1D,SAAS;AACT,QAAQ,OAAO,KAAK,CAAC,SAAS,CAAC,CAAC;AAChC,OAAO,CAAC,CAAC;AACT,KAAK;AACL,IAAI,IAAI,OAAO,EAAE;AACjB,MAAM,MAAM,YAAY,GAAG,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;AAChD,MAAM,IAAI;AACV,QAAQ,IAAI,YAAY,EAAE;AAC1B,UAAU,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;AAC3C,SAAS;AACT,OAAO,CAAC,OAAO,GAAG,EAAE;AACpB,OAAO;AACP,MAAM,OAAO,CAAC,OAAO,CAAC,GAAG,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC;AAClD,KAAK;AACL,IAAI,MAAM,OAAO,GAAGC,UAAU,CAAC,KAAK,EAAE,KAAK,GAAG,UAAU,GAAG,KAAK,CAAC,CAAC,CAAC;AACnE,IAAI,SAAS,GAAG,CAAC,SAAS,EAAE;AAC5B,MAAM,IAAI,OAAO,EAAE;AACnB,QAAQ,OAAO,CAAC,OAAO,CAAC,GAAG,EAAE,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC;AACxD,OAAO;AACP,MAAM,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;AAC7B,KAAK;AACL,IAAI,SAAS,MAAM,CAAC,EAAE,EAAE;AACxB,MAAM,GAAG,CAAC,EAAE,CAACC,GAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;AAC9B,KAAK;AACL,IAAI,SAAS,SAAS,CAAC,GAAG,EAAE,UAAU,GAAG,IAAI,EAAE;AAC/C,MAAM,OAAO,OAAO,CAAC,SAAS,CAAC,GAAG,EAAE,UAAU,CAAC,CAAC;AAChD,KAAK;AACL,IAAI,OAAO,CAAC,GAAG,EAAE,MAAM,EAAE,SAAS,CAAC,CAAC;AACpC,GAAG;AACH,EAAE,SAAS,OAAO,CAAC,GAAG,EAAE,MAAM,EAAE,EAAE,EAAE,aAAa,EAAE;AACnD,IAAI,MAAM,MAAM,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;AAC1C,IAAI,MAAM,YAAY,GAAG,MAAM,GAAG,CAAC,MAAM,CAAC,GAAG,MAAM,CAAC;AACpD,IAAI,IAAI,OAAO,IAAI,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;AACzC,MAAM,IAAI;AACV,QAAQ,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC;AACzD,OAAO,CAAC,OAAO,GAAG,EAAE;AACpB,OAAO;AACP,KAAK;AACL,IAAI,OAAO,QAAQ,CAAC,GAAG,EAAE,aAAa,EAAE,CAAC,GAAG,KAAK;AACjD,MAAM,IAAI,MAAM,GAAG,KAAK,CAAC;AACzB,MAAM,MAAM,MAAM,GAAG,EAAE,CAAC;AACxB,MAAM,IAAI,OAAO,GAAG,CAAC,CAAC;AACtB,MAAM,IAAI,OAAO,GAAG,IAAI,CAAC;AACzB,MAAM,MAAM,IAAI,GAAG,MAAM;AACzB,QAAQ,IAAI,OAAO,EAAE;AACrB,UAAU,OAAO;AACjB,SAAS;AACT,QAAQ,OAAO,EAAE,CAAC;AAClB,QAAQ,MAAM,KAAK,GAAG,MAAM,GAAG,MAAM,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC;AAClD,QAAQ,IAAI,eAAe,CAAC,EAAE,CAAC,EAAE;AACjC,UAAU,GAAG,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;AACzB,SAAS,MAAM;AACf,UAAU,MAAM,MAAM,GAAG,EAAE,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;AACxC,UAAU,OAAO,GAAG,WAAW,CAAC,MAAM,CAAC,GAAG,MAAM,GAAG,IAAI,CAAC;AACxD,SAAS;AACT,OAAO,CAAC;AACR,MAAM,MAAM,aAAa,GAAG,YAAY,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,CAAC,KAAK,KAAK,CAAC,SAAS,CAAC,CAAC,KAAK,KAAK;AACtF,QAAQ,MAAM,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC;AAC1B,QAAQ,OAAO,IAAI,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC;AAC7B,QAAQ,IAAI,MAAM,EAAE;AACpB,UAAU,IAAI,EAAE,CAAC;AACjB,SAAS;AACT,OAAO,EAAE,MAAM;AACf,QAAQ,OAAO,IAAI,CAAC,IAAI,CAAC,CAAC;AAC1B,OAAO,CAAC,CAAC,CAAC;AACV,MAAM,MAAM,GAAG,IAAI,CAAC;AACpB,MAAM,IAAI,EAAE,CAAC;AACb,MAAM,OAAO,SAAS,IAAI,GAAG;AAC7B,QAAQ,OAAO,CAAC,aAAa,CAAC,CAAC;AAC/B,QAAQ,OAAO,EAAE,CAAC;AAClB,OAAO,CAAC;AACR,KAAK,CAAC,CAAC;AACP,GAAG;AACH,EAAE,OAAO;AACT,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,GAAG,EAAEA,GAAK;AACd,GAAG,CAAC;AACJ,CAAA;;AC5FA;AACA,IAAIC,SAAO,GAAG,OAAO,MAAM,KAAK,WAAW,GAAG,MAAM,CAAC,YAAY,GAAG,KAAK,CAAC,CAAC;AAC3E,IAAIC,GAAC,GAAG,SAAS,CAACD,SAAO,CAAC,CAAC;AAE3B,IAAIE,UAAQ,GAAGD,GAAC,CAAC,QAAQ,CAAA;;ACNzB;AACA;AACA;AACA;AACO,MAAM,YAAY;AACzB;AACA;AACA;AACA;AACA,GAAG,OAAO,GAAG,IAAI,GAAG,EAAE,CAAC;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,OAAO,YAAY,CAAC,GAAG,EAAE,YAAY,GAAG,KAAK,CAAC;AACjD,GAAG;AACH,MAAM;AACN,MAAM;AACN,SAAS,MAAM,KAAK,GAAG,YAAY,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;AACjD,SAAS,IAAI,KAAK,KAAK,IAAI,EAAE,EAAE,YAAY,GAAG,KAAK,KAAK,WAAW,GAAG,KAAK,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE;AACnG,OAAO;AACP,MAAM,OAAO,GAAG,EAAE,QAAQ;AAC1B;AACA,MAAM,OAAOC,UAAQ,CAAC,GAAG,EAAE,YAAY,CAAC,CAAC;AACzC,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,SAAS,CAAC,GAAG,EAAE,YAAY,GAAG,KAAK,CAAC;AACvC,GAAG;AACH,MAAM,IAAI,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AACxC,MAAM,IAAI,KAAK,KAAK,KAAK,CAAC;AAC1B,MAAM;AACN,SAAS,KAAK,GAAG,YAAY,CAAC,YAAY,CAAC,GAAG,EAAE,YAAY,CAAC,CAAC;AAC9D,SAAS,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;AACtC,OAAO;AACP;AACA,MAAM,OAAO,KAAK,CAAC;AACnB,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,OAAO,CAAC,GAAG,EAAE,YAAY;AAC5B,GAAG;AACH,MAAM,IAAI,KAAK,GAAG,YAAY,CAAC;AAC/B;AACA,MAAM,MAAM,YAAY,GAAG,YAAY,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;AACrD;AACA,MAAM,IAAI,YAAY,KAAK,IAAI;AAC/B,MAAM;AACN,SAAS;AACT,SAAS;AACT,YAAY,KAAK,GAAG,YAAY,KAAK,WAAW,GAAG,KAAK,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;AACrF,UAAU,CAAC,OAAO,GAAG;AACrB,SAAS;AACT,YAAY,KAAK,GAAG,YAAY,CAAC;AACjC,UAAU;AACV,OAAO;AACP,WAAW,IAAI,YAAY,KAAK,KAAK,CAAC;AACtC,MAAM;AACN,SAAS;AACT,SAAS;AACT,YAAY,MAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC;AAC1D;AACA;AACA,YAAY,YAAY,CAAC,OAAO,CAAC,GAAG,EAAE,QAAQ,KAAK,WAAW,GAAG,KAAK,CAAC,GAAG,QAAQ,CAAC,CAAC;AACpF,UAAU;AACV,SAAS,OAAO,GAAG,EAAE,SAAS;AAC9B,OAAO;AACP;AACA,MAAM,OAAO,KAAK,CAAC;AACnB,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,QAAQ,CAAC,GAAG,EAAE,YAAY;AAC7B,GAAG;AACH,MAAM,OAAO,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,YAAY,CAAC,CAAC;AAC/C,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,OAAO,CAAC,GAAG,EAAE,KAAK;AACrB,GAAG;AACH,MAAM,MAAM,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;AACxC,MAAM,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;AACvB,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,eAAe,CAAC,GAAG,EAAE,YAAY;AACpC,GAAG;AACH,MAAM,MAAM,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,YAAY,CAAC,CAAC;AACtD;AACA,MAAM,IAAI,YAAY,GAAG,KAAK,CAAC;AAC/B;AACA,MAAM;AACN,MAAM;AACN,SAAS,YAAY,GAAG,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC;AAChE,OAAO;AACP,MAAM,OAAO,GAAG,EAAE,QAAQ;AAC1B;AACA,MAAM,MAAM,QAAQ,GAAG,OAAO,YAAY,KAAK,SAAS,GAAG,CAAC,YAAY,GAAG,KAAK,CAAC;AACjF;AACA,MAAM,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;AAC1B,MAAM,OAAO,QAAQ,CAAC;AACtB,IAAI;AACJ,CAAA;;ACjJA;AACA,IAAI,OAAO,GAAG,OAAO,MAAM,KAAK,WAAW,GAAG,MAAM,CAAC,cAAc,GAAG,KAAK,CAAC,CAAC;AAC7E,IAAI,CAAC,GAAG,SAAS,CAAC,OAAO,CAAC,CAAC;AAE3B,IAAI,QAAQ,GAAG,CAAC,CAAC,QAAQ,CAAA;;ACNzB;AACA;AACA;AACA;AACO,MAAM,cAAc;AAC3B;AACA;AACA;AACA;AACA,GAAG,OAAO,GAAG,IAAI,GAAG,EAAE,CAAC;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,OAAO,YAAY,CAAC,GAAG,EAAE,YAAY,GAAG,KAAK,CAAC;AACjD,GAAG;AACH,MAAM;AACN,MAAM;AACN,SAAS,MAAM,KAAK,GAAG,cAAc,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;AACnD,SAAS,IAAI,KAAK,KAAK,IAAI,EAAE,EAAE,YAAY,GAAG,KAAK,KAAK,WAAW,GAAG,KAAK,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE;AACnG,OAAO;AACP,MAAM,OAAO,GAAG,EAAE,QAAQ;AAC1B;AACA,MAAM,OAAO,QAAQ,CAAC,GAAG,EAAE,YAAY,CAAC,CAAC;AACzC,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,SAAS,CAAC,GAAG,EAAE,YAAY,GAAG,KAAK,CAAC;AACvC,GAAG;AACH,MAAM,IAAI,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AACxC,MAAM,IAAI,KAAK,KAAK,KAAK,CAAC;AAC1B,MAAM;AACN,SAAS,KAAK,GAAG,cAAc,CAAC,YAAY,CAAC,GAAG,EAAE,YAAY,CAAC,CAAC;AAChE,SAAS,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;AACtC,OAAO;AACP;AACA,MAAM,OAAO,KAAK,CAAC;AACnB,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,OAAO,CAAC,GAAG,EAAE,YAAY;AAC5B,GAAG;AACH,MAAM,IAAI,KAAK,GAAG,YAAY,CAAC;AAC/B;AACA,MAAM,MAAM,YAAY,GAAG,cAAc,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;AACvD;AACA,MAAM,IAAI,YAAY,KAAK,IAAI;AAC/B,MAAM;AACN,SAAS;AACT,SAAS;AACT,YAAY,KAAK,GAAG,YAAY,KAAK,WAAW,GAAG,KAAK,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;AACrF,UAAU,CAAC,OAAO,GAAG;AACrB,SAAS;AACT,YAAY,KAAK,GAAG,YAAY,CAAC;AACjC,UAAU;AACV,OAAO;AACP,WAAW,IAAI,YAAY,KAAK,KAAK,CAAC;AACtC,MAAM;AACN,SAAS;AACT,SAAS;AACT,YAAY,MAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC;AAC1D;AACA;AACA,YAAY,cAAc,CAAC,OAAO,CAAC,GAAG,EAAE,QAAQ,KAAK,WAAW,GAAG,KAAK,CAAC,GAAG,QAAQ,CAAC,CAAC;AACtF,UAAU;AACV,SAAS,OAAO,GAAG,EAAE,SAAS;AAC9B,OAAO;AACP;AACA,MAAM,OAAO,KAAK,CAAC;AACnB,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,QAAQ,CAAC,GAAG,EAAE,YAAY;AAC7B,GAAG;AACH,MAAM,OAAO,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,YAAY,CAAC,CAAC;AAC/C,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,OAAO,CAAC,GAAG,EAAE,KAAK;AACrB,GAAG;AACH,MAAM,MAAM,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;AACxC,MAAM,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;AACvB,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,eAAe,CAAC,GAAG,EAAE,YAAY;AACpC,GAAG;AACH,MAAM,MAAM,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,YAAY,CAAC,CAAC;AACtD;AACA,MAAM,IAAI,YAAY,GAAG,KAAK,CAAC;AAC/B;AACA,MAAM;AACN,MAAM;AACN,SAAS,YAAY,GAAG,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC;AAClE,OAAO;AACP,MAAM,OAAO,GAAG,EAAE,QAAQ;AAC1B;AACA,MAAM,MAAM,QAAQ,GAAG,OAAO,YAAY,KAAK,SAAS,GAAG,CAAC,YAAY,GAAG,KAAK,CAAC;AACjF;AACA,MAAM,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;AAC1B,MAAM,OAAO,QAAQ,CAAC;AACtB,IAAI;AACJ,CAAA;;ACpJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,SAAS,eAAe,CAAC,OAAO,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE;AAC3E,CAAC,IAAI,kBAAkB,EAAE,YAAY,EAAE,eAAe,GAAG,KAAK,CAAC;AAC/D,CAAC,IAAI,gBAAgB,GAAG,SAAS,IAAI,OAAO,CAAC;AAC7C,CAAC,IAAI,aAAa,GAAG,CAAC,GAAG,EAAE,GAAG,KAAK;AACnC,EAAE,kBAAkB,GAAG,GAAG,CAAC;AAC3B,EAAE,IAAI,gBAAgB,EAAE;AACxB,GAAG,YAAY,GAAG,GAAG,CAAC;AACtB,GAAG;AACH,EAAE,IAAI,CAAC,eAAe,EAAE;AACxB,GAAG,IAAI,QAAQ,GAAG,MAAM,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AACnC,GAAG,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;AAC1B,IAAI,GAAG,CAAC,QAAQ,CAAC,CAAC;AAClB,IAAI,MAAM;AACV,IAAI,OAAO,QAAQ,CAAC;AACpB,IAAI;AACJ,GAAG;AACH,EAAE,eAAe,GAAG,KAAK,CAAC;AAC1B,EAAE,CAAC;AACH,CAAC,IAAI,YAAY,GAAG,OAAO,CAAC,OAAO,EAAE,aAAa,EAAE,OAAO,CAAC,CAAC;AAC7D;AACA,CAAC,IAAI,YAAY,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;AAC5C,CAAC,IAAI,YAAY,GAAG,CAAC,OAAO,KAAK;AACjC,EAAE,IAAI,YAAY,EAAE;AACpB,GAAG,eAAe,GAAG,IAAI,CAAC;AAC1B,GAAG,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;AACxB,GAAG,MAAM;AACT,GAAG,OAAO,CAAC,OAAO,EAAE,CAAC,KAAK,EAAE,CAAC,KAAK;AAClC,IAAI,eAAe,GAAG,IAAI,CAAC;AAC3B,IAAI,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;AAC1B,IAAI,EAAE,CAAC;AACP,GAAG;AACH,EAAE,eAAe,GAAG,KAAK,CAAC;AAC1B,EAAE,CAAC;AACH,CAAC,IAAI,gBAAgB,EAAE;AACvB,EAAE,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC;AAC5B,EAAE;AACF,CAAC,IAAI,cAAc,GAAG,OAAO,CAAC,MAAM,KAAK,gBAAgB,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;AACnE,CAAC,IAAI,OAAO,GAAG,IAAI,CAAC;AACpB,CAAC,SAAS,SAAS,CAAC,UAAU,EAAE;AAChC,EAAE,IAAI,OAAO,EAAE;AACf,GAAG,OAAO,EAAE,CAAC;AACb,GAAG,OAAO,GAAG,IAAI,CAAC;AAClB,GAAG;AACH;AACA,EAAE,IAAI,gBAAgB,EAAE;AACxB,GAAG,IAAI,QAAQ,GAAG,OAAO,CAAC,UAAU,EAAE,YAAY,EAAE,YAAY,CAAC,CAAC;AAClE,GAAG,MAAM;AACT,GAAG,IAAI,QAAQ,GAAG,OAAO,CAAC,UAAU,EAAE,YAAY,CAAC,CAAC;AACpD,GAAG;AACH,EAAE,IAAI,cAAc,EAAE;AACtB,GAAG,IAAI,OAAO,QAAQ,IAAI,UAAU,EAAE;AACtC,IAAI,OAAO,GAAG,QAAQ,CAAC;AACvB,IAAI;AACJ,GAAG,MAAM;AACT,GAAG,YAAY,CAAC,QAAQ,CAAC,CAAC;AAC1B,GAAG;AACH,EAAE;AACF;AACA,CAAC,IAAI,SAAS,GAAG,KAAK,CAAC;AACvB,CAAC,SAAS,MAAM,CAAC,EAAE,EAAE;AACrB,EAAE,IAAI,SAAS,EAAE,sBAAsB,EAAE,QAAQ,EAAE,QAAQ,CAAC;AAC5D,EAAE,IAAI,SAAS,EAAE;AACjB,GAAG,QAAQ,GAAG,EAAE,EAAE,GAAG,CAAC,YAAY,CAAC,EAAE,CAAC;AACtC,GAAG,kBAAkB,CAAC,QAAQ,CAAC,CAAC;AAChC,GAAG,OAAO;AACV,GAAG;AACH,EAAE,IAAI,WAAW,GAAG,YAAY,CAAC,SAAS,EAAE,CAAC,KAAK,KAAK;AACvD,GAAG,IAAI,CAAC,SAAS,EAAE;AACnB,IAAI,QAAQ,GAAG,KAAK,CAAC;AACrB,IAAI,MAAM,IAAI,CAAC,SAAS,EAAE;AAC1B,IAAI,SAAS,GAAG,IAAI,CAAC;AACrB,IAAI,MAAM;AACV,IAAI,sBAAsB,GAAG,IAAI,CAAC;AAClC,IAAI;AACJ,GAAG,EAAE,CAAC;AACN,EAAE,QAAQ,GAAG,EAAE,CAAC,QAAQ,CAAC,CAAC;AAC1B,EAAE,SAAS,GAAG,IAAI,CAAC;AACnB,EAAE,kBAAkB,CAAC,QAAQ,CAAC,CAAC;AAC/B,EAAE,WAAW,EAAE,CAAC;AAChB,EAAE,SAAS,GAAG,KAAK,CAAC;AACpB,EAAE,IAAI,sBAAsB,EAAE;AAC9B,GAAG,QAAQ,GAAG,GAAG,CAAC,YAAY,CAAC,CAAC;AAChC,GAAG;AACH,EAAE,IAAI,SAAS,EAAE;AACjB,GAAG,SAAS,CAAC,QAAQ,CAAC,CAAC;AACvB,GAAG;AACH,EAAE;AACF,CAAC,OAAO;AACR,EAAE,SAAS,EAAE,YAAY,CAAC,SAAS;AACnC,EAAE,GAAG,CAAC,KAAK,EAAE,EAAE,MAAM,EAAE,MAAM,KAAK,EAAE,CAAC,EAAE;AACvC,EAAE,MAAM;AACR,EAAE,CAAC;AACH,CAAC;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS,aAAa,CAAC,MAAM,EAAE,QAAQ,EAAE;AAChD,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE;AAC/B,EAAE,OAAO,eAAe;AACxB,GAAG,MAAM;AACT,GAAG,CAAC,MAAM,KAAK,MAAM,CAAC,QAAQ,CAAC;AAC/B,GAAG,EAAE,OAAO,CAAC,UAAU,EAAE,MAAM,EAAE;AACjC,IAAI,MAAM,CAAC,QAAQ,CAAC,GAAG,UAAU,CAAC;AAClC,IAAI,OAAO,MAAM,CAAC;AAClB,IAAI,EAAE;AACN,GAAG,CAAC;AACJ,EAAE,MAAM;AACR,EAAE,IAAI,KAAK,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC;AAChC,EAAE,OAAO,eAAe;AACxB,GAAG,MAAM;AACT,GAAG,CAAC,KAAK,KAAK;AACd,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;AAC3C,KAAK,KAAK,GAAG,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC;AAC/B,KAAK;AACL,IAAI,OAAO,KAAK,CAAC;AACjB,IAAI;AACJ,GAAG,EAAE,OAAO,CAAC,UAAU,EAAE,MAAM,EAAE;AACjC,IAAI,IAAI,MAAM,GAAG,MAAM,CAAC;AACxB,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE;AAC/C,KAAK,MAAM,GAAG,MAAM,EAAE,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC;AACjC,KAAK;AACL,IAAI,MAAM,EAAE,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,EAAE,GAAG,UAAU,CAAC;AACnD,IAAI,OAAO,MAAM,CAAC;AAClB,IAAI,EAAE;AACN,GAAG,CAAC;AACJ,EAAE;AACF;;AC3JA;AACA;AACO,MAAM,oBAAoB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,OAAO,mBAAmB,GAAG,6BAA6B,CAAC;AAC9D;AACA;AACA;AACA;AACA,GAAG,KAAK,GAAG,IAAI,GAAG,EAAE,CAAC;AACrB;AACA;AACA;AACA;AACA,GAAG,SAAS,CAAC;AACb;AACA;AACA;AACA;AACA,GAAG,cAAc,GAAG,IAAI,GAAG,EAAE,CAAC;AAC9B;AACA;AACA;AACA;AACA,GAAG,WAAW,CAAC,QAAQ;AACvB,GAAG;AACH,MAAM,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;AAChC;AACA,MAAM,IAAI,CAAC,eAAe,EAAE,CAAC;AAC7B,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,MAAM,CAAC,YAAY,EAAE,OAAO;AAC/B,GAAG;AACH;AACA,MAAM,MAAM,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;AACpC;AACA,MAAM,IAAI,UAAU,GAAG,IAAI,CAAC;AAC5B;AACA,MAAM,IAAI,GAAG;AACb,MAAM;AACN,SAAS;AACT,SAAS;AACT,YAAY,UAAU,GAAG,GAAG,CAAC,qBAAqB,CAAC,YAAY,CAAC,CAAC;AACjE,UAAU;AACV,SAAS,OAAO,GAAG;AACnB,SAAS;AACT,YAAY,OAAO,CAAC,IAAI,CAAC,CAAC,qEAAqE,EAAE,YAAY,CAAC,CAAC,CAAC,CAAC;AACjH,UAAU;AACV,OAAO;AACP;AACA,MAAM,IAAI,YAAY,CAAC;AACvB;AACA,MAAM,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,YAAY,CAAC;AACvC,MAAM;AACN,SAAS,YAAY,GAAG;AACxB,YAAY,UAAU;AACtB,YAAY,MAAM,EAAE,IAAI,GAAG,EAAE;AAC7B,UAAU,CAAC;AACX;AACA,SAAS,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,YAAY,EAAE,YAAY,CAAC,CAAC;AACpD,OAAO;AACP;AACA,MAAM;AACN,SAAS,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;AACrD,OAAO;AACP;AACA;AACA,MAAM,IAAI,IAAI,CAAC;AACf;AACA;AACA,MAAM,IAAI,IAAI,GAAG,EAAE,CAAC;AACpB;AACA;AACA,MAAM,IAAI,IAAI,CAAC;AACf;AACA,MAAM,IAAI,OAAO,OAAO,KAAK,QAAQ;AACrC,MAAM;AACN,SAAS,IAAI,GAAG,OAAO,CAAC;AACxB,SAAS,IAAI,GAAG,aAAa,CAAC;AAC9B,OAAO;AACP,WAAW,IAAI,OAAO,OAAO,KAAK,UAAU,IAAI,YAAY,CAAC,OAAO,EAAE,aAAa,CAAC;AACpF,MAAM;AACN,SAAS,IAAI,GAAG,OAAO,CAAC;AACxB,OAAO;AACP,WAAW,IAAI,OAAO,OAAO,KAAK,QAAQ,IAAI,OAAO,KAAK,IAAI;AAC9D,MAAM;AACN,SAAS,CAAC,EAAE,IAAI,EAAE,IAAI,GAAG,aAAa,EAAE,GAAG,IAAI,EAAE,GAAG,OAAO,EAAE;AAC7D,OAAO;AACP;AACA,MAAM;AACN,SAAS,MAAM,IAAI,SAAS,CAAC,CAAC,oFAAoF,CAAC,CAAC,CAAC;AACrH,OAAO;AACP;AACA,MAAM,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,aAAa,CAAC;AAC5C,MAAM;AACN,SAAS,MAAM,IAAI,SAAS,CAAC,CAAC,mEAAmE,CAAC,CAAC,CAAC;AACpG,OAAO;AACP;AACA,MAAM,IAAI,GAAG,IAAI,IAAI,IAAI,EAAE,IAAI,CAAC;AAChC;AACA,MAAM,IAAI,OAAO,IAAI,KAAK,QAAQ,EAAE,EAAE,MAAM,IAAI,SAAS,CAAC,CAAC,0DAA0D,CAAC,CAAC,CAAC,EAAE;AAC1H;AACA,MAAM,IAAI,YAAY,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC;AACvC,MAAM;AACN,SAAS,OAAO,YAAY,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;AAC9C,OAAO;AACP;AACA,MAAM;AACN,SAAS,MAAM,YAAY,GAAG,UAAU,GAAG,EAAE,IAAI,EAAE,UAAU,EAAE,GAAG,IAAI,EAAE,GAAG,EAAE,GAAG,IAAI,EAAE,CAAC;AACvF,SAAS,MAAM,KAAK,GAAG,IAAI,IAAI,CAAC,YAAY,CAAC,CAAC;AAC9C,SAAS,YAAY,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;AAC9C,SAAS,OAAO,KAAK,CAAC;AACtB,OAAO;AACP,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,OAAO,CAAC,YAAY,EAAE,SAAS;AAClC,GAAG;AACH,MAAM,IAAI,KAAK,GAAG,CAAC,CAAC;AACpB;AACA;AACA,MAAM,IAAI,YAAY,KAAK,KAAK,CAAC;AACjC,MAAM;AACN,SAAS,KAAK,MAAM,YAAY,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE;AACvD,SAAS;AACT,YAAY,YAAY,CAAC,UAAU,GAAG,IAAI,CAAC;AAC3C,YAAY,KAAK,MAAM,KAAK,IAAI,YAAY,CAAC,MAAM,CAAC,MAAM,EAAE;AAC5D,YAAY;AACZ,eAAe,KAAK,CAAC,OAAO,EAAE,CAAC;AAC/B,eAAe,KAAK,EAAE,CAAC;AACvB,aAAa;AACb,UAAU;AACV;AACA,SAAS,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;AAC5B,OAAO;AACP,WAAW,IAAI,OAAO,YAAY,KAAK,QAAQ,IAAI,SAAS,KAAK,KAAK,CAAC;AACvE,MAAM;AACN,SAAS,MAAM,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;AAC3D,SAAS,IAAI,YAAY;AACzB,SAAS;AACT,YAAY,YAAY,CAAC,UAAU,GAAG,IAAI,CAAC;AAC3C,YAAY,KAAK,MAAM,KAAK,IAAI,YAAY,CAAC,MAAM,CAAC,MAAM,EAAE;AAC5D,YAAY;AACZ,eAAe,KAAK,CAAC,OAAO,EAAE,CAAC;AAC/B,eAAe,KAAK,EAAE,CAAC;AACvB,aAAa;AACb,UAAU;AACV;AACA,SAAS,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;AACzC,OAAO;AACP,WAAW,IAAI,OAAO,YAAY,KAAK,QAAQ,IAAI,SAAS,KAAK,QAAQ;AACzE,MAAM;AACN,SAAS,MAAM,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;AAC3D,SAAS,IAAI,YAAY;AACzB,SAAS;AACT,YAAY,MAAM,KAAK,GAAG,YAAY,CAAC,MAAM,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;AAC7D,YAAY,IAAI,KAAK;AACrB,YAAY;AACZ,eAAe,KAAK,CAAC,OAAO,EAAE,CAAC;AAC/B,eAAe,KAAK,EAAE,CAAC;AACvB,aAAa;AACb,UAAU;AACV,OAAO;AACP;AACA,MAAM,OAAO,KAAK,GAAG,CAAC,CAAC;AACvB,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,GAAG,CAAC,YAAY,EAAE,SAAS;AAC9B,GAAG;AACH,MAAM,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,YAAY,CAAC,EAAE,EAAE,OAAO,KAAK,CAAC,CAAC,EAAE;AAC3D;AACA,MAAM,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;AAChE,IAAI;AACJ;AACA;AACA;AACA;AACA,GAAG,eAAe;AAClB,GAAG;AACH,MAAM,MAAM,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;AACpC;AACA,MAAM,IAAI,GAAG,YAAY,OAAO,CAAC,QAAQ,CAAC,QAAQ;AAClD,MAAM;AACN,SAAS,MAAM,qBAAqB,GAAG,IAAI,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,CAAC;AAClE;AACA;AACA,SAAS,MAAM,aAAa,GAAG,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,QAAQ,EAAE,QAAQ,IAAI,EAAE,CAAC,CAAC;AACtF;AACA;AACA,SAAS,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC;AACrC;AACA,SAAS,KAAK,MAAM,YAAY,IAAI,aAAa;AACjD,SAAS;AACT;AACA,YAAY,qBAAqB,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;AACvD;AACA;AACA,YAAY,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC,CAAC,CAAC;AAC7D,YAAY,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC,CAAC,CAAC;AAC7D,YAAY,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC,CAAC,CAAC;AAC7D;AACA,YAAY,IAAI,UAAU,GAAG,IAAI,CAAC;AAClC;AACA,YAAY;AACZ,YAAY;AACZ;AACA,eAAe,UAAU,GAAG,GAAG,CAAC,qBAAqB,CAAC,YAAY,CAAC,CAAC;AACpE,aAAa;AACb,YAAY,OAAO,GAAG;AACtB,YAAY;AACZ,eAAe,OAAO,CAAC,IAAI,CAAC,CAAC,8EAA8E;AAC3G,gBAAgB,YAAY,CAAC,CAAC,CAAC,CAAC;AAChC,aAAa;AACb;AACA;AACA,YAAY,MAAM,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;AAC9D,YAAY,IAAI,YAAY;AAC5B,YAAY;AACZ,eAAe,YAAY,CAAC,UAAU,GAAG,UAAU,CAAC;AACpD;AACA;AACA,eAAe,KAAK,MAAM,KAAK,IAAI,YAAY,CAAC,MAAM,CAAC,MAAM,EAAE,EAAE,EAAE,KAAK,CAAC,OAAO,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC,EAAE;AACrG,aAAa;AACb,UAAU;AACV;AACA;AACA,SAAS,KAAK,MAAM,YAAY,IAAI,qBAAqB;AACzD,SAAS;AACT,YAAY,MAAM,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;AAC9D,YAAY,IAAI,YAAY;AAC5B,YAAY;AACZ,eAAe,YAAY,CAAC,UAAU,GAAG,IAAI,CAAC;AAC9C;AACA,eAAe,KAAK,MAAM,KAAK,IAAI,YAAY,CAAC,MAAM,CAAC,MAAM,EAAE,EAAE,EAAE,KAAK,CAAC,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,EAAE;AAC/F,aAAa;AACb,UAAU;AACV,OAAO;AACP;AACA,MAAM;AACN,SAAS,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC;AACrC;AACA,SAAS,KAAK,MAAM,YAAY,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE;AACvD,SAAS;AACT,YAAY,YAAY,CAAC,UAAU,GAAG,IAAI,CAAC;AAC3C;AACA,YAAY,KAAK,MAAM,KAAK,IAAI,YAAY,CAAC,MAAM,CAAC,MAAM,EAAE,EAAE,EAAE,KAAK,CAAC,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,EAAE;AAC5F,UAAU;AACV,OAAO;AACP,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,YAAY,CAAC,aAAa;AAC7B,GAAG;AACH,MAAM,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,aAAa,CAAC,EAAE,EAAE,OAAO,EAAE;AAC9D;AACA,MAAM,MAAM,KAAK,GAAG,oBAAoB,CAAC,mBAAmB,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;AACjF;AACA,MAAM,IAAI,KAAK;AACf,MAAM;AACN,SAAS,MAAM,YAAY,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;AACvC,SAAS,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,YAAY,CAAC,EAAE,EAAE,OAAO,EAAE;AACvD;AACA,SAAS,KAAK,MAAM,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,MAAM,CAAC,MAAM,EAAE;AACzE,SAAS;AACT,YAAY,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;AACrC,UAAU;AACV,OAAO;AACP,IAAI;AACJ,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtTA;AACA;AACA;AACA;AACA;AACO,MAAM,WAAW;AACxB;AACA;AACA;AACA;AACA,GAAG,SAAS,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;AACxB;AACA;AACA;AACA;AACA,GAAG,qBAAqB,CAAC;AACzB,GAAG,YAAY,CAAC;AAChB;AACA;AACA;AACA;AACA,GAAG,OAAO,CAAC;AACX;AACA;AACA;AACA;AACA,GAAG,QAAQ,GAAG,EAAE,MAAM,EAAE,KAAK,CAAC,EAAE,CAAC;AACjC;AACA,GAAG,cAAc,GAAG,EAAE,CAAC;AACvB,GAAG,cAAc,CAAC;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,WAAW,CAAC,QAAQ,EAAE,OAAO,GAAG,EAAE;AACrC,GAAG;AACH,MAAM,IAAI,CAAC,OAAO,GAAG,CAAC,aAAa,EAAE,MAAM,EAAE,CAAC,CAAC,CAAC;AAChD;AACA,MAAM,IAAI,aAAa,CAAC,QAAQ,CAAC;AACjC,MAAM;AACN,SAAS,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;AACnC,OAAO;AACP;AACA,MAAM;AACN,SAAS,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;AAClC,SAAS,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;AAC5B,OAAO;AACP,IAAI;AACJ;AACA;AACA;AACA;AACA,GAAG,IAAI,QAAQ;AACf,GAAG;AACH,MAAM,IAAI,CAAC,IAAI,CAAC,YAAY;AAC5B,MAAM;AACN,SAAS,IAAI,CAAC,qBAAqB,GAAG,IAAI,oBAAoB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AAC/E,SAAS,IAAI,CAAC,YAAY,GAAG;AAC7B,YAAY,MAAM,EAAE,CAAC,YAAY,EAAE,OAAO,KAAK,IAAI,CAAC,qBAAqB,CAAC,MAAM,CAAC,YAAY,EAAE,OAAO,CAAC;AACvG,YAAY,OAAO,EAAE,CAAC,YAAY,EAAE,SAAS,KAAK,IAAI,CAAC,qBAAqB,CAAC,OAAO,CAAC,YAAY,EAAE,SAAS,CAAC;AAC7G,YAAY,GAAG,EAAE,CAAC,YAAY,EAAE,SAAS,KAAK,IAAI,CAAC,qBAAqB,CAAC,GAAG,CAAC,YAAY,EAAE,SAAS,CAAC;AACrG,UAAU,CAAC;AACX,OAAO;AACP;AACA,MAAM,OAAO,IAAI,CAAC,YAAY,CAAC;AAC/B,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,IAAI,aAAa,GAAG,EAAE,OAAO,IAAI,CAAC,cAAc,IAAI,EAAE,CAAC,EAAE;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,IAAI,MAAM,GAAG,EAAE,OAAO,IAAI,CAAC,OAAO,CAAC,EAAE;AACxC;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,MAAM,QAAQ;AACjB,GAAG;AACH,MAAM,MAAM,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;AACpC;AACA;AACA,MAAM,IAAI,GAAG,YAAY,OAAO,CAAC,QAAQ,CAAC,QAAQ,IAAI,CAAC,GAAG,EAAE,UAAU,EAAE,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC;AACnF,MAAM;AACN,SAAS,OAAO,GAAG,EAAE,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AACxC,SAAS,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC;AACnC;AACA,SAAS,IAAI,CAAC,kBAAkB,CAAC,KAAK,EAAE,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,CAAC,EAAE,CAAC,CAAC;AAC5E;AACA,SAAS,IAAI,OAAO,IAAI,CAAC,QAAQ,CAAC,MAAM,KAAK,UAAU,EAAE,EAAE,MAAM,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE;AAC1F;AACA,SAAS,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC,CAAC;AACtC,OAAO;AACP,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,GAAG,OAAO;AACV,GAAG;AACH,MAAM,MAAM,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;AACpC;AACA,MAAM,IAAI,IAAI,CAAC,qBAAqB;AACpC,MAAM;AACN,SAAS,IAAI,CAAC,qBAAqB,CAAC,OAAO,EAAE,CAAC;AAC9C,SAAS,IAAI,CAAC,qBAAqB,GAAG,KAAK,CAAC,CAAC;AAC7C,SAAS,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC,CAAC;AACpC,OAAO;AACP;AACA,MAAM,IAAI,GAAG,YAAY,OAAO,CAAC,QAAQ,CAAC,QAAQ;AAClD,MAAM;AACN,SAAS,OAAO,GAAG,EAAE,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AACxC,SAAS,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC;AACnC,OAAO;AACP;AACA,MAAM,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,KAAK,CAAC,CAAC;AACpC,MAAM,IAAI,CAAC,cAAc,CAAC,MAAM,GAAG,CAAC,CAAC;AACrC,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,kBAAkB,CAAC,KAAK,GAAG,KAAK,EAAE,OAAO,GAAG,EAAE;AACjD,GAAG;AACH,MAAM,IAAI,CAAC,cAAc,GAAG,OAAO,CAAC;AACpC;AACA,MAAM,MAAM,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;AACpC;AACA,MAAM,KAAK,IAAI,IAAI,GAAG,CAAC,EAAE,IAAI,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC,EAAE;AAChH;AACA,MAAM,IAAI,IAAI,CAAC,qBAAqB;AACpC,MAAM;AACN,SAAS,IAAI,CAAC,qBAAqB,CAAC,YAAY,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;AACxE,OAAO;AACP,IAAI;AACJ;AACA;AACA;AACA;AACA,GAAG,GAAG,GAAG,EAAE,OAAO,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,EAAE;AACtC;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,GAAG,CAAC,QAAQ,EAAE,OAAO,GAAG,EAAE;AAC7B,GAAG;AACH,MAAM,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;AAC3B,MAAM;AACN,SAAS,OAAO,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AACrD,OAAO;AACP;AACA,MAAM,IAAI,QAAQ,KAAK,KAAK,CAAC,IAAI,EAAE,QAAQ,YAAY,OAAO,CAAC,QAAQ,CAAC,QAAQ,CAAC;AACjF,MAAM;AACN,SAAS,MAAM,IAAI,SAAS,CAAC,CAAC,uEAAuE,CAAC,CAAC,CAAC;AACxG,OAAO;AACP;AACA,MAAM,IAAI,OAAO,KAAK,IAAI,IAAI,OAAO,OAAO,KAAK,QAAQ;AACzD,MAAM;AACN,SAAS,MAAM,IAAI,SAAS,CAAC,CAAC,kDAAkD,CAAC,CAAC,CAAC;AACnF,OAAO;AACP;AACA,MAAM,IAAI,QAAQ,YAAY,OAAO,CAAC,QAAQ,CAAC,QAAQ;AACvD,MAAM;AACN,SAAS,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG;AACvC,YAAY,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC;AAC3C,YAAY,MAAM,EAAE,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC;AACtD,UAAU,CAAC;AACX,OAAO;AACP;AACA,MAAM,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;AAClC,MAAM,IAAI,CAAC,cAAc,GAAG,OAAO,CAAC;AACpC,MAAM,IAAI,CAAC,kBAAkB,EAAE,CAAC;AAChC,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,GAAG,YAAY,CAAC,GAAG;AACnB,GAAG;AACH,MAAM,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;AAC9B;AACA,MAAM,IAAI,IAAI,CAAC,qBAAqB,EAAE,EAAE,IAAI,CAAC,qBAAqB,CAAC,eAAe,EAAE,CAAC,EAAE;AACvF,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,MAAM,mBAAmB,CAAC,IAAI,EAAE,OAAO;AAC1C,GAAG;AACH,MAAM,OAAO,IAAI,CAAC,WAAW,CAAC,uBAAuB,CAAC,IAAI,EAAE,OAAO,CAAC,EAAE,OAAO,CAAC,CAAC;AAC/E,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,MAAM,WAAW,CAAC,IAAI,EAAE,OAAO,GAAG,EAAE;AACvC,GAAG;AACH,MAAM,IAAI,OAAO,IAAI,KAAK,QAAQ,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE,EAAE,OAAO,KAAK,CAAC,EAAE;AAC1E;AACA,MAAM;AACN,MAAM;AACN,SAAS,MAAM,GAAG,GAAG,MAAM,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;AACrD;AACA,SAAS,IAAI,GAAG;AAChB,SAAS;AACT,YAAY,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC;AACnC,YAAY,OAAO,IAAI,CAAC;AACxB,UAAU;AACV,OAAO;AACP,MAAM,OAAO,GAAG,EAAE,QAAQ;AAC1B;AACA,MAAM,OAAO,KAAK,CAAC;AACnB,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,UAAU,CAAC,OAAO;AACrB,GAAG;AACH,MAAM,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC;AAC5B,MAAM;AACN,SAAS,MAAM,IAAI,SAAS,CAAC,CAAC,mDAAmD,CAAC,CAAC,CAAC;AACpF,OAAO;AACP;AACA,MAAM,IAAI,OAAO,CAAC,MAAM,KAAK,KAAK,CAAC,IAAI,OAAO,OAAO,CAAC,MAAM,KAAK,UAAU;AAC3E,MAAM;AACN,SAAS,MAAM,IAAI,SAAS,CAAC,CAAC,mEAAmE,CAAC,CAAC,CAAC;AACpG,OAAO;AACP;AACA,MAAM,IAAI,OAAO,CAAC,MAAM,KAAK,KAAK,CAAC,IAAI,OAAO,OAAO,CAAC,MAAM,KAAK,UAAU;AAC3E,MAAM;AACN,SAAS,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC;AAC/C,OAAO;AACP,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,SAAS,CAAC,OAAO;AACpB,GAAG;AACH,MAAM,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AACxC;AACA,MAAM,MAAM,aAAa,GAAG,EAAE,MAAM,EAAE,WAAW,EAAE,IAAI,EAAE,KAAK,CAAC,EAAE,CAAC;AAClE;AACA,MAAM,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,aAAa,CAAC,CAAC;AAChD;AACA;AACA,MAAM,OAAO;AACb,MAAM;AACN,SAAS,MAAM,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC,GAAG,KAAK,GAAG,KAAK,OAAO,CAAC,CAAC;AAC/E,SAAS,IAAI,KAAK,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,EAAE;AAClE,OAAO,CAAC;AACR,IAAI;AACJ,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjTA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,qBAAqB;AAClC;AACA,GAAG,WAAW,CAAC;AACf,GAAG,mBAAmB,CAAC;AACvB,GAAG,KAAK,CAAC;AACT;AACA;AACA;AACA;AACA,GAAG,QAAQ,GAAG,EAAE,MAAM,EAAE,KAAK,CAAC,EAAE,CAAC;AACjC;AACA,GAAG,cAAc,GAAG,EAAE,CAAC;AACvB,GAAG,cAAc,CAAC;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,WAAW,CAAC,UAAU,EAAE,OAAO,GAAG,EAAE;AACvC,GAAG;AACH,MAAM,IAAI,CAAC,KAAK,GAAG,CAAC,eAAe,EAAE,MAAM,EAAE,CAAC,CAAC,CAAC;AAChD;AACA,MAAM,IAAI,aAAa,CAAC,UAAU,CAAC;AACnC,MAAM;AACN,SAAS,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;AACrC,OAAO;AACP;AACA,MAAM;AACN,SAAS,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;AAClC,SAAS,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;AAC9B,OAAO;AACP,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,IAAI,aAAa,GAAG,EAAE,OAAO,IAAI,CAAC,cAAc,IAAI,EAAE,CAAC,EAAE;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,IAAI,IAAI,GAAG,EAAE,OAAO,IAAI,CAAC,KAAK,CAAC,EAAE;AACpC;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,MAAM,QAAQ;AACjB,GAAG;AACH,MAAM,MAAM,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC;AAC1C;AACA,MAAM,IAAI,UAAU,YAAY,kBAAkB;AAClD,MAAM;AACN,SAAS,MAAM,KAAK,GAAG,UAAU,EAAE,IAAI,EAAE,SAAS,CAAC,CAAC,GAAG,KAAK,GAAG,KAAK,IAAI,CAAC,mBAAmB,CAAC,CAAC;AAC9F,SAAS,IAAI,KAAK,IAAI,CAAC,EAAE,EAAE,UAAU,EAAE,IAAI,EAAE,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,EAAE;AAChE;AACA,SAAS,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC,CAAC;AACnC,OAAO;AACP;AACA,MAAM,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,MAAM,EAAE,QAAQ,EAAE,YAAY,EAAE,UAAU,CAAC,YAAY,EAAE,SAAS,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,CAAC,CAAC;AAChH;AACA,MAAM,IAAI,OAAO,IAAI,CAAC,QAAQ,CAAC,MAAM,KAAK,UAAU,EAAE,EAAE,MAAM,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE;AACvF;AACA,MAAM,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC,CAAC;AACnC,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,GAAG,OAAO;AACV,GAAG;AACH,MAAM,MAAM,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC;AAC1C;AACA,MAAM,IAAI,UAAU,YAAY,kBAAkB;AAClD,MAAM;AACN,SAAS,MAAM,KAAK,GAAG,UAAU,EAAE,IAAI,EAAE,SAAS,CAAC,CAAC,GAAG,KAAK,GAAG,KAAK,IAAI,CAAC,mBAAmB,CAAC,CAAC;AAC9F,SAAS,IAAI,KAAK,IAAI,CAAC,EAAE,EAAE,UAAU,EAAE,IAAI,EAAE,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,EAAE;AAChE;AACA,SAAS,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC,CAAC;AACnC,OAAO;AACP;AACA,MAAM,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,KAAK,CAAC,CAAC;AACpC,MAAM,IAAI,CAAC,cAAc,CAAC,MAAM,GAAG,CAAC,CAAC;AACrC,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,OAAO,CAAC,KAAK,GAAG,KAAK,EAAE,OAAO,GAAG,EAAE;AACtC,GAAG;AACH,MAAM,IAAI,CAAC,cAAc,GAAG,OAAO,CAAC;AACpC;AACA;AACA;AACA,MAAM,MAAM,aAAa,GAAG,IAAI,CAAC,cAAc,CAAC;AAChD,MAAM,MAAM,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC;AAC1C;AACA,MAAM,KAAK,IAAI,IAAI,GAAG,CAAC,EAAE,IAAI,GAAG,aAAa,CAAC,MAAM,EAAE,IAAI,EAAE,EAAE,EAAE,aAAa,CAAC,IAAI,CAAC,CAAC,UAAU,EAAE,OAAO,CAAC,CAAC,EAAE;AAC3G,IAAI;AACJ;AACA;AACA;AACA;AACA,GAAG,GAAG,GAAG,EAAE,OAAO,IAAI,CAAC,WAAW,CAAC,EAAE;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,GAAG,CAAC,UAAU,EAAE,OAAO,GAAG,EAAE;AAC/B,GAAG;AACH,MAAM,IAAI,IAAI,CAAC,WAAW;AAC1B,MAAM;AACN,SAAS,MAAM,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,GAAG,KAAK,GAAG,KAAK,IAAI,CAAC,mBAAmB,CAAC,CAAC;AAClG,SAAS,IAAI,KAAK,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,EAAE;AACpE;AACA,SAAS,IAAI,CAAC,mBAAmB,GAAG,KAAK,CAAC,CAAC;AAC3C,OAAO;AACP;AACA,MAAM,IAAI,UAAU,KAAK,KAAK,CAAC,IAAI,EAAE,UAAU,YAAY,kBAAkB,CAAC;AAC9E,MAAM;AACN,SAAS,MAAM,IAAI,SAAS;AAC5B,UAAU,CAAC,6FAA6F,CAAC,CAAC,CAAC;AAC3G,OAAO;AACP;AACA,MAAM,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC;AAC5B,MAAM;AACN,SAAS,MAAM,IAAI,SAAS,CAAC,CAAC,kDAAkD,CAAC,CAAC,CAAC;AACnF,OAAO;AACP;AACA,MAAM,IAAI,UAAU,YAAY,kBAAkB;AAClD,MAAM;AACN,SAAS,IAAI,CAAC,mBAAmB,GAAG;AACpC,YAAY,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC;AAC3C,YAAY,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC;AAC3C,UAAU,CAAC;AACX;AACA,SAAS,UAAU,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;AAC1D,OAAO;AACP;AACA,MAAM,IAAI,CAAC,WAAW,GAAG,UAAU,CAAC;AACpC,MAAM,IAAI,CAAC,cAAc,GAAG,OAAO,CAAC;AACpC,MAAM,IAAI,CAAC,OAAO,EAAE,CAAC;AACrB,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,UAAU,CAAC,OAAO;AACrB,GAAG;AACH,MAAM,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC;AAC5B,MAAM;AACN,SAAS,MAAM,IAAI,SAAS,CAAC,CAAC,wDAAwD,CAAC,CAAC,CAAC;AACzF,OAAO;AACP;AACA,MAAM,IAAI,OAAO,CAAC,MAAM,KAAK,KAAK,CAAC,IAAI,OAAO,OAAO,CAAC,MAAM,KAAK,UAAU;AAC3E,MAAM;AACN,SAAS,MAAM,IAAI,SAAS,CAAC,CAAC,6EAA6E,CAAC,CAAC,CAAC;AAC9G,OAAO;AACP;AACA,MAAM,IAAI,OAAO,CAAC,MAAM,KAAK,KAAK,CAAC,IAAI,OAAO,OAAO,CAAC,MAAM,KAAK,UAAU;AAC3E,MAAM;AACN,SAAS,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC;AAC/C,OAAO;AACP,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,SAAS,CAAC,OAAO;AACpB,GAAG;AACH,MAAM,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AACxC;AACA,MAAM,MAAM,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC;AAC1C;AACA,MAAM,MAAM,YAAY,GAAG,UAAU,EAAE,YAAY,IAAI,KAAK,CAAC,CAAC;AAC9D;AACA,MAAM,MAAM,aAAa,GAAG,EAAE,MAAM,EAAE,WAAW,EAAE,YAAY,EAAE,SAAS,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,CAAC;AAC3F;AACA,MAAM,OAAO,CAAC,UAAU,EAAE,aAAa,CAAC,CAAC;AACzC;AACA;AACA,MAAM,OAAO;AACb,MAAM;AACN,SAAS,MAAM,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC,GAAG,KAAK,GAAG,KAAK,OAAO,CAAC,CAAC;AAC/E,SAAS,IAAI,KAAK,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,EAAE;AAClE,OAAO,CAAC;AACR,IAAI;AACJ,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;;AC1NA,MAAM,UAAU,GAAGA,UAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;AACpC;AACA;AACA;AACA;AACK,MAAC,SAAS,GAAG;AAClB,GAAG,SAAS,EAAE,UAAU,CAAC,SAAS;AAClC,GAAG,GAAG,EAAE,MAAM,IAAI;AAClB,EAAE;AACF;AACA,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;AACzB;AACA,KAAK,CAAC,IAAI,CAAC,OAAO,EAAE,MAAM,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;AAGhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClBA;AACA;AACA;AACA;AACO,MAAM,eAAe;AAC5B;AACA;AACA;AACA;AACA,GAAG,OAAO,GAAG,IAAI,GAAG,EAAE,CAAC;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,OAAO,YAAY,CAAC,YAAY;AACnC,GAAG;AACH,MAAM,OAAOA,UAAQ,CAAC,YAAY,CAAC,CAAC;AACpC,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,SAAS,CAAC,GAAG,EAAE,YAAY;AAC9B,GAAG;AACH,MAAM,IAAI,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AACxC,MAAM,IAAI,KAAK,KAAK,KAAK,CAAC;AAC1B,MAAM;AACN,SAAS,KAAK,GAAG,eAAe,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC;AAC5D,SAAS,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;AACtC,OAAO;AACP;AACA,MAAM,OAAO,KAAK,CAAC;AACnB,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,gBAAgB,CAAC,GAAG;AACvB,GAAG;AACH,MAAM,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC;AAChC,MAAM;AACN,SAAS,OAAO,CAAC,IAAI,CAAC,CAAC,qCAAqC,EAAE,GAAG,CAAC,8BAA8B,CAAC,CAAC,CAAC;AACnG,SAAS,OAAO;AAChB,OAAO;AACP;AACA,MAAM,MAAM,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;AACxC;AACA,MAAM,OAAO,EAAE,SAAS,EAAE,KAAK,CAAC,SAAS,EAAE,GAAG,EAAE,KAAK,CAAC,GAAG,EAAE,CAAC;AAC5D,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,QAAQ,CAAC,GAAG;AACf,GAAG;AACH,MAAM,OAAO,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,CAAC;AACxC,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,gBAAgB,CAAC,GAAG;AACvB,GAAG;AACH,MAAM,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC;AAChC,MAAM;AACN,SAAS,OAAO,CAAC,IAAI,CAAC,CAAC,qCAAqC,EAAE,GAAG,CAAC,8BAA8B,CAAC,CAAC,CAAC;AACnG,SAAS,OAAO;AAChB,OAAO;AACP;AACA,MAAM,OAAO,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;AACjC,IAAI;AACJ;AACA;AACA;AACA;AACA,GAAG,QAAQ,CAAC,OAAO;AACnB,GAAG;AACH,MAAM,IAAI,OAAO,OAAO,KAAK,QAAQ;AACrC,MAAM;AACN,SAAS,MAAM,IAAI,SAAS,CAAC,CAAC,qDAAqD,CAAC,CAAC,CAAC;AACtF,OAAO;AACP;AACA,MAAM,IAAI,OAAO,OAAO,CAAC,OAAO,KAAK,QAAQ;AAC7C,MAAM;AACN,SAAS,MAAM,IAAI,SAAS,CAAC,CAAC,iEAAiE,CAAC,CAAC,CAAC;AAClG,OAAO;AACP;AACA,MAAM,IAAI,OAAO,CAAC,KAAK,KAAK,KAAK,CAAC,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,KAAK,CAAC;AACrE,MAAM;AACN,SAAS,MAAM,IAAI,SAAS;AAC5B,UAAU,CAAC,8EAA8E,CAAC,CAAC,CAAC;AAC5F,OAAO;AACP;AACA;AACA,MAAM,IAAI,OAAO,OAAO,CAAC,QAAQ,KAAK,QAAQ;AAC9C,MAAM;AACN,SAAS,OAAO,CAAC,IAAI;AACrB,UAAU,CAAC,+FAA+F,CAAC,CAAC,CAAC;AAC7G,SAAS,OAAO,CAAC,IAAI,CAAC,CAAC,0EAA0E,CAAC,CAAC,CAAC;AACpG,OAAO;AACP;AACA;AACA,MAAM,MAAM,SAAS,GAAG,OAAO,CAAC,SAAS,IAAI,OAAO,CAAC,QAAQ,CAAC;AAC9D,MAAM,MAAM,GAAG,GAAG,OAAO,CAAC,GAAG,CAAC;AAC9B;AACA,MAAM,IAAI,OAAO,SAAS,KAAK,QAAQ;AACvC,MAAM;AACN,SAAS,MAAM,IAAI,SAAS,CAAC,CAAC,kEAAkE,CAAC,CAAC,CAAC;AACnG,OAAO;AACP;AACA,MAAM,IAAI,OAAO,GAAG,KAAK,QAAQ;AACjC,MAAM;AACN,SAAS,MAAM,IAAI,SAAS,CAAC,CAAC,4DAA4D,CAAC,CAAC,CAAC;AAC7F,OAAO;AACP;AACA,MAAM,MAAM,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC;AAClC;AACA;AACA;AACA;AACA,MAAM,MAAM,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC;AACtC;AACA,MAAM,MAAM,iBAAiB,GAAG,EAAE,CAAC;AACnC;AACA;AACA,MAAM,IAAI,OAAO,GAAG,KAAK,CAAC;AAC1B;AACA;AACA,MAAM,iBAAiB,CAAC,IAAI,CAAC,CAAC,KAAK;AACnC,MAAM;AACN,SAAS,MAAM,aAAa,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;AACnD,SAAS,IAAI,aAAa,IAAI,CAAC,OAAO;AACtC,SAAS;AACT,YAAY,OAAO,GAAG,IAAI,CAAC;AAC3B,YAAY,aAAa,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;AACrC,YAAY,OAAO,GAAG,KAAK,CAAC;AAC5B,UAAU;AACV,OAAO,CAAC,CAAC;AACT;AACA;AACA,MAAM,IAAI,UAAU,CAAC,OAAO,EAAE,QAAQ,CAAC;AACvC,MAAM;AACN,SAAS,KAAK,MAAM,KAAK,IAAI,OAAO,CAAC,QAAQ;AAC7C,SAAS;AACT,YAAY,IAAI,OAAO,KAAK,KAAK,UAAU,EAAE,EAAE,iBAAiB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE;AAC/E,UAAU;AACV,OAAO;AACP,WAAW,IAAI,OAAO,OAAO,CAAC,QAAQ,KAAK,UAAU;AACrD,MAAM;AACN,SAAS,iBAAiB,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;AAClD,OAAO;AACP;AACA;AACA,MAAM,MAAM,QAAQ,GAAG,CAAC,KAAK;AAC7B,MAAM;AACN,SAAS,KAAK,MAAM,KAAK,IAAI,iBAAiB,EAAE,EAAE,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE;AACjE,OAAO,CAAC;AACR;AACA,MAAM,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,SAAS,EAAE,GAAG,EAAE,EAAE,GAAG,OAAO,EAAE,QAAQ,EAAE,CAAC,CAAC;AACvE;AACA;AACA,MAAM,MAAM,WAAW,GAAG,KAAK,GAAG,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,SAAS,EAAE,GAAG,CAAC,CAAC,CAAC;AACjG;AACA;AACA,MAAM,IAAI,KAAK;AACf,MAAM;AACN,SAAS,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,EAAE,WAAW,CAAC,CAAC;AAC5C,SAAS,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,SAAS,EAAE,GAAG,CAAC,CAAC,CAAC;AACtD,OAAO;AACP;AACA;AACA;AACA,MAAM,oBAAoB,CAAC,WAAW,EAAE,OAAO,KAAK;AACpD,MAAM;AACN,SAAS,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,SAAS,EAAE,GAAG,CAAC,KAAK,KAAK;AACpE,SAAS;AACT,YAAY,OAAO,GAAG,IAAI,CAAC;AAC3B,YAAY,MAAM,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,SAAS,EAAE,GAAG,EAAE,KAAK,CAAC,CAAC;AAC3D,UAAU;AACV;AACA,SAAS,OAAO,GAAG,KAAK,CAAC;AACzB,OAAO,CAAC,CAAC;AACT,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,WAAW,CAAC,QAAQ;AACvB,GAAG;AACH,MAAM,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,EAAE,EAAE,MAAM,IAAI,SAAS,CAAC,CAAC,wDAAwD,CAAC,CAAC,CAAC,EAAE;AACrH;AACA,MAAM,KAAK,MAAM,KAAK,IAAI,QAAQ;AAClC,MAAM;AACN,SAAS,IAAI,OAAO,KAAK,KAAK,QAAQ;AACtC,SAAS;AACT,YAAY,MAAM,IAAI,SAAS,CAAC,CAAC,kEAAkE,CAAC,CAAC,CAAC;AACtG,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,IAAI,OAAO,KAAK,CAAC,GAAG,KAAK,QAAQ;AAC1C,SAAS;AACT,YAAY,MAAM,IAAI,SAAS,CAAC,CAAC,yEAAyE,CAAC,CAAC,CAAC;AAC7G,UAAU;AACV;AACA,SAAS,IAAI,OAAO,KAAK,CAAC,OAAO,KAAK,QAAQ;AAC9C,SAAS;AACT,YAAY,MAAM,IAAI,SAAS,CAAC,CAAC,6EAA6E,CAAC,CAAC,CAAC;AACjH,UAAU;AACV;AACA,SAAS,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;AAC9B,OAAO;AACP,IAAI;AACJ,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;"}