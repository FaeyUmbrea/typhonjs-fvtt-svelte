{"version":3,"file":"index.js","sources":["../../../src/store/fvtt/document/EmbeddedStoreManager.js","../../../src/store/fvtt/document/TJSDocument.js","../../../src/store/fvtt/document/TJSDocumentCollection.js","../../../src/store/fvtt/settings-game/UIControl.js","../../../src/store/fvtt/settings-game/TJSGameSettings.js","../../../src/store/fvtt/settings-game/TJSLiveGameSettings.js","../../../src/store/fvtt/gameState.js"],"sourcesContent":["import { DynMapReducer }   from '#runtime/svelte/store/reducer';\r\n\r\nimport {\r\n   hasPrototype,\r\n   isObject }              from '#runtime/util/object';\r\n\r\n/**\r\n * Provides management of reactive embedded collections.\r\n *\r\n * TODO: Consider subscribing to TJSDocument rather than exposing {@link EmbeddedStoreManager.handleDocChange} and\r\n * {@link EmbeddedStoreManager.handleUpdate}\r\n */\r\nexport class EmbeddedStoreManager\r\n{\r\n   /**\r\n    * RegExp for detecting CRUD updates for renderContext.\r\n    *\r\n    * @type {RegExp}\r\n    */\r\n   static #renderContextRegex = /(?<action>create|delete|update)(?<sep>\\.?)(?<name>\\w+)/;\r\n\r\n   /**\r\n    * @type {Map<string, EmbeddedCollectionData<any>>}\r\n    */\r\n   #name = new Map();\r\n\r\n   /**\r\n    * @type {foundry.abstract.Document[]}\r\n    */\r\n   #document;\r\n\r\n   /**\r\n    * @type {Map<string, string>}\r\n    */\r\n   #collectionToDocName = new Map();\r\n\r\n   /**\r\n    * @type {Set<string>}\r\n    */\r\n   #embeddedNames = new Set();\r\n\r\n   /**\r\n    * @param {foundry.abstract.Document[]} document - The associated document holder.\r\n    */\r\n   constructor(document)\r\n   {\r\n      this.#document = document;\r\n\r\n      this.handleDocChange();\r\n\r\n      Object.seal(this);\r\n   }\r\n\r\n   /**\r\n    * @template [T=import('./types').NamedDocumentConstructor]\r\n    *\r\n    * @param {T} FoundryDoc - A Foundry document class / constructor.\r\n    *\r\n    * @param {import('#runtime/svelte/store/reducer').DynOptionsMapCreate<string, T>} options - DynMapReducer\r\n    *        creation options.\r\n    *\r\n    * @returns {import('#runtime/svelte/store/reducer').DynMapReducer<string, T>} DynMapReducer instance.\r\n    */\r\n   create(FoundryDoc, options)\r\n   {\r\n      const docName = FoundryDoc?.documentName;\r\n\r\n      if (typeof docName !== 'string')\r\n      {\r\n         throw new TypeError(\r\n          `EmbeddedStoreManager.create error: 'FoundryDoc' does not have a valid 'documentName' property.`);\r\n      }\r\n\r\n      /** @type {foundry.abstract.Document} */\r\n      const doc = this.#document[0];\r\n\r\n      let collection = null;\r\n\r\n      if (doc)\r\n      {\r\n         try\r\n         {\r\n            collection = doc.getEmbeddedCollection(docName);\r\n         }\r\n         catch (err)\r\n         {\r\n            console.warn(`EmbeddedStoreManager.create error: No valid embedded collection for: ${docName}`);\r\n         }\r\n      }\r\n\r\n      let embeddedData;\r\n\r\n      if (!this.#name.has(docName))\r\n      {\r\n         embeddedData = {\r\n            collection,\r\n            stores: new Map()\r\n         };\r\n\r\n         this.#name.set(docName, embeddedData);\r\n      }\r\n      else\r\n      {\r\n         embeddedData = this.#name.get(docName);\r\n      }\r\n\r\n      /** @type {string} */\r\n      let name;\r\n\r\n      /** @type {import('#runtime/svelte/store/reducer').DynDataOptions<T>} */\r\n      let rest = {};\r\n\r\n      /** @type {import('#runtime/svelte/store/reducer').IDynMapReducerCtor<string, T>} */\r\n      let ctor;\r\n\r\n      if (typeof options === 'string')\r\n      {\r\n         name = options;\r\n         ctor = DynMapReducer;\r\n      }\r\n      else if (typeof options === 'function' && hasPrototype(options, DynMapReducer))\r\n      {\r\n         ctor = options;\r\n      }\r\n      else if (isObject(options))\r\n      {\r\n         ({ name, ctor = DynMapReducer, ...rest } = options);\r\n      }\r\n      else\r\n      {\r\n         throw new TypeError(`EmbeddedStoreManager.create error: 'options' does not conform to allowed parameters.`);\r\n      }\r\n\r\n      if (!hasPrototype(ctor, DynMapReducer))\r\n      {\r\n         throw new TypeError(`EmbeddedStoreManager.create error: 'ctor' is not a 'DynMapReducer'.`);\r\n      }\r\n\r\n      name = name ?? ctor?.name;\r\n\r\n      if (typeof name !== 'string')\r\n      {\r\n         throw new TypeError(`EmbeddedStoreManager.create error: 'name' is not a string.`);\r\n      }\r\n\r\n      if (embeddedData.stores.has(name))\r\n      {\r\n         return embeddedData.stores.get(name);\r\n      }\r\n      else\r\n      {\r\n         const storeOptions = collection ? { data: collection, ...rest } : { ...rest };\r\n         const store = new ctor(storeOptions);\r\n         embeddedData.stores.set(name, store);\r\n         return store;\r\n      }\r\n   }\r\n\r\n   /**\r\n    * @template [T=import('./types').NamedDocumentConstructor]\r\n    *\r\n    * Destroys and removes embedded collection stores. Invoking this method with no parameters destroys all stores.\r\n    * Invoking with an embedded name destroys all stores for that particular collection. If you provide an embedded and\r\n    * store name just that particular store is destroyed and removed.\r\n    *\r\n    * @param {T}   [FoundryDoc] - A Foundry document class / constructor.\r\n    *\r\n    * @param {string}   [storeName] - Specific store name.\r\n    *\r\n    * @returns {boolean} One or more stores destroyed?\r\n    */\r\n   destroy(FoundryDoc, storeName)\r\n   {\r\n      let count = 0;\r\n\r\n      // Destroy all embedded stores\r\n      if (FoundryDoc === void 0)\r\n      {\r\n         for (const embeddedData of this.#name.values())\r\n         {\r\n            embeddedData.collection = null;\r\n            for (const store of embeddedData.stores.values())\r\n            {\r\n               store.destroy();\r\n               count++;\r\n            }\r\n         }\r\n\r\n         this.#name.clear();\r\n      }\r\n      else\r\n      {\r\n         const docName = FoundryDoc?.documentName;\r\n\r\n         if (typeof docName !== 'string')\r\n         {\r\n            throw new TypeError(\r\n             `EmbeddedStoreManager.delete error: 'FoundryDoc' does not have a valid 'documentName' property.`);\r\n         }\r\n\r\n         if (storeName === void 0)\r\n         {\r\n            const embeddedData = this.#name.get(docName);\r\n            if (embeddedData)\r\n            {\r\n               embeddedData.collection = null;\r\n               for (const store of embeddedData.stores.values())\r\n               {\r\n                  store.destroy();\r\n                  count++;\r\n               }\r\n            }\r\n\r\n            this.#name.delete(docName);\r\n         }\r\n         else if (storeName === 'string')\r\n         {\r\n            const embeddedData = this.#name.get(docName);\r\n            if (embeddedData)\r\n            {\r\n               const store = embeddedData.stores.get(storeName);\r\n               if (store)\r\n               {\r\n                  store.destroy();\r\n                  count++;\r\n               }\r\n            }\r\n         }\r\n      }\r\n\r\n      return count > 0;\r\n   }\r\n\r\n   /**\r\n    * @template [T=import('./types').NamedDocumentConstructor]\r\n    *\r\n    * @param {T} FoundryDoc - A Foundry document class / constructor.\r\n    *\r\n    * @param {string} storeName - Name of the embedded collection to retrieve.\r\n    *\r\n    * @returns {import('#runtime/svelte/store/reducer').DynMapReducer<string, InstanceType<T>>} DynMapReducer\r\n    *          instance.\r\n    */\r\n   get(FoundryDoc, storeName)\r\n   {\r\n      const docName = FoundryDoc?.documentName;\r\n\r\n      if (typeof docName !== 'string')\r\n      {\r\n         throw new TypeError(\r\n          `EmbeddedStoreManager.get error: 'FoundryDoc' does not have a valid 'documentName' property.`);\r\n      }\r\n\r\n      if (!this.#name.has(docName)) { return void 0; }\r\n\r\n      return this.#name.get(docName).stores.get(storeName);\r\n   }\r\n\r\n   /**\r\n    * Updates all existing embedded collection stores with the associated embedded collection\r\n    */\r\n   handleDocChange()\r\n   {\r\n      const doc = this.#document[0];\r\n\r\n      if (doc instanceof globalThis.foundry.abstract.Document)\r\n      {\r\n         const existingEmbeddedNames = new Set(this.#name.keys());\r\n\r\n         /** @type {[string, string][]} */\r\n         const embeddedNames = Object.entries(doc.constructor?.metadata?.embedded ?? []);\r\n\r\n         this.#collectionToDocName.clear();\r\n\r\n         // Remove all previously stored embedded name CRUD keys.\r\n         this.#embeddedNames.clear();\r\n\r\n         for (const [docName, collectionName] of embeddedNames)\r\n         {\r\n            // Remove processed embedded doc name from existingEmbeddedNames set.\r\n            existingEmbeddedNames.delete(docName);\r\n\r\n            // Update CRUD keys for v10.\r\n            this.#embeddedNames.add(`create${docName}`);\r\n            this.#embeddedNames.add(`delete${docName}`);\r\n            this.#embeddedNames.add(`update${docName}`);\r\n\r\n            // Update CRUD keys for v11.\r\n            this.#embeddedNames.add(`create.${collectionName}`);\r\n            this.#embeddedNames.add(`delete.${collectionName}`);\r\n            this.#embeddedNames.add(`update.${collectionName}`);\r\n\r\n            // v10 collection to doc name lookup.\r\n            this.#collectionToDocName.set(docName, docName);\r\n            this.#collectionToDocName.set(collectionName, docName);\r\n\r\n            let collection = null;\r\n\r\n            try\r\n            {\r\n               // Update any existing stores with the actual collection.\r\n               collection = doc.getEmbeddedCollection(docName);\r\n            }\r\n            catch (err)\r\n            {\r\n               console.warn(`EmbeddedStoreManager.handleDocUpdate error: No valid embedded collection for: ${docName}`);\r\n            }\r\n\r\n            // Update EmbeddedData for new collection.\r\n            const embeddedData = this.#name.get(docName);\r\n            if (embeddedData)\r\n            {\r\n               embeddedData.collection = collection;\r\n\r\n               // Update all existing stores.\r\n               for (const store of embeddedData.stores.values()) { store.setData(collection, true); }\r\n            }\r\n         }\r\n\r\n         // Update all existing embedded collections with null data that aren't processed above.\r\n         for (const embeddedName of existingEmbeddedNames)\r\n         {\r\n            const embeddedData = this.#name.get(embeddedName);\r\n            if (embeddedData)\r\n            {\r\n               embeddedData.collection = null;\r\n\r\n               for (const store of embeddedData.stores.values()) { store.setData(null, true); }\r\n            }\r\n         }\r\n      }\r\n      else // Reset all embedded reducer stores to null data.\r\n      {\r\n         this.#collectionToDocName.clear();\r\n         this.#embeddedNames.clear();\r\n\r\n         for (const embeddedData of this.#name.values())\r\n         {\r\n            embeddedData.collection = null;\r\n\r\n            for (const store of embeddedData.stores.values()) { store.setData(null, true); }\r\n         }\r\n      }\r\n   }\r\n\r\n   /**\r\n    * Handles updates to embedded stores parsing the render context for valid embedded store types.\r\n    *\r\n    * On create, delete, update parse the type being modified then force index updates for the embedded type.\r\n    *\r\n    * @param {string}   renderContext - render context update from document.\r\n    */\r\n   handleUpdate(renderContext)\r\n   {\r\n      if (!this.#embeddedNames.has(renderContext)) { return; }\r\n\r\n      const match = EmbeddedStoreManager.#renderContextRegex.exec(renderContext);\r\n\r\n      if (match)\r\n      {\r\n         const docOrCollectionName = match.groups.name;\r\n         const embeddedName = this.#collectionToDocName.get(docOrCollectionName);\r\n\r\n         if (!this.#name.has(embeddedName)) { return; }\r\n\r\n         for (const store of this.#name.get(embeddedName).stores.values())\r\n         {\r\n            store.index.update(true);\r\n         }\r\n      }\r\n   }\r\n}\r\n\r\n/**\r\n * @template T\r\n *\r\n * @typedef {object} EmbeddedCollectionData\r\n *\r\n * @property {foundry.abstract.Collection} collection -\r\n *\r\n * @property {Map<string, import('#runtime/svelte/store/reducer').DynMapReducer<string, T>>} stores -\r\n */\r\n","import { Hashing }                  from '#runtime/util';\r\n\r\nimport {\r\n   isObject,\r\n   isPlainObject }                  from '#runtime/util/object';\r\n\r\nimport { EmbeddedStoreManager }     from './EmbeddedStoreManager.js';\r\n\r\n/**\r\n * @template [T=globalThis.foundry.abstract.Document]\r\n *\r\n * Provides a wrapper implementing the Svelte store / subscriber protocol around any Document / ClientMixinDocument.\r\n * This makes documents reactive in a Svelte component, but otherwise provides subscriber functionality external to\r\n * Svelte.\r\n */\r\nexport class TJSDocument\r\n{\r\n   /**\r\n    * @type {T[]}\r\n    */\r\n   #document = [void 0];\r\n\r\n   /**\r\n    * @type {EmbeddedStoreManager}\r\n    */\r\n   #embeddedStoreManager;\r\n\r\n   /**\r\n    * @type {import('./types').EmbeddedAPI}\r\n    */\r\n   #embeddedAPI;\r\n\r\n   /**\r\n    * @type {string}\r\n    */\r\n   #uuidv4;\r\n\r\n   /**\r\n    * @type {TJSDocumentOptions}\r\n    */\r\n   #options = { delete: void 0, preDelete: void 0 };\r\n\r\n   /**\r\n    * @type {((value: T, updateOptions?: TJSDocumentUpdateOptions) => void)[]}\r\n    */\r\n   #subscriptions = [];\r\n\r\n   /**\r\n    * @type {TJSDocumentUpdateOptions}\r\n    */\r\n   #updateOptions;\r\n\r\n   /**\r\n    * @param {T | TJSDocumentOptions}  [document] - Document to wrap or TJSDocumentOptions.\r\n    *\r\n    * @param {TJSDocumentOptions}      [options] - TJSDocument options.\r\n    */\r\n   constructor(document, options = {})\r\n   {\r\n      this.#uuidv4 = `tjs-document-${Hashing.uuidv4()}`;\r\n\r\n      if (isPlainObject(document)) // Handle case when only options are passed into ctor.\r\n      {\r\n         this.setOptions(document);\r\n      }\r\n      else\r\n      {\r\n         this.setOptions(options);\r\n         this.set(document);\r\n      }\r\n   }\r\n\r\n   /**\r\n    * @returns {import('./types').EmbeddedAPI} Embedded store manager.\r\n    */\r\n   get embedded()\r\n   {\r\n      if (!this.#embeddedAPI)\r\n      {\r\n         this.#embeddedStoreManager = new EmbeddedStoreManager(this.#document);\r\n\r\n         /** @type {import('./types').EmbeddedAPI} */\r\n         this.#embeddedAPI = {\r\n            create: (doc, options) => this.#embeddedStoreManager.create(doc, options),\r\n            destroy: (doc, storeName) => this.#embeddedStoreManager.destroy(doc, storeName),\r\n            get: (doc, storeName) => this.#embeddedStoreManager.get(doc, storeName)\r\n         };\r\n      }\r\n\r\n      return this.#embeddedAPI;\r\n   }\r\n\r\n   /**\r\n    * Returns the options passed on last update.\r\n    *\r\n    * @returns {TJSDocumentUpdateOptions} Last update options.\r\n    */\r\n   get updateOptions() { return this.#updateOptions ?? {}; }\r\n\r\n   /**\r\n    * Returns the UUID assigned to this store.\r\n    *\r\n    * @returns {string} UUID\r\n    */\r\n   get uuidv4() { return this.#uuidv4; }\r\n\r\n   /**\r\n    * Handles cleanup when the document is deleted. Invoking any optional delete function set in the constructor.\r\n    *\r\n    * @returns {Promise<void>}\r\n    */\r\n   async #deleted()\r\n   {\r\n      const doc = this.#document[0];\r\n\r\n      // Check to see if the document is still in the associated collection to determine if actually deleted.\r\n      if (doc instanceof globalThis.foundry.abstract.Document && !doc?.collection?.has(doc.id))\r\n      {\r\n         delete doc?.apps[this.#uuidv4];\r\n         this.#setDocument(void 0);\r\n\r\n         if (typeof this.#options.preDelete === 'function')\r\n         {\r\n            await this.#options.preDelete(doc);\r\n         }\r\n\r\n         this.#updateSubscribers(false, { action: 'delete', data: void 0 });\r\n\r\n         if (typeof this.#options.delete === 'function')\r\n         {\r\n            await this.#options.delete(doc);\r\n         }\r\n\r\n         this.#updateOptions = void 0;\r\n      }\r\n   }\r\n\r\n   /**\r\n    * Completely removes all internal subscribers, any optional delete callback, and unregisters from the\r\n    * ClientDocumentMixin `apps` tracking object.\r\n    */\r\n   destroy()\r\n   {\r\n      const doc = this.#document[0];\r\n\r\n      if (this.#embeddedStoreManager)\r\n      {\r\n         this.#embeddedStoreManager.destroy();\r\n         this.#embeddedStoreManager = void 0;\r\n         this.#embeddedAPI = void 0;\r\n      }\r\n\r\n      if (doc instanceof globalThis.foundry.abstract.Document)\r\n      {\r\n         delete doc?.apps[this.#uuidv4];\r\n         this.#setDocument(void 0);\r\n      }\r\n\r\n      this.#options.delete = void 0;\r\n      this.#subscriptions.length = 0;\r\n   }\r\n\r\n   /**\r\n    * @param {boolean}  [force] - unused - signature from Foundry render function.\r\n    *\r\n    * @param {object}   [options] - Options from render call; will have document update context.\r\n    */\r\n   #updateSubscribers(force = false, options = {}) // eslint-disable-line no-unused-vars\r\n   {\r\n      this.#updateOptions = options;\r\n\r\n      const doc = this.#document[0];\r\n\r\n      for (let cntr = 0; cntr < this.#subscriptions.length; cntr++) { this.#subscriptions[cntr](doc, options); }\r\n\r\n      if (this.#embeddedStoreManager)\r\n      {\r\n         this.#embeddedStoreManager.handleUpdate(options.renderContext);\r\n      }\r\n   }\r\n\r\n   /**\r\n    * @returns {T} Current document\r\n    */\r\n   get() { return this.#document[0]; }\r\n\r\n   /**\r\n    * Attempts to create a Foundry UUID from standard drop data. This may not work for all systems.\r\n    *\r\n    * @param {object}   data - Drop transfer data.\r\n    *\r\n    * @param {object}   [opts] - Optional parameters.\r\n    *\r\n    * @param {boolean}  [opts.actor=true] - Accept actor owned documents.\r\n    *\r\n    * @param {boolean}  [opts.compendium=true] - Accept compendium documents.\r\n    *\r\n    * @param {boolean}  [opts.world=true] - Accept world documents.\r\n    *\r\n    * @param {string[]|undefined}   [opts.types] - Require the `data.type` to match entry in `types`.\r\n    *\r\n    * @returns {string|undefined} Foundry UUID for drop data.\r\n    */\r\n   static getUUIDFromDataTransfer(data, { actor = true, compendium = true, world = true, types = void 0 } = {})\r\n   {\r\n      if (!isObject(data)) { return void 0; }\r\n      if (Array.isArray(types) && !types.includes(data.type)) { return void 0; }\r\n\r\n      let uuid = void 0;\r\n\r\n      if (typeof data.uuid === 'string') // v10 and above provides a full UUID.\r\n      {\r\n         const isCompendium = data.uuid.startsWith('Compendium');\r\n\r\n         if (isCompendium && compendium)\r\n         {\r\n            uuid = data.uuid;\r\n         }\r\n         else if (world)\r\n         {\r\n            uuid = data.uuid;\r\n         }\r\n      }\r\n      else // v9 and below parsing.\r\n      {\r\n         if (actor && world && data.actorId && data.type)\r\n         {\r\n            uuid = `Actor.${data.actorId}.${data.type}.${data.data._id}`;\r\n         }\r\n         else if (typeof data.id === 'string') // v9 and below uses `id`\r\n         {\r\n            if (compendium && typeof data.pack === 'string')\r\n            {\r\n               uuid = `Compendium.${data.pack}.${data.id}`;\r\n            }\r\n            else if (world)\r\n            {\r\n               uuid = `${data.type}.${data.id}`;\r\n            }\r\n         }\r\n      }\r\n\r\n      return uuid;\r\n   }\r\n\r\n\r\n   /**\r\n    * @param {T | undefined}  document - New document to set.\r\n    *\r\n    * @param {TJSDocumentUpdateOptions}   [options] - New document update options to set.\r\n    */\r\n   set(document, options = {})\r\n   {\r\n      if (this.#document[0])\r\n      {\r\n         delete this.#document[0].apps[this.#uuidv4];\r\n      }\r\n\r\n      if (document !== void 0 && !(document instanceof globalThis.foundry.abstract.Document))\r\n      {\r\n         throw new TypeError(`TJSDocument set error: 'document' is not a valid Document or undefined.`);\r\n      }\r\n\r\n      if (!isObject(options))\r\n      {\r\n         throw new TypeError(`TJSDocument set error: 'options' is not an object.`);\r\n      }\r\n\r\n      if (document instanceof globalThis.foundry.abstract.Document)\r\n      {\r\n         document.apps[this.#uuidv4] = {\r\n            close: this.#deleted.bind(this),\r\n            render: this.#updateSubscribers.bind(this)\r\n         };\r\n      }\r\n\r\n      this.#setDocument(document);\r\n      this.#updateOptions = options;\r\n      this.#updateSubscribers();\r\n   }\r\n\r\n   /**\r\n    *\r\n    * @param {T | undefined} doc -\r\n    */\r\n   #setDocument(doc)\r\n   {\r\n      this.#document[0] = doc;\r\n\r\n      if (this.#embeddedStoreManager) { this.#embeddedStoreManager.handleDocChange(); }\r\n   }\r\n\r\n   /**\r\n    * Potentially sets new document from data transfer object.\r\n    *\r\n    * @param {object}   data - Document transfer data.\r\n    *\r\n    * @param {{ actor?: boolean, compendium?: boolean, world?: boolean, types?: string[] } & TJSDocumentOptions}   [options] - Optional\r\n    *        parameters.\r\n    *\r\n    * @returns {Promise<boolean>} Returns true if new document set from data transfer blob.\r\n    */\r\n   async setFromDataTransfer(data, options)\r\n   {\r\n      return this.setFromUUID(TJSDocument.getUUIDFromDataTransfer(data, options), options);\r\n   }\r\n\r\n   /**\r\n    * Sets the document by Foundry UUID performing a lookup and setting the document if found.\r\n    *\r\n    * @param {string}   uuid - A Foundry UUID to lookup.\r\n    *\r\n    * @param {TJSDocumentOptions}   [options] - New document update options to set.\r\n    *\r\n    * @returns {Promise<boolean>} True if successfully set document from UUID.\r\n    */\r\n   async setFromUUID(uuid, options = {})\r\n   {\r\n      if (typeof uuid !== 'string' || uuid.length === 0) { return false; }\r\n\r\n      try\r\n      {\r\n         const doc = await globalThis.fromUuid(uuid);\r\n\r\n         if (doc)\r\n         {\r\n            this.set(doc, options);\r\n            return true;\r\n         }\r\n      }\r\n      catch (err) { /**/ }\r\n\r\n      return false;\r\n   }\r\n\r\n   /**\r\n    * Sets options for this document wrapper / store.\r\n    *\r\n    * @param {TJSDocumentOptions}   options - Options for TJSDocument.\r\n    */\r\n   setOptions(options)\r\n   {\r\n      if (!isObject(options))\r\n      {\r\n         throw new TypeError(`TJSDocument error: 'options' is not a plain object.`);\r\n      }\r\n\r\n      // Verify valid values -------------\r\n\r\n      if (options.delete !== void 0 && typeof options.delete !== 'function')\r\n      {\r\n         throw new TypeError(`TJSDocument error: 'delete' attribute in options is not a function.`);\r\n      }\r\n\r\n      if (options.preDelete !== void 0 && typeof options.preDelete !== 'function')\r\n      {\r\n         throw new TypeError(`TJSDocument error: 'preDelete' attribute in options is not a function.`);\r\n      }\r\n\r\n      // Set any valid values -------------\r\n\r\n      if (options.delete === void 0 || typeof options.delete === 'function')\r\n      {\r\n         this.#options.delete = options.delete;\r\n      }\r\n\r\n      if (options.preDelete === void 0 || typeof options.preDelete === 'function')\r\n      {\r\n         this.#options.preDelete = options.preDelete;\r\n      }\r\n   }\r\n\r\n   /**\r\n    * @param {(value: T, updateOptions?: TJSDocumentUpdateOptions) => void} handler - Callback function that is\r\n    * invoked on update / changes.\r\n    *\r\n    * @returns {import('svelte/store').Unsubscriber} Unsubscribe function.\r\n    */\r\n   subscribe(handler)\r\n   {\r\n      this.#subscriptions.push(handler);           // Add handler to the array of subscribers.\r\n\r\n      const updateOptions = { action: 'subscribe', data: void 0 };\r\n\r\n      handler(this.#document[0], updateOptions);      // Call handler with current value and update options.\r\n\r\n      // Return unsubscribe function.\r\n      return () =>\r\n      {\r\n         const index = this.#subscriptions.findIndex((sub) => sub === handler);\r\n         if (index >= 0) { this.#subscriptions.splice(index, 1); }\r\n      };\r\n   }\r\n}\r\n\r\n/**\r\n * @typedef {object} TJSDocumentOptions\r\n *\r\n * @property {(doc: globalThis.foundry.abstract.Document) => void} [delete] Optional post delete function to invoke when\r\n * document is deleted _after_ subscribers have been notified.\r\n *\r\n * @property {(doc: globalThis.foundry.abstract.Document) => void} [preDelete] Optional pre delete function to invoke\r\n * when document is deleted _before_ subscribers are notified.\r\n */\r\n\r\n/**\r\n * @typedef TJSDocumentUpdateOptions Provides data regarding the latest document change.\r\n *\r\n * @property {string}   [action] The update action. Useful for filtering.\r\n *\r\n * @property {string}   [renderContext] The update action. Useful for filtering.\r\n *\r\n * @property {object[]|string[]} [data] Foundry data associated with document changes.\r\n */\r\n","import { Hashing }   from '#runtime/util';\r\n\r\nimport {\r\n   isObject,\r\n   isPlainObject }   from '#runtime/util/object';\r\n\r\n/**\r\n * Provides a wrapper implementing the Svelte store / subscriber protocol around any DocumentCollection. This makes\r\n * document collections reactive in a Svelte component, but otherwise provides subscriber functionality external to\r\n * Svelte.\r\n *\r\n * @template [T=DocumentCollection]\r\n */\r\nexport class TJSDocumentCollection\r\n{\r\n   #collection;\r\n   #collectionCallback;\r\n   #uuid;\r\n\r\n   /**\r\n    * @type {TJSDocumentCollectionOptions}\r\n    */\r\n   #options = { delete: void 0, preDelete: void 0 };\r\n\r\n   /**\r\n    * @type {((value: T, updateOptions?: TJSDocumentCollectionUpdateOptions<T>) => void)[]}\r\n    */\r\n   #subscriptions = [];\r\n\r\n   /**\r\n    * @type {TJSDocumentCollectionUpdateOptions<T>}\r\n    */\r\n   #updateOptions;\r\n\r\n   /**\r\n    * @param {T | TJSDocumentCollectionOptions}   [collection] - Collection to wrap or TJSDocumentCollectionOptions.\r\n    *\r\n    * @param {TJSDocumentCollectionOptions}     [options] - TJSDocumentCollection options.\r\n    */\r\n   constructor(collection, options = {})\r\n   {\r\n      this.#uuid = `tjs-collection-${Hashing.uuidv4()}`;\r\n\r\n      if (isPlainObject(collection)) // Handle case when only options are passed into ctor.\r\n      {\r\n         this.setOptions(collection);\r\n      }\r\n      else\r\n      {\r\n         this.setOptions(options);\r\n         this.set(collection);\r\n      }\r\n   }\r\n\r\n   /**\r\n    * Returns the options passed on last update.\r\n    *\r\n    * @returns {TJSDocumentCollectionUpdateOptions<T>} Last update options.\r\n    */\r\n   get updateOptions() { return this.#updateOptions ?? {}; }\r\n\r\n   /**\r\n    * Returns the UUID assigned to this store.\r\n    *\r\n    * @returns {string} UUID\r\n    */\r\n   get uuid() { return this.#uuid; }\r\n\r\n   /**\r\n    * Handles cleanup when the collection is deleted. Invoking any optional delete function set in the constructor.\r\n    *\r\n    * @returns {Promise<void>}\r\n    */\r\n   async #deleted()\r\n   {\r\n      const collection = this.#collection;\r\n\r\n      if (collection instanceof DocumentCollection)\r\n      {\r\n         const index = collection?.apps?.findIndex((sub) => sub === this.#collectionCallback);\r\n         if (index >= 0) { collection?.apps?.splice(index, 1); }\r\n\r\n         this.#collection = void 0;\r\n      }\r\n\r\n      if (typeof this.#options.preDelete === 'function')\r\n      {\r\n         await this.#options.preDelete(collection);\r\n      }\r\n\r\n      this.#notify(false, { action: 'delete', documentType: collection.documentName, documents: [], data: [] });\r\n\r\n      if (typeof this.#options.delete === 'function')\r\n      {\r\n         await this.#options.delete(collection);\r\n      }\r\n\r\n      this.#updateOptions = void 0;\r\n   }\r\n\r\n   /**\r\n    * Completely removes all internal subscribers, any optional delete callback, and unregisters from the\r\n    * DocumentCollection `apps` tracking array.\r\n    */\r\n   destroy()\r\n   {\r\n      const collection = this.#collection;\r\n\r\n      if (collection instanceof DocumentCollection)\r\n      {\r\n         const index = collection?.apps?.findIndex((sub) => sub === this.#collectionCallback);\r\n         if (index >= 0) { collection?.apps?.splice(index, 1); }\r\n\r\n         this.#collection = void 0;\r\n      }\r\n\r\n      this.#options.delete = void 0;\r\n      this.#subscriptions.length = 0;\r\n   }\r\n\r\n   /**\r\n    * @param {boolean}  [force] - unused - signature from Foundry render function.\r\n    *\r\n    * @param {object}   [options] - Options from render call; will have collection update context.\r\n    */\r\n   #notify(force = false, options = {}) // eslint-disable-line no-unused-vars\r\n   {\r\n      this.#updateOptions = options;\r\n\r\n      // Subscriptions are stored locally as on the browser Babel is still used for private class fields / Babel\r\n      // support until 2023. IE not doing this will require several extra method calls otherwise.\r\n      const subscriptions = this.#subscriptions;\r\n      const collection = this.#collection;\r\n\r\n      for (let cntr = 0; cntr < subscriptions.length; cntr++) { subscriptions[cntr](collection, options); }\r\n   }\r\n\r\n   /**\r\n    * @returns {T} Current collection\r\n    */\r\n   get() { return this.#collection; }\r\n\r\n   /**\r\n    * @param {T | undefined}  collection - New collection to set.\r\n    *\r\n    * @param {object}         [options] - New collection update options to set.\r\n    */\r\n   set(collection, options = {})\r\n   {\r\n      if (this.#collection)\r\n      {\r\n         const index = this.#collection.apps.findIndex((sub) => sub === this.#collectionCallback);\r\n         if (index >= 0) { this.#collection.apps.splice(index, 1); }\r\n\r\n         this.#collectionCallback = void 0;\r\n      }\r\n\r\n      if (collection !== void 0 && !(collection instanceof DocumentCollection))\r\n      {\r\n         throw new TypeError(\r\n          `TJSDocumentCollection set error: 'collection' is not a valid DocumentCollection or undefined.`);\r\n      }\r\n\r\n      if (!isObject(options))\r\n      {\r\n         throw new TypeError(`TJSDocument set error: 'options' is not an object.`);\r\n      }\r\n\r\n      if (collection instanceof DocumentCollection)\r\n      {\r\n         this.#collectionCallback = {\r\n            close: this.#deleted.bind(this),\r\n            render: this.#notify.bind(this)\r\n         };\r\n\r\n         collection?.apps?.push(this.#collectionCallback);\r\n      }\r\n\r\n      this.#collection = collection;\r\n      this.#updateOptions = options;\r\n      this.#notify();\r\n   }\r\n\r\n   /**\r\n    * Sets options for this collection wrapper / store.\r\n    *\r\n    * @param {TJSDocumentCollectionOptions}   options - Options for TJSDocumentCollection.\r\n    */\r\n   setOptions(options)\r\n   {\r\n      if (!isObject(options))\r\n      {\r\n         throw new TypeError(`TJSDocumentCollection error: 'options' is not an object.`);\r\n      }\r\n\r\n      // Verify valid values -------------\r\n\r\n      if (options.delete !== void 0 && typeof options.delete !== 'function')\r\n      {\r\n         throw new TypeError(`TJSDocumentCollection error: 'delete' attribute in options is not a function.`);\r\n      }\r\n\r\n      if (options.preDelete !== void 0 && typeof options.preDelete !== 'function')\r\n      {\r\n         throw new TypeError(`TJSDocumentCollection error: 'preDelete' attribute in options is not a function.`);\r\n      }\r\n\r\n      // Set any valid values -------------\r\n\r\n      if (options.delete === void 0 || typeof options.delete === 'function')\r\n      {\r\n         this.#options.delete = options.delete;\r\n      }\r\n\r\n      if (options.preDelete === void 0 || typeof options.preDelete === 'function')\r\n      {\r\n         this.#options.preDelete = options.preDelete;\r\n      }\r\n   }\r\n\r\n   /**\r\n    * @param {(value: T, updateOptions?: TJSDocumentCollectionUpdateOptions<T>) => void} handler - Callback function\r\n    * that is invoked on update / changes.\r\n    *\r\n    * @returns {import('svelte/store').Unsubscriber} Unsubscribe function.\r\n    */\r\n   subscribe(handler)\r\n   {\r\n      this.#subscriptions.push(handler);              // Add handler to the array of subscribers.\r\n\r\n      const collection = this.#collection;\r\n\r\n      const documentType = collection?.documentName ?? void 0;\r\n\r\n      const updateOptions = { action: 'subscribe', documentType, documents: [], data: [] };\r\n\r\n      handler(collection, updateOptions);  // Call handler with current value and update options.\r\n\r\n      // Return unsubscribe function.\r\n      return () =>\r\n      {\r\n         const index = this.#subscriptions.findIndex((sub) => sub === handler);\r\n         if (index >= 0) { this.#subscriptions.splice(index, 1); }\r\n      };\r\n   }\r\n}\r\n\r\n/**\r\n * @typedef TJSDocumentCollectionOptions\r\n *\r\n * @property {(collection: DocumentCollection) => void} [delete] Optional post delete function\r\n *           to invoke when document is deleted _after_ subscribers have been notified.\r\n *\r\n * @property {(collection: DocumentCollection) => void} [preDelete] Optional pre delete function to\r\n *           invoke when document is deleted _before_ subscribers are notified.\r\n */\r\n\r\n/**\r\n * @template T\r\n * @typedef TJSDocumentCollectionUpdateOptions Provides data regarding the latest collection change.\r\n *\r\n * @property {string}   action The update action. Useful for filtering.\r\n *\r\n * @property {string}   documentType The document name.\r\n *\r\n * @property {T[]}      documents associated documents that changed.\r\n *\r\n * @property {object[]|string[]} data Foundry data associated with document changes.\r\n */\r\n","import { writable }           from '#svelte/store';\r\n\r\nimport {\r\n   ripple,\r\n   rippleFocus }              from '#runtime/svelte/action/animate';\r\n\r\nimport { isSvelteComponent }  from '#runtime/svelte/util';\r\nimport { isObject }           from '#runtime/util/object';\r\n\r\nimport { TJSDialog }          from '#svelte-fvtt/application';\r\nimport { localize }           from '#svelte-fvtt/helper';\r\n\r\n/**\r\n * Controls preparation and processing of registered game settings w/ TJSGameSettings. Game settings are parsed\r\n * for UI display by TJSSettingsEdit. The store `showSettings` is utilized in TJSSettingsSwap component to provide\r\n * an easy way to flip between settings component or any main slotted component.\r\n */\r\nexport class UIControl\r\n{\r\n   /** @type {import('./types').TJSSettingsCustomSection[]} */\r\n   #sections = [];\r\n\r\n   /** @type {import('./').TJSGameSettings} */\r\n   #settings;\r\n\r\n   /** @type {boolean} */\r\n   #showSettings = false;\r\n\r\n   /** @type {Function} */\r\n   #showSettingsSet;\r\n\r\n   /** @type {{showSettings: import('svelte/store').Readable<boolean>}} */\r\n   #stores;\r\n\r\n   /**\r\n    * @param {import('./').TJSGameSettings}   settings -\r\n    */\r\n   constructor(settings)\r\n   {\r\n      this.#settings = settings;\r\n\r\n      const showSettings = writable(this.#showSettings);\r\n      this.#showSettingsSet = showSettings.set;\r\n\r\n      this.#stores = {\r\n         showSettings: { subscribe: showSettings.subscribe }\r\n      };\r\n\r\n      Object.freeze(this.#stores);\r\n   }\r\n\r\n   /**\r\n    * @returns {boolean} Current `showSettings` state.\r\n    */\r\n   get showSettings()\r\n   {\r\n      return this.#showSettings;\r\n   }\r\n\r\n   /**\r\n    * @returns {{ showSettings: import('svelte/store').Readable<boolean> }} Returns the managed stores.\r\n    */\r\n   get stores()\r\n   {\r\n      return this.#stores;\r\n   }\r\n\r\n   /**\r\n    * Sets current `showSettings` state.\r\n    *\r\n    * @param {boolean}  showSettings - New `showSettings` state.\r\n    */\r\n   set showSettings(showSettings)\r\n   {\r\n      this.#showSettings = showSettings;\r\n      this.#showSettingsSet(this.#showSettings);\r\n   }\r\n\r\n   /**\r\n    * Adds a custom section / folder defined by the provided TJSSettingsCustomSection options object.\r\n    *\r\n    * @param {import('./types').TJSSettingsCustomSection} options - The configuration object for the custom section.\r\n    */\r\n   addSection(options)\r\n   {\r\n      if (!isObject(options)) { throw new TypeError(`'options' is not an object.`); }\r\n\r\n      if (!isSvelteComponent(options.class)) { throw new TypeError(`'options.class' is not a Svelte component.`); }\r\n\r\n      if (options.props !== void 0 && !isObject(options.props))\r\n      {\r\n         throw new TypeError(`'options.props' is not an object.`);\r\n      }\r\n\r\n      if (options.folder !== void 0)\r\n      {\r\n         const folder = options.folder;\r\n\r\n         if (typeof folder !== 'string' && !isObject(folder))\r\n         {\r\n            throw new TypeError(`'options.folder' is not a string or object.`);\r\n         }\r\n\r\n         if (isObject(folder))\r\n         {\r\n            if (typeof folder.label !== 'string') { throw new TypeError(`'options.folder.label' is not a string.`); }\r\n\r\n            // Validate custom component set as folder summary end.\r\n            if (folder.summaryEnd !== void 0)\r\n            {\r\n               if (!isObject(folder.summaryEnd))\r\n               {\r\n                  throw new TypeError(`'options.folder.summaryEnd' is not an object.`);\r\n               }\r\n\r\n               if (!isSvelteComponent(folder.summaryEnd.class))\r\n               {\r\n                  throw new TypeError(`'options.folder.summaryEnd.class' is not a Svelte component.`);\r\n               }\r\n\r\n               if (folder.summaryEnd.props !== void 0 && !isObject(folder.summaryEnd.props))\r\n               {\r\n                  throw new TypeError(`'options.folder.summaryEnd.props' is not an object.`);\r\n               }\r\n            }\r\n\r\n            // Validate that folder inline styles is an object.\r\n            if (folder.styles !== void 0 && !isObject(folder.styles))\r\n            {\r\n               throw new TypeError(`'options.folder.styles' is not an object.`);\r\n            }\r\n         }\r\n      }\r\n\r\n      // Validate that section inline styles is an object.\r\n      if (options.styles !== void 0 && !isObject(options.styles))\r\n      {\r\n         throw new TypeError(`'options.styles' is not an object.`);\r\n      }\r\n\r\n      this.#sections.push(options);\r\n   }\r\n\r\n   /**\r\n    * Creates the UISettingsData object by parsing stored settings in\r\n    *\r\n    * @param {import('./types').TJSSettingsCreateOptions} [options] - Optional parameters.\r\n    *\r\n    * @returns {import('./types').TJSSettingsUIData} Parsed UI settings data.\r\n    */\r\n   create(options)\r\n   {\r\n      const settings = this.#parseSettings(options);\r\n      const destroy = () => this.#destroy(settings);\r\n\r\n      return {\r\n         ...settings,\r\n         destroy\r\n      };\r\n   }\r\n\r\n   /**\r\n    * Destroy callback. Checks for any `requiresReload` parameter in each setting comparing against initial value\r\n    * when `settings` is created and current value. If there is a difference then show a modal dialog asking the user\r\n    * if they want to reload for those settings to take effect.\r\n    *\r\n    * @param {import('./types').TJSSettingsUIData}   settings - The UI data object initiated w/ `create`.\r\n    */\r\n   #destroy(settings)\r\n   {\r\n      let requiresClientReload = false;\r\n      let requiresWorldReload = false;\r\n\r\n      if (Array.isArray(settings.topLevel))\r\n      {\r\n         for (const setting of settings.topLevel)\r\n         {\r\n            const current = globalThis.game.settings.get(setting.namespace, setting.key);\r\n            if (current === setting.initialValue) { continue; }\r\n\r\n            requiresClientReload ||= (setting.scope === 'client') && setting.requiresReload;\r\n            requiresWorldReload ||= (setting.scope === 'world') && setting.requiresReload;\r\n         }\r\n      }\r\n\r\n      if (Array.isArray(settings.folders))\r\n      {\r\n         for (const folder of settings.folders)\r\n         {\r\n            if (Array.isArray(folder.settings))\r\n            {\r\n               for (const setting of folder.settings)\r\n               {\r\n                  const current = globalThis.game.settings.get(setting.namespace, setting.key);\r\n                  if (current === setting.initialValue) { continue; }\r\n\r\n                  requiresClientReload ||= (setting.scope === 'client') && setting.requiresReload;\r\n                  requiresWorldReload ||= (setting.scope === 'world') && setting.requiresReload;\r\n               }\r\n            }\r\n         }\r\n      }\r\n\r\n      if (requiresClientReload || requiresWorldReload) { this.#reloadConfirm({ world: requiresWorldReload }); }\r\n\r\n      this.#showSettings = false;\r\n      this.#showSettingsSet(this.#showSettings);\r\n   }\r\n\r\n   /**\r\n    * @param {import('./types').TJSSettingsCreateOptions} [options] - Optional parameters.\r\n    *\r\n    * @returns {import('./types').TJSSettingsUIData} Parsed UI settings data.\r\n    */\r\n   #parseSettings({ efx = 'ripple', storage } = {})\r\n   {\r\n      const namespace = this.#settings.namespace;\r\n\r\n      if (storage && typeof namespace !== 'string')\r\n      {\r\n         console.warn(\r\n          `TJSGameSettings warning: 'options.storage' defined, but 'namespace' not defined in TJSGameSettings.`);\r\n      }\r\n\r\n      const hasStorage = storage && typeof namespace === 'string';\r\n\r\n      const uiSettings = [];\r\n\r\n      const canConfigure = globalThis.game.user.can('SETTINGS_MODIFY');\r\n\r\n      for (const setting of this.#settings)\r\n      {\r\n         if (!setting.config || (!canConfigure && (setting.scope !== 'client'))) { continue; }\r\n\r\n         let options;\r\n\r\n         if (isObject(setting.choices))\r\n         {\r\n            options = Object.entries(setting.choices).map((entry) => ({ value: entry[0], label: localize(entry[1]) }));\r\n         }\r\n\r\n         let range;\r\n         if (isObject(setting.range))\r\n         {\r\n            range = {};\r\n\r\n            // TODO Better error messages.\r\n            // Verify range data.\r\n            if (typeof setting.range.min !== 'number') { throw new TypeError(`Setting 'range.min' is not a number.`); }\r\n            if (typeof setting.range.max !== 'number') { throw new TypeError(`Setting 'range.max' is not a number.`); }\r\n            if (setting.range.step !== void 0 && typeof setting.range.step !== 'number')\r\n            {\r\n               throw new TypeError(`Setting 'range.step' is not a number.`);\r\n            }\r\n\r\n            range.min = setting.range.min;\r\n            range.max = setting.range.max;\r\n            range.step = setting.range.step ? setting.range.step : 1;\r\n         }\r\n\r\n         // Default to `String` if no type is provided.\r\n         const type = setting.type instanceof Function ? setting.type.name : 'String';\r\n\r\n         // Only configure file picker if setting type is a string.\r\n         let filePicker;\r\n         if (type === 'String')\r\n         {\r\n            filePicker = setting.filePicker === true ? 'any' : setting.filePicker;\r\n         }\r\n\r\n         let buttonData;\r\n         if (filePicker)\r\n         {\r\n            buttonData = {\r\n               icon: 'fas fa-file-import fa-fw',\r\n               efx: efx === 'ripple' ? ripple() : void 0,\r\n               title: 'FILES.BrowseTooltip',\r\n               styles: { 'margin-left': '0.25em' }\r\n            };\r\n         }\r\n\r\n         const store = this.#settings.getStore(setting.key);\r\n\r\n         let selectData;\r\n\r\n         /** @type {string} */\r\n         let componentType = 'text';\r\n\r\n         if (setting.type === Boolean)\r\n         {\r\n            componentType = 'checkbox';\r\n         }\r\n         else if (options !== void 0)\r\n         {\r\n            componentType = 'select';\r\n\r\n            selectData = {\r\n               store,\r\n               efx: efx === 'ripple' ? rippleFocus() : void 0,\r\n               type: componentType,\r\n               options\r\n            };\r\n         }\r\n         else if (setting.type === Number)\r\n         {\r\n            componentType = isObject(setting.range) ? 'range' : 'number';\r\n         }\r\n\r\n         let inputData;\r\n         if (componentType === 'text' || componentType === 'number')\r\n         {\r\n            inputData = {\r\n               store,\r\n               efx: efx === 'ripple' ? rippleFocus() : void 0,\r\n               type: componentType\r\n            };\r\n         }\r\n\r\n         uiSettings.push({\r\n            id: `${setting.namespace}.${setting.key}`,\r\n            namespace: setting.namespace,\r\n            folder: setting.folder,\r\n            key: setting.key,\r\n            name: localize(setting.name),\r\n            hint: localize(setting.hint),\r\n            type,\r\n            componentType,\r\n            filePicker,\r\n            range,\r\n            store,\r\n            initialValue: globalThis.game.settings.get(setting.namespace, setting.key),\r\n            scope: setting.scope,\r\n            requiresReload: typeof setting.requiresReload === 'boolean' ? setting.requiresReload : false,\r\n            buttonData,\r\n            inputData,\r\n            selectData\r\n         });\r\n      }\r\n\r\n      // If storage is available then create a key otherwise create a dummy store, so `applyScrolltop` works.\r\n      const storeScrollbar = hasStorage ? storage.getStore(`${namespace}-settings-scrollbar`) : writable(0);\r\n\r\n      const topLevel = [];\r\n\r\n      const folderData = {};\r\n\r\n      // Sort into folders\r\n      for (const setting of uiSettings)\r\n      {\r\n         if (typeof setting.folder === 'string')\r\n         {\r\n            const folderName = localize(setting.folder);\r\n\r\n            // Create folder array if one doesn't exist already.\r\n            if (!Array.isArray(folderData[folderName])) { folderData[folderName] = []; }\r\n            folderData[folderName].push(setting);\r\n         }\r\n         else // Add to 'toplevel' settings\r\n         {\r\n            topLevel.push(setting);\r\n         }\r\n      }\r\n\r\n      // Convert folderData object to array.\r\n      const folders = Object.entries(folderData).map((entry) =>\r\n      {\r\n         return {\r\n            label: entry[0],\r\n            store: hasStorage ? storage.getStore(`${namespace}-settings-folder-${entry[0]}`) : void 0,\r\n            settings: entry[1],\r\n         };\r\n      });\r\n\r\n      const sections = [];\r\n\r\n      // Parse custom component sections\r\n      for (const section of this.#sections)\r\n      {\r\n         const parsedSection = {\r\n            class: section.class,\r\n            props: section.props,\r\n            styles: section.styles\r\n         };\r\n\r\n         if (typeof section.folder === 'string')\r\n         {\r\n            const label = localize(section.folder);\r\n\r\n            parsedSection.folder = {\r\n               label,\r\n               store: hasStorage ? storage.getStore(`${namespace}-settings-folder-${label}`) : void 0\r\n            };\r\n         }\r\n         else if (isObject(section.folder))\r\n         {\r\n            const label = localize(section.folder.label);\r\n\r\n            parsedSection.folder = {\r\n               label,\r\n               store: hasStorage ? storage.getStore(`${namespace}-settings-folder-${label}`) : void 0,\r\n               summaryEnd: section.folder.summaryEnd,\r\n               styles: section.folder.styles\r\n            };\r\n         }\r\n\r\n         sections.push(parsedSection);\r\n      }\r\n\r\n      return {\r\n         storeScrollbar,\r\n         topLevel,\r\n         folders,\r\n         sections\r\n      };\r\n   }\r\n\r\n   async #reloadConfirm({ world = false } = {})\r\n   {\r\n      let title = localize('SETTINGS.ReloadPromptTitle');\r\n      let label = localize('SETTINGS.ReloadPromptBody');\r\n\r\n      // Foundry v9 doesn't have the reload lang keys, so substitute just for English translation.\r\n      // TODO: FOUNDRY_V9 - remove when support for v9 is dropped.\r\n      title = title !== 'SETTINGS.ReloadPromptTitle' ? title : 'Reload Application?';\r\n      label = label !== 'SETTINGS.ReloadPromptBody' ? label :\r\n       'Some of the changed settings require a reload of the application to take effect. Would you like to reload now?';\r\n\r\n      const reload = await TJSDialog.confirm({\r\n         modal: true,\r\n         draggable: false,\r\n         title,\r\n         content: `<p>${label}</p>`\r\n      });\r\n\r\n      if (!reload) { return; }\r\n\r\n      // Reload all connected clients. Note: Foundry v9 might not support this event.\r\n      if (world && globalThis.game.user.isGM) { globalThis.game.socket.emit('reload'); }\r\n\r\n      // Reload locally.\r\n      window.location.reload();\r\n   }\r\n\r\n   /**\r\n    * Convenience method to swap `showSettings`.\r\n    *\r\n    * @returns {boolean} New `showSettings` state.\r\n    */\r\n   swapShowSettings()\r\n   {\r\n      this.#showSettings = !this.#showSettings;\r\n      this.#showSettingsSet(this.#showSettings);\r\n      return this.#showSettings;\r\n   }\r\n}\r\n","import { writable }        from '#svelte/store';\r\n\r\nimport {\r\n   isIterable,\r\n   isObject }              from '#runtime/util/object';\r\n\r\nimport {\r\n   isWritableStore,\r\n   subscribeIgnoreFirst }  from '#runtime/util/store';\r\n\r\nimport { UIControl }       from './UIControl.js';\r\n\r\n/**\r\n * Registers game settings and creates a backing Svelte store for each setting. The Svelte store will update the\r\n * Foundry game settings and vice versa when changes occur to the Foundry game settings the updated data is set to the\r\n * store.\r\n *\r\n * Note: It is possible to add multiple `onChange` callbacks on registration.\r\n *\r\n * TODO: A possible future extension is to offer type checking against the setting type by creating a customized\r\n * writable store that has an overloaded `set` method to provide type checking.\r\n */\r\nexport class TJSGameSettings\r\n{\r\n   /** @type {string} */\r\n   #namespace;\r\n\r\n   /** @type {GameSettingData[]} */\r\n   #settings = [];\r\n\r\n   /**\r\n    * @type {Map<string, import('svelte/store').Writable>}\r\n    */\r\n   #stores = new Map();\r\n\r\n   /** @type {import('./types').IUIControl} */\r\n   #uiControl;\r\n\r\n   /**\r\n    * Creates the TJSGameSettings instance.\r\n    *\r\n    * @param {string}   namespace - The namespace for all settings.\r\n    */\r\n   constructor(namespace)\r\n   {\r\n      if (typeof namespace !== 'string') { throw new TypeError(`'namespace' is not a string.`); }\r\n\r\n      this.#namespace = namespace;\r\n      this.#uiControl = new UIControl(this);\r\n   }\r\n\r\n   /**\r\n    * Creates a new writable for the given key.\r\n    *\r\n    * @param {*}  initialValue - An initial value to set to new stores.\r\n    *\r\n    * @returns {import('svelte/store').Writable} The new writable.\r\n    */\r\n   static #createStore(initialValue)\r\n   {\r\n      return writable(initialValue);\r\n   }\r\n\r\n   /**\r\n    * Provides an iterator / generator to return stored settings data.\r\n    *\r\n    * @returns {IterableIterator<GameSettingData>} An iterator of all game setting data.\r\n    * @yields {GameSettingData}\r\n    */\r\n   *[Symbol.iterator]()\r\n   {\r\n      for (const setting of this.#settings)\r\n      {\r\n         yield setting;\r\n      }\r\n   }\r\n\r\n   /**\r\n    * @returns {string} Returns namespace set in constructor.\r\n    */\r\n   get namespace()\r\n   {\r\n      return this.#namespace;\r\n   }\r\n\r\n   /**\r\n    * @returns {import('./types').IUIControl} The associated UIControl.\r\n    */\r\n   get uiControl()\r\n   {\r\n      return this.#uiControl;\r\n   }\r\n\r\n   /**\r\n    * Gets a store from the `stores` Map or creates a new store for the key.\r\n    *\r\n    * @param {string}   key - Key to lookup in stores map.\r\n    *\r\n    * @param {string}   [initialValue] - An initial value to set to new stores.\r\n    *\r\n    * @returns {import('svelte/store').Writable} The store for the given key.\r\n    */\r\n   #getStore(key, initialValue)\r\n   {\r\n      let store = this.#stores.get(key);\r\n      if (store === void 0)\r\n      {\r\n         store = TJSGameSettings.#createStore(initialValue);\r\n         this.#stores.set(key, store);\r\n      }\r\n\r\n      return store;\r\n   }\r\n\r\n   /**\r\n    * Returns a readable Game Settings store for the associated key.\r\n    *\r\n    * @param {string}   key - Game setting key.\r\n    *\r\n    * @returns {import('svelte/store').Readable | undefined} The associated store for the given game setting key.\r\n    */\r\n   getReadableStore(key)\r\n   {\r\n      if (!this.#stores.has(key))\r\n      {\r\n         console.warn(`TJSGameSettings - getReadableStore: '${key}' is not a registered setting.`);\r\n         return;\r\n      }\r\n\r\n      const store = this.#getStore(key);\r\n\r\n      return { subscribe: store.subscribe };\r\n   }\r\n\r\n   /**\r\n    * Returns a writable Game Settings store for the associated key.\r\n    *\r\n    * @param {string}   key - Game setting key.\r\n    *\r\n    * @returns {import('svelte/store').Writable | undefined} The associated store for the given game setting key.\r\n    */\r\n   getStore(key)\r\n   {\r\n      return this.getWritableStore(key);\r\n   }\r\n\r\n   /**\r\n    * Returns a writable Game Settings store for the associated key.\r\n    *\r\n    * @param {string}   key - Game setting key.\r\n    *\r\n    * @returns {import('svelte/store').Writable | undefined} The associated store for the given game setting key.\r\n    */\r\n   getWritableStore(key)\r\n   {\r\n      if (!this.#stores.has(key))\r\n      {\r\n         console.warn(`TJSGameSettings - getWritableStore: '${key}' is not a registered setting.`);\r\n         return;\r\n      }\r\n\r\n      return this.#getStore(key);\r\n   }\r\n\r\n   /**\r\n    * Registers a setting with TJSGameSettings and Foundry core.\r\n    *\r\n    * Note: The specific store subscription handler assigned to the passed in store or store created for the setting\r\n    * internally is returned from this function. In some cases when setting up custom stores particularly of object\r\n    * types with several child property stores (`propertyStore`) it is necessary to only update the setting store and\r\n    * not all subscribers to the custom store as the `propertyStore` instances are also subscribers to the custom store.\r\n    *\r\n    * This allows the custom store in the `set` implementation to mainly only trigger the TJSGameSettings subscriber\r\n    * handler on updates and not all the connected `propertyStore` instances.\r\n    *\r\n    * @param {GameSetting} setting - A GameSetting instance to set to Foundry game settings.\r\n    *\r\n    * @param {boolean}     coreConfig - When false this overrides the `setting.options.config` parameter when\r\n    *                                   registering the setting with Foundry. This allows the settings to be displayed\r\n    *                                   in the app itself, but removed from the standard Foundry configuration location.\r\n    *\r\n    * @returns {Function} The specific store subscription handler assigned to the passed in store.\r\n    */\r\n   register(setting, coreConfig = true)\r\n   {\r\n      if (!isObject(setting))\r\n      {\r\n         throw new TypeError(`TJSGameSettings - register: setting is not an object.`);\r\n      }\r\n\r\n      if (!isObject(setting.options))\r\n      {\r\n         throw new TypeError(`TJSGameSettings - register: 'setting.options' attribute is not an object.`);\r\n      }\r\n\r\n      if (typeof coreConfig !== 'boolean')\r\n      {\r\n         throw new TypeError(`TJSGameSettings - register: 'coreConfig' is not an boolean.`);\r\n      }\r\n\r\n      if (setting.store !== void 0 && !isWritableStore(setting.store))\r\n      {\r\n         throw new TypeError(\r\n          `TJSGameSettings - register: 'setting.store' attribute is not a writable store.`);\r\n      }\r\n\r\n      const namespace = setting.namespace;\r\n      const key = setting.key;\r\n      const folder = setting.folder;\r\n\r\n      // The `config` parameter passed to Foundry core.\r\n      const foundryConfig = coreConfig ? setting.options.config : false;\r\n\r\n      if (typeof namespace !== 'string')\r\n      {\r\n         throw new TypeError(`TJSGameSettings - register: 'namespace' attribute is not a string.`);\r\n      }\r\n\r\n      if (typeof key !== 'string')\r\n      {\r\n         throw new TypeError(`TJSGameSettings - register: 'key' attribute is not a string.`);\r\n      }\r\n\r\n      if (folder !== void 0 && typeof folder !== 'string')\r\n      {\r\n         throw new TypeError(`TJSGameSettings - register: 'folder' attribute is not a string.`);\r\n      }\r\n\r\n      const store = setting.store;\r\n\r\n      /**\r\n       * @type {GameSettingOptions}\r\n       */\r\n      const options = setting.options;\r\n\r\n      const onchangeFunctions = [];\r\n\r\n      // When true prevents local store subscription from a loop when values are object data.\r\n      let gateSet = false;\r\n\r\n      // Provides an `onChange` callback to update the associated store.\r\n      onchangeFunctions.push((value) =>\r\n      {\r\n         const callbackStore = this.#getStore(key);\r\n         if (callbackStore && !gateSet)\r\n         {\r\n            gateSet = true;\r\n            callbackStore.set(value);\r\n            gateSet = false;\r\n         }\r\n      });\r\n\r\n      // Handle loading any existing `onChange` callbacks.\r\n      if (isIterable(options?.onChange))\r\n      {\r\n         for (const entry of options.onChange)\r\n         {\r\n            if (typeof entry === 'function') { onchangeFunctions.push(entry); }\r\n         }\r\n      }\r\n      else if (typeof options.onChange === 'function')\r\n      {\r\n         onchangeFunctions.push(options.onChange);\r\n      }\r\n\r\n      // Provides the final onChange callback that iterates over all the stored onChange callbacks.\r\n      const onChange = (value) =>\r\n      {\r\n         for (const entry of onchangeFunctions) { entry(value); }\r\n      };\r\n\r\n      globalThis.game.settings.register(namespace, key, { ...options, config: foundryConfig, onChange });\r\n\r\n      // Set new store value with existing setting or default value.\r\n      const targetStore = store ? store : this.#getStore(key, globalThis.game.settings.get(namespace, key));\r\n\r\n      // If a store instance is passed into register then initialize it with game settings data.\r\n      if (store)\r\n      {\r\n         this.#stores.set(key, targetStore);\r\n         store.set(globalThis.game.settings.get(namespace, key));\r\n      }\r\n\r\n      const storeHandler = async (value) =>\r\n      {\r\n         if (!gateSet && globalThis.game.settings.get(namespace, key) !== value)\r\n         {\r\n            gateSet = true;\r\n            await globalThis.game.settings.set(namespace, key, value);\r\n         }\r\n\r\n         gateSet = false;\r\n      };\r\n\r\n      // Subscribe to self to set associated game setting on updates after verifying that the new value does not match\r\n      // existing game setting.\r\n      subscribeIgnoreFirst(targetStore, storeHandler);\r\n\r\n      this.#settings.push({\r\n         namespace,\r\n         key,\r\n         folder,\r\n         ...options\r\n      });\r\n\r\n      return storeHandler;\r\n   }\r\n\r\n   /**\r\n    * Registers multiple settings.\r\n    *\r\n    * Please refer to the note in {@link TJSGameSettings.register} about the returned object of store subscriber handler\r\n    * functions.\r\n    *\r\n    * @param {Iterable<GameSetting>} settings - An iterable list of game setting configurations to register.\r\n    *\r\n    * @param {boolean}     coreConfig - When false this overrides the `setting.options.config` parameter when\r\n    *                                   registering the setting with Foundry. This allows the settings to be displayed\r\n    *                                   in the app itself, but removed from the standard Foundry configuration location.\r\n    *\r\n    * @returns { {[key: string]: Function} } An object containing all TJSGameSetting store subscriber handlers for each\r\n    *          setting `key` added.\r\n    */\r\n   registerAll(settings, coreConfig)\r\n   {\r\n      /** @type { {[key: string]: Function} } */\r\n      const storeHandlers = {};\r\n\r\n      if (!isIterable(settings)) { throw new TypeError(`TJSGameSettings - registerAll: settings is not iterable.`); }\r\n\r\n      for (const entry of settings)\r\n      {\r\n         if (!isObject(entry))\r\n         {\r\n            throw new TypeError(`TJSGameSettings - registerAll: entry in settings is not an object.`);\r\n         }\r\n\r\n         if (typeof entry.namespace !== 'string')\r\n         {\r\n            throw new TypeError(`TJSGameSettings - registerAll: entry in settings missing 'namespace' attribute.`);\r\n         }\r\n\r\n         if (typeof entry.key !== 'string')\r\n         {\r\n            throw new TypeError(`TJSGameSettings - registerAll: entry in settings missing 'key' attribute.`);\r\n         }\r\n\r\n         if (!isObject(entry.options))\r\n         {\r\n            throw new TypeError(`TJSGameSettings - registerAll: entry in settings missing 'options' attribute.`);\r\n         }\r\n\r\n         storeHandlers[entry.key] = this.register(entry, coreConfig);\r\n      }\r\n\r\n      return storeHandlers;\r\n   }\r\n}\r\n\r\n/**\r\n * @typedef {object} GameSettingOptions\r\n *\r\n * @property {object} [choices] If choices are defined, the resulting setting will be a select menu.\r\n *\r\n * @property {boolean} [config=true] Specifies that the setting appears in the configuration view.\r\n *\r\n * @property {*} [default] A default value for the setting.\r\n *\r\n * @property {string} [hint] A description of the registered setting and its behavior.\r\n *\r\n * @property {string} name The displayed name of the setting.\r\n *\r\n * @property {Function|Iterable<Function>} [onChange] An onChange callback function or iterable list of callbacks to\r\n * directly receive callbacks from Foundry on setting change.\r\n *\r\n * @property {{min: number, max: number, step: number}} [range] If range is specified, the resulting setting will be\r\n * a range slider.\r\n *\r\n * @property {boolean} [requiresReload=false] If true then a prompt to reload after changes occurs.\r\n *\r\n * @property {('client' | 'world')} [scope='client'] Scope for setting.\r\n *\r\n * @property {object|Function} type A constructable object or function.\r\n */\r\n\r\n/**\r\n * @typedef {object} GameSetting Defines a game setting.\r\n *\r\n * @property {string} namespace The setting namespace; usually the ID of the module / system.\r\n *\r\n * @property {string} key The setting key to register.\r\n *\r\n * @property {string} folder The name of the TJSSvgFolder to put this setting in to group them.\r\n *\r\n * @property {import('svelte/store').Writable} [store] An existing store instance to use.\r\n *\r\n * @property {GameSettingOptions} options Configuration for setting data.\r\n */\r\n\r\n/**\r\n * @typedef {GameSettingOptions} GameSettingData Stores the primary TJS game setting keys w/ GameSettingOptions.\r\n *\r\n * @property {string} namespace The setting namespace; usually the ID of the module / system.\r\n *\r\n * @property {string} key The setting key to register.\r\n *\r\n * @property {string} folder The name of the TJSSvgFolder to put this setting in to group them.\r\n */\r\n","import { TJSGameSettings } from './TJSGameSettings.js';\r\n\r\n/**\r\n * Provides an accessible JS object that is updated reactively from all or subset of TJSGameSettings stores.\r\n * Accessors are provided to directly get / set current setting data. Using a setter will update the setting and backing\r\n * store.\r\n *\r\n * Note: You can create a JSDoc / `@typedef` to apply with `@type` and achieve typing support in IDEs for the\r\n * customizable live settings instance. Please see the example at the end of this source file on how to accomplish this\r\n * task.\r\n *\r\n * TJSLiveGameSettings is also a readable Svelte store essentially providing a customizable derived store of all\r\n * settings tracked.\r\n *\r\n * Note: When using from JS a second subscriber function argument is the key that was updated.\r\n * From Svelte: Use 'lastKey' accessor to retrieve the last updated key.\r\n */\r\nexport class TJSLiveGameSettings\r\n{\r\n   /**\r\n    * Stores the current parsed game setting data.\r\n    *\r\n    * @type {{}}\r\n    */\r\n   #currentData = {};\r\n\r\n   /**\r\n    * Map of all game settings stores and unsubscribe functions currently subscribed.\r\n    *\r\n    * @type {Map<string, { unsubscribe: Function, store: import('svelte/store').Writable }>}\r\n    */\r\n   #gameSettings = new Map();\r\n\r\n   /**\r\n    * Stores readable subscribers of this instance.\r\n    *\r\n    * Note: When using from JS a second argument is the key that was updated.\r\n    * From Svelte: Use 'lastKey' accessor to retrieve the last updated key.\r\n    *\r\n    * @type {((value: TJSLiveGameSettings, key?: string) => void)[]}\r\n    */\r\n   #subscriptions = [];\r\n\r\n   /**\r\n    * Stores the last updated key.\r\n    *\r\n    * @type {string}\r\n    */\r\n   #lastKey = void 0;\r\n\r\n   /**\r\n    * Creates a live binding against the setting stores. All settings are configured by default, but can also be\r\n    * filtered by setting key with inclusive / exclusive Sets.\r\n    *\r\n    * @param {TJSGameSettings}   gameSettings - A game settings instance to subscribe to...\r\n    *\r\n    * @param {object}            [options] - TJSLiveGameSettings options.\r\n    *\r\n    * @param {Set<string>}       [options.include] - A Set of setting keys to include from subscribing.\r\n    *\r\n    * @param {Set<string>}       [options.exclude] - A Set of setting keys to exclude from subscribing.\r\n    */\r\n   constructor(gameSettings, { include, exclude } = {})\r\n   {\r\n      if (!(gameSettings instanceof TJSGameSettings))\r\n      {\r\n         throw new TypeError(`'gameSettings' is not a TJSGameSettings instance.`);\r\n      }\r\n\r\n      if (include !== void 0 && !(include instanceof Set)) { throw new TypeError(`'options.include' is not a Set.`); }\r\n      if (exclude !== void 0 && !(exclude instanceof Set)) { throw new TypeError(`'options.exclude' is not a Set.`); }\r\n\r\n      for (const setting of gameSettings)\r\n      {\r\n         const key = setting.key;\r\n\r\n         // Skip any keys that are in the include set.\r\n         if (include !== void 0 && !include.has(key)) { continue; }\r\n\r\n         // Skip any keys that are in the exclude set.\r\n         if (exclude !== void 0 && exclude.has(key)) { continue; }\r\n\r\n         if (typeof this[key] === 'function' || key === 'lastKey')\r\n         {\r\n            console.warn(`TJSLiveGameSettings warning: key (${key}) shadows a function. Skipping key.`);\r\n         }\r\n\r\n         const store = gameSettings.getStore(key);\r\n\r\n         // Update this instance storing setting data by key.\r\n         this.#gameSettings.set(key, {\r\n            store,\r\n            unsubscribe: store.subscribe((data) =>\r\n            {\r\n               if (this.#currentData !== void 0) { this.#currentData[key] = data; }\r\n\r\n               this.#lastKey = key;\r\n\r\n               // Notify any child instance that a particular key has updated.\r\n               this._update(key);\r\n\r\n               // Notify any readable store subscribers.\r\n               this.#updateSubscribers(key);\r\n            })\r\n         });\r\n\r\n         // Define new accessors for setting key.\r\n         Object.defineProperty(this, key, {\r\n            get: () =>\r\n            {\r\n               if (this.#currentData === void 0)\r\n               {\r\n                  throw new Error(`This instance of TJSLiveGameSettings has been destroyed.`);\r\n               }\r\n               else\r\n               {\r\n                  return this.#currentData[key];\r\n               }\r\n            },\r\n            set: (data) =>\r\n            {\r\n               if (this.#currentData === void 0)\r\n               {\r\n                  throw new Error(`This instance of TJSLiveGameSettings has been destroyed.`);\r\n               }\r\n               else\r\n               {\r\n                  this.#gameSettings.get(key).store.set(data);\r\n               }\r\n            }\r\n         });\r\n      }\r\n\r\n      Object.seal(this);\r\n   }\r\n\r\n   /**\r\n    * @returns {string} Last updated setting key.\r\n    */\r\n   get lastKey()\r\n   {\r\n      return this.#lastKey;\r\n   }\r\n\r\n   // ----------------------------------------------------------------------------------------------------------------\r\n\r\n   /**\r\n    * Destroys this instance of TJSLiveGameSettings and unsubscribes from all game setting stores.\r\n    */\r\n   destroy()\r\n   {\r\n      for (const data of this.#gameSettings)\r\n      {\r\n         if (typeof data.unsubscribe === 'function') { data.unsubscribe(); }\r\n      }\r\n\r\n      this.#gameSettings.clear();\r\n      this.#currentData = void 0;\r\n   }\r\n\r\n   /**\r\n    * Returns an iterator / generator of all setting entries.\r\n    *\r\n    * @returns {IterableIterator<[key: string, value: any]>} An iterator returning setting entries.\r\n    * @yields {[key: string, value: any]}\r\n    */\r\n   *entries()\r\n   {\r\n      if (this.#currentData === void 0) { throw new Error(`This instance of TJSLiveGameSettings has been destroyed.`); }\r\n\r\n      for (const key in this.#currentData)\r\n      {\r\n         yield [key, this.#currentData[key]];\r\n      }\r\n   }\r\n\r\n   /**\r\n    * Returns an iterator / generator of all setting keys.\r\n    *\r\n    * @returns {IterableIterator<string>} An iterator returning setting keys.\r\n    * @yields {string}\r\n    */\r\n   *keys()\r\n   {\r\n      if (this.#currentData === void 0) { throw new Error(`This instance of TJSLiveGameSettings has been destroyed.`); }\r\n\r\n      for (const key in this.#currentData)\r\n      {\r\n         yield key;\r\n      }\r\n   }\r\n\r\n   /**\r\n    * Returns a string / JSON stringify of the current setting data.\r\n    *\r\n    * @returns {string} Tracked setting data.\r\n    */\r\n   toString()\r\n   {\r\n      if (this.#currentData === void 0) { throw new Error(`This instance of TJSLiveGameSettings has been destroyed.`); }\r\n\r\n      return JSON.stringify(this.#currentData);\r\n   }\r\n\r\n   /**\r\n    * Override to respond to setting update.\r\n    *\r\n    * @param {string} key - The setting / local key that updated.\r\n    *\r\n    * @protected\r\n    */\r\n   _update(key) {}   // eslint-disable-line no-unused-vars\r\n\r\n   /**\r\n    * Returns an iterator / generator of all values.\r\n    *\r\n    * @returns {IterableIterator<any>} An iterator returning setting values.\r\n    * @yields {any}\r\n    */\r\n   *values()\r\n   {\r\n      if (this.#currentData === void 0) { throw new Error(`This instance of TJSLiveGameSettings has been destroyed.`); }\r\n\r\n      for (const key in this.#currentData)\r\n      {\r\n         yield this.#currentData[key];\r\n      }\r\n   }\r\n\r\n   // Readable store implementation ----------------------------------------------------------------------------------\r\n\r\n   /**\r\n    * @param {(value: TJSLiveGameSettings, key?: string) => void} handler - Callback function that is invoked on\r\n    * update / changes.\r\n    *\r\n    * @returns {import('svelte/store').Unsubscriber} Unsubscribe function.\r\n    */\r\n   subscribe(handler)\r\n   {\r\n      this.#subscriptions.push(handler); // add handler to the array of subscribers\r\n\r\n      handler(this, void 0);             // call handler with current value\r\n\r\n      // Return unsubscribe function.\r\n      return () =>\r\n      {\r\n         const index = this.#subscriptions.findIndex((sub) => sub === handler);\r\n         if (index >= 0) { this.#subscriptions.splice(index, 1); }\r\n      };\r\n   }\r\n\r\n   /**\r\n    * Updates subscribers.\r\n    *\r\n    * @param {string} key - The key that was updated.\r\n    */\r\n   #updateSubscribers(key)\r\n   {\r\n      const subscriptions = this.#subscriptions;\r\n      for (let cntr = 0; cntr < subscriptions.length; cntr++) { subscriptions[cntr](this, key); }\r\n   }\r\n}\r\n\r\n// Example of creating a typedef to type your specific live game settings instance. Add all relevant `@property`\r\n// entries.\r\n//\r\n// /**\r\n//  * @typedef {TJSLiveGameSettings} MyLiveGameSettings - Extend TJSLiveGameSettings and name this anything.\r\n//  *\r\n//  * @property {boolean} myBooleanSetting - Add property / type entries for setting keys associated w/ accessors.\r\n//  */\r\n//\r\n// /** @type {MyLiveGameSettings} */\r\n// const liveGameSettings = new TJSLiveGameSettings(gameSettings);\r\n// liveGameSettings.myBooleanSetting is now typed as a boolean.\r\n","import { writable } from '#svelte/store';\r\n\r\nconst _storeGameState = writable(void 0);\r\n\r\n/**\r\n * @type {import('svelte/store').Readable<globalThis.game>} Provides a Svelte store wrapping the Foundry `game` global\r\n * variable. It is initialized on the `ready` hook. You may use this store to access the global game state from a\r\n * Svelte template. It is a read only store and will receive no reactive updates during runtime.\r\n */\r\nconst gameState = {\r\n   subscribe: _storeGameState.subscribe,\r\n};\r\n\r\nObject.freeze(gameState);\r\n\r\nHooks.once('ready', () => _storeGameState.set(game));\r\n\r\nexport { gameState };\r\n"],"names":[],"mappings":"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;AACrE,OAAO;AACP;AACA,MAAM,OAAO,aAAa,CAAC;AAC3B,IAAI;AACJ,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,mBAAmB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,YAAY,GAAG,EAAE,CAAC;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,aAAa,GAAG,IAAI,GAAG,EAAE,CAAC;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,cAAc,GAAG,EAAE,CAAC;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,QAAQ,GAAG,KAAK,CAAC,CAAC;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,WAAW,CAAC,YAAY,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,GAAG,EAAE;AACtD,GAAG;AACH,MAAM,IAAI,EAAE,YAAY,YAAY,eAAe,CAAC;AACpD,MAAM;AACN,SAAS,MAAM,IAAI,SAAS,CAAC,CAAC,iDAAiD,CAAC,CAAC,CAAC;AAClF,OAAO;AACP;AACA,MAAM,IAAI,OAAO,KAAK,KAAK,CAAC,IAAI,EAAE,OAAO,YAAY,GAAG,CAAC,EAAE,EAAE,MAAM,IAAI,SAAS,CAAC,CAAC,+BAA+B,CAAC,CAAC,CAAC,EAAE;AACtH,MAAM,IAAI,OAAO,KAAK,KAAK,CAAC,IAAI,EAAE,OAAO,YAAY,GAAG,CAAC,EAAE,EAAE,MAAM,IAAI,SAAS,CAAC,CAAC,+BAA+B,CAAC,CAAC,CAAC,EAA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"}