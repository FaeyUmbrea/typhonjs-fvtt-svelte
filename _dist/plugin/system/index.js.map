{"version":3,"file":"index.js","sources":["../../../node_modules/@typhonjs-svelte/lib/node_modules/svelte-persistent-store/dist/chunk.I6NEYSOQ.mjs","../../../node_modules/@typhonjs-svelte/lib/node_modules/svelte-persistent-store/dist/chunk.HHIHGWA2.mjs","../../../node_modules/@typhonjs-svelte/lib/src/store/LocalStorage.js","../../../node_modules/@typhonjs-svelte/lib/node_modules/svelte-persistent-store/dist/chunk.ZLJ3FCQ6.mjs","../../../node_modules/@typhonjs-svelte/lib/src/store/SessionStorage.js","../../../node_modules/@typhonjs-svelte/lib/src/plugin/system/store/LocalStorage.js","../../../node_modules/@typhonjs-svelte/lib/src/plugin/system/store/SessionStorage.js","../../../src/plugin/system/settings/TJSSettingsControl.js","../../../src/plugin/system/settings/store/TJSGameSettings.js"],"sourcesContent":["// src/generator.ts\nimport {writable as ogWritable, get as ogGet} from \"svelte/store\";\nimport {run_all, noop, is_function} from \"svelte/internal\";\nfunction isSimpleDeriver(deriver) {\n  return deriver.length < 2;\n}\nfunction generator(storage) {\n  function readable(key, value, start) {\n    return {\n      subscribe: writable(key, value, start).subscribe\n    };\n  }\n  function writable(key, value, start = noop) {\n    function wrap_start(ogSet) {\n      return start(function wrap_set(new_value) {\n        if (storage) {\n          storage.setItem(key, JSON.stringify(new_value));\n        }\n        return ogSet(new_value);\n      });\n    }\n    if (storage) {\n      if (storage.getItem(key)) {\n        value = JSON.parse(storage.getItem(key));\n      }\n      storage.setItem(key, JSON.stringify(value));\n    }\n    const ogStore = ogWritable(value, start ? wrap_start : void 0);\n    function set(new_value) {\n      if (storage) {\n        storage.setItem(key, JSON.stringify(new_value));\n      }\n      ogStore.set(new_value);\n    }\n    function update(fn) {\n      set(fn(ogGet(ogStore)));\n    }\n    function subscribe(run, invalidate = noop) {\n      return ogStore.subscribe(run, invalidate);\n    }\n    return {set, update, subscribe};\n  }\n  function derived(key, stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single ? [stores] : stores;\n    if (storage && storage.getItem(key)) {\n      initial_value = JSON.parse(storage.getItem(key));\n    }\n    return readable(key, initial_value, (set) => {\n      let inited = false;\n      const values = [];\n      let pending = 0;\n      let cleanup = noop;\n      const sync = () => {\n        if (pending) {\n          return;\n        }\n        cleanup();\n        const input = single ? values[0] : values;\n        if (isSimpleDeriver(fn)) {\n          set(fn(input));\n        } else {\n          const result = fn(input, set);\n          cleanup = is_function(result) ? result : noop;\n        }\n      };\n      const unsubscribers = stores_array.map((store, i) => store.subscribe((value) => {\n        values[i] = value;\n        pending &= ~(1 << i);\n        if (inited) {\n          sync();\n        }\n      }, () => {\n        pending |= 1 << i;\n      }));\n      inited = true;\n      sync();\n      return function stop() {\n        run_all(unsubscribers);\n        cleanup();\n      };\n    });\n  }\n  return {\n    readable,\n    writable,\n    derived,\n    get: ogGet\n  };\n}\n\nexport {\n  generator\n};\n","import {\n  generator\n} from \"./chunk.I6NEYSOQ.mjs\";\n\n// src/local.ts\nvar storage = typeof window !== \"undefined\" ? window.localStorage : void 0;\nvar g = generator(storage);\nvar readable = g.readable;\nvar writable = g.writable;\nvar derived = g.derived;\nvar get = g.get;\n\nexport {\n  readable,\n  writable,\n  derived,\n  get\n};\n","import { writable }  from 'svelte-persistent-store/local';\r\nimport { get }       from 'svelte/store';\r\n\r\n/**\r\n * @typedef {import('svelte/store').Writable & import('svelte/store').get} LSStore - The backing Svelte store; a writable w/ get method attached.\r\n */\r\n\r\nexport class LocalStorage\r\n{\r\n   /**\r\n    * @type {Map<string, LSStore>}\r\n    */\r\n   #stores = new Map();\r\n\r\n   /**\r\n    * Get value from the localstorage.\r\n    *\r\n    * @param {string}   key - Key to lookup in localstorage.\r\n    *\r\n    * @param {*}        [defaultValue] - A default value to return if key not present in local storage.\r\n    *\r\n    * @returns {*} Value from local storage or if not defined any default value provided.\r\n    */\r\n   getItem(key, defaultValue)\r\n   {\r\n      let value = defaultValue;\r\n\r\n      const storageValue = localStorage.getItem(key);\r\n\r\n      if (storageValue !== void 0)\r\n      {\r\n         value = JSON.parse(storageValue);\r\n      }\r\n\r\n      return value;\r\n   }\r\n\r\n   /**\r\n    * Returns the backing Svelte store for the given key; potentially sets a default value if the key\r\n    * is not already set.\r\n    *\r\n    * @param {string}   key - Key to lookup in localstorage.\r\n    *\r\n    * @param {*}        [defaultValue] - A default value to return if key not present in local storage.\r\n    *\r\n    * @returns {LSStore} The Svelte store for this key.\r\n    */\r\n   getStore(key, defaultValue)\r\n   {\r\n      return s_GET_STORE(this.#stores, key, defaultValue);\r\n   }\r\n\r\n   /**\r\n    * Sets the value for the given key in localstorage.\r\n    *\r\n    * @param {string}   key - Key to lookup in localstorage.\r\n    *\r\n    * @param {*}        value - A value to set for this key.\r\n    */\r\n   setItem(key, value)\r\n   {\r\n      const store = s_GET_STORE(this.#stores, key);\r\n      store.set(value);\r\n   }\r\n\r\n   /**\r\n    * Convenience method to swap a boolean value stored in local storage.\r\n    *\r\n    * @param {string}   key - Key to lookup in localstorage.\r\n    *\r\n    * @param {boolean}  [defaultValue] - A default value to return if key not present in local storage.\r\n    *\r\n    * @returns {boolean} The boolean swap for the given key.\r\n    */\r\n   swapItemBoolean(key, defaultValue)\r\n   {\r\n      const store = s_GET_STORE(this.#stores, key, defaultValue);\r\n      const value = store.get();\r\n      const newValue = typeof value === 'boolean' ? !value : false;\r\n\r\n      store.set(newValue);\r\n      return newValue;\r\n   }\r\n}\r\n\r\n/**\r\n * Gets a store from the LSStore Map or creates a new store for the key and a given default value.\r\n *\r\n * @param {Map<string, LSStore>} stores - Map containing Svelte stores.\r\n *\r\n * @param {string}               key - Key to lookup in stores map.\r\n *\r\n * @param {boolean}              [defaultValue] - A default value to set for the store.\r\n *\r\n * @returns {LSStore} The store for the given key.\r\n */\r\nfunction s_GET_STORE(stores, key, defaultValue = void 0)\r\n{\r\n   let store = stores.get(key);\r\n   if (store === void 0)\r\n   {\r\n      store = s_CREATE_STORE(key, defaultValue);\r\n      stores.set(key, store);\r\n   }\r\n\r\n   return store;\r\n}\r\n\r\n/**\r\n * Creates a new LSStore for the given key.\r\n *\r\n * @param {string}   key - Key to lookup in stores map.\r\n *\r\n * @param {boolean}  [defaultValue] - A default value to set for the store.\r\n *\r\n * @returns {LSStore} The new LSStore.\r\n */\r\nfunction s_CREATE_STORE(key, defaultValue = void 0)\r\n{\r\n   try\r\n   {\r\n      if (localStorage.getItem(key))\r\n      {\r\n         defaultValue = JSON.parse(localStorage.getItem(key));\r\n      }\r\n   }\r\n   catch (err) { /**/ }\r\n\r\n   const store = writable(key, defaultValue);\r\n   store.get = () => get(store);\r\n\r\n   return store;\r\n}\r\n","import {\n  generator\n} from \"./chunk.I6NEYSOQ.mjs\";\n\n// src/session.ts\nvar storage = typeof window !== \"undefined\" ? window.sessionStorage : void 0;\nvar g = generator(storage);\nvar readable = g.readable;\nvar writable = g.writable;\nvar derived = g.derived;\nvar get = g.get;\n\nexport {\n  readable,\n  writable,\n  derived,\n  get\n};\n","import { writable }  from 'svelte-persistent-store/session';\r\nimport { get }       from 'svelte/store';\r\n\r\n/**\r\n * @typedef {import('svelte/store').Writable & import('svelte/store').get} SSStore - The backing Svelte store; a writable w/ get method attached.\r\n */\r\n\r\nexport class SessionStorage\r\n{\r\n   /**\r\n    * @type {Map<string, SSStore>}\r\n    */\r\n   #stores = new Map();\r\n\r\n   /**\r\n    * Get value from the sessionstorage.\r\n    *\r\n    * @param {string}   key - Key to lookup in sessionstorage.\r\n    *\r\n    * @param {*}        [defaultValue] - A default value to return if key not present in session storage.\r\n    *\r\n    * @returns {*} Value from session storage or if not defined any default value provided.\r\n    */\r\n   getItem(key, defaultValue)\r\n   {\r\n      let value = defaultValue;\r\n\r\n      const storageValue = sessionStorage.getItem(key);\r\n\r\n      if (storageValue !== void 0)\r\n      {\r\n         value = JSON.parse(storageValue);\r\n      }\r\n\r\n      return value;\r\n   }\r\n\r\n   /**\r\n    * Returns the backing Svelte store for the given key; potentially sets a default value if the key\r\n    * is not already set.\r\n    *\r\n    * @param {string}   key - Key to lookup in sessionstorage.\r\n    *\r\n    * @param {*}        [defaultValue] - A default value to return if key not present in session storage.\r\n    *\r\n    * @returns {LSStore} The Svelte store for this key.\r\n    */\r\n   getStore(key, defaultValue)\r\n   {\r\n      return s_GET_STORE(this.#stores, key, defaultValue);\r\n   }\r\n\r\n   /**\r\n    * Sets the value for the given key in sessionstorage.\r\n    *\r\n    * @param {string}   key - Key to lookup in sessionstorage.\r\n    *\r\n    * @param {*}        value - A value to set for this key.\r\n    */\r\n   setItem(key, value)\r\n   {\r\n      const store = s_GET_STORE(this.#stores, key);\r\n      store.set(value);\r\n   }\r\n\r\n   /**\r\n    * Convenience method to swap a boolean value stored in session storage.\r\n    *\r\n    * @param {string}   key - Key to lookup in sessionstorage.\r\n    *\r\n    * @param {boolean}  [defaultValue] - A default value to return if key not present in session storage.\r\n    *\r\n    * @returns {boolean} The boolean swap for the given key.\r\n    */\r\n   swapItemBoolean(key, defaultValue)\r\n   {\r\n      const store = s_GET_STORE(this.#stores, key, defaultValue);\r\n      const value = store.get();\r\n      const newValue = typeof value === 'boolean' ? !value : false;\r\n\r\n      store.set(newValue);\r\n      return newValue;\r\n   }\r\n}\r\n\r\n/**\r\n * Gets a store from the SSStore Map or creates a new store for the key and a given default value.\r\n *\r\n * @param {Map<string, LSStore>} stores - Map containing Svelte stores.\r\n *\r\n * @param {string}               key - Key to lookup in stores map.\r\n *\r\n * @param {boolean}              [defaultValue] - A default value to set for the store.\r\n *\r\n * @returns {LSStore} The store for the given key.\r\n */\r\nfunction s_GET_STORE(stores, key, defaultValue = void 0)\r\n{\r\n   let store = stores.get(key);\r\n   if (store === void 0)\r\n   {\r\n      store = s_CREATE_STORE(key, defaultValue);\r\n      stores.set(key, store);\r\n   }\r\n\r\n   return store;\r\n}\r\n\r\n/**\r\n * Creates a new SSStore for the given key.\r\n *\r\n * @param {string}   key - Key to lookup in stores map.\r\n *\r\n * @param {boolean}  [defaultValue] - A default value to set for the store.\r\n *\r\n * @returns {LSStore} The new LSStore.\r\n */\r\nfunction s_CREATE_STORE(key, defaultValue = void 0)\r\n{\r\n   try\r\n   {\r\n      if (sessionStorage.getItem(key))\r\n      {\r\n         defaultValue = JSON.parse(sessionStorage.getItem(key));\r\n      }\r\n   }\r\n   catch (err) { /**/ }\r\n\r\n   const store = writable(key, defaultValue);\r\n   store.get = () => get(store);\r\n\r\n   return store;\r\n}\r\n","import { LocalStorage as LS } from '@typhonjs-svelte/lib/store';\r\n\r\nexport class LocalStorage\r\n{\r\n   #storage = new LS();\r\n\r\n   onPluginLoad(ev)\r\n   {\r\n      const prepend = typeof ev?.pluginOptions?.eventPrepend === 'string' ? `${ev.pluginOptions.eventPrepend}:` : '';\r\n\r\n      ev.eventbus.on(`${prepend}storage:local:item:get`, this.#storage.getItem, this.#storage, { guard: true });\r\n      ev.eventbus.on(`${prepend}storage:local:item:boolean:swap`, this.#storage.swapItemBoolean, this.#storage,\r\n       { guard: true });\r\n      ev.eventbus.on(`${prepend}storage:local:item:set`, this.#storage.setItem, this.#storage, { guard: true });\r\n      ev.eventbus.on(`${prepend}storage:local:store:get`, this.#storage.getStore, this.#storage, { guard: true });\r\n   }\r\n}\r\n","import { SessionStorage as SS }  from '@typhonjs-svelte/lib/store';\r\n\r\nexport class SessionStorage\r\n{\r\n   #storage = new SS();\r\n\r\n   onPluginLoad(ev)\r\n   {\r\n      const prepend = typeof ev?.pluginOptions?.eventPrepend === 'string' ? `${ev.pluginOptions.eventPrepend}:` : '';\r\n\r\n      ev.eventbus.on(`${prepend}storage:session:item:get`, this.#storage.getItem, this.#storage, { guard: true });\r\n      ev.eventbus.on(`${prepend}storage:session:item:boolean:swap`, this.#storage.swapItemBoolean, this.#storage,\r\n       { guard: true });\r\n      ev.eventbus.on(`${prepend}storage:session:item:set`, this.#storage.setItem, this.#storage, { guard: true });\r\n      ev.eventbus.on(`${prepend}storage:session:store:get`, this.#storage.getStore, this.#storage, { guard: true });\r\n   }\r\n}\r\n","/**\r\n * Defines if logging setting changes to the console occurs.\r\n *\r\n * @type {boolean}\r\n */\r\nlet loggingEnabled = false;\r\n\r\n/**\r\n * Defines a base class for dispatch handling from events triggered from the TJSGameSettings plugin. This is a\r\n * convenience mechanism and is not the only way to handle game settings related events. Use this for small to medium\r\n * scoped apps that do not have a lot of cross-cutting concerns.\r\n *\r\n * SettingsControl listens for all setting change events and attempts to invoke a method with the same name as the\r\n * setting located in the implementing child class.\r\n *\r\n * There is one additional event handled by SettingsControl:\r\n * `tjs:system:settings:control:log:enable` - When passed a truthy value console logging of setting changes occurs.\r\n */\r\nexport class TJSSettingsControl\r\n{\r\n   #handleDispatch(data)\r\n   {\r\n      if (typeof data.setting !== 'string') { return; }\r\n\r\n      if (loggingEnabled)\r\n      {\r\n         console.log(`SettingsControl - handleDispatch - data:\\n`, data);\r\n      }\r\n\r\n      const dispatchFunction = this[data.setting];\r\n\r\n      if (typeof dispatchFunction === 'function')\r\n      {\r\n         dispatchFunction.call(this, data.value);\r\n      }\r\n   }\r\n\r\n   onPluginLoad(ev)\r\n   {\r\n      this._eventbus = ev.eventbus;\r\n\r\n      const opts = { guard: true };\r\n\r\n      ev.eventbus.on('tjs:system:game:settings:change:any', this.#handleDispatch, this, opts);\r\n\r\n      // Enables local logging of setting changes.\r\n      ev.eventbus.on('tjs:system:settings:control:log:enable', (enabled) => loggingEnabled = enabled, void 0, opts);\r\n   }\r\n}\r\n","import { TJSGameSettings as GS } from '@typhonjs-fvtt/svelte/store';\r\nimport { isIterable }            from '@typhonjs-fvtt/svelte/util';\r\n\r\n/**\r\n * Provides a TyphonJS plugin to add TJSGameSettings to the plugin eventbus.\r\n *\r\n * The following events are available for registration:\r\n *\r\n * `tjs:system:game:settings:store:get`          - Invokes `getWritableStore` from backing TJSGameSettings instance.\r\n * `tjs:system:game:settings:store:writable:get` - Invokes `getWritableStore` from backing TJSGameSettings instance.\r\n * `tjs:system:game:settings:store:readable:get` - Invokes `getReadableStore` from backing TJSGameSettings instance.\r\n * `tjs:system:game:settings:register`           - Registers a setting adding a callback to fire an event on change.\r\n * `tjs:system:game:settings:register:all`       - Registers multiple settings.\r\n *\r\n * The following events are triggered on change of a game setting.\r\n *\r\n * `tjs:system:game:settings:change:any`           - Provides an object containing the setting and value.\r\n * `tjs:system:game:settings:change:<SETTING KEY>` - Provides the value of the keyed event.\r\n */\r\nexport class TJSGameSettings\r\n{\r\n   #gameSettings = new GS();\r\n\r\n   /**\r\n    * @param {GameSetting} setting - A GameSetting instance to set to Foundry game settings.\r\n    */\r\n   register(setting)\r\n   {\r\n      if (typeof setting !== 'object') { throw new TypeError(`TJSGameSettings - register: setting is not an object.`); }\r\n\r\n      if (typeof setting.moduleId !== 'string')\r\n      {\r\n         throw new TypeError(`TJSGameSettings - register: 'moduleId' attribute is not a string.`);\r\n      }\r\n\r\n      if (typeof setting.key !== 'string')\r\n      {\r\n         throw new TypeError(`TJSGameSettings - register: 'key' attribute is not a string.`);\r\n      }\r\n\r\n      if (typeof setting.options !== 'object')\r\n      {\r\n         throw new TypeError(`TJSGameSettings - register: 'options' attribute is not an object.`);\r\n      }\r\n\r\n      const moduleId = setting.moduleId;\r\n      const key = setting.key;\r\n\r\n      /**\r\n       * @type {GameSettingOptions}\r\n       */\r\n      const options = setting.options;\r\n\r\n      const onChange = typeof options?.onChange === 'function' ? [options.onChange] : [];\r\n\r\n      onChange.push((value) =>\r\n      {\r\n         if (this._eventbus)\r\n         {\r\n            this._eventbus.trigger(`tjs:system:game:settings:change:any`, { setting: key, value });\r\n            this._eventbus.trigger(`tjs:system:game:settings:change:${key}`, value);\r\n         }\r\n      });\r\n\r\n      this.#gameSettings.register({ moduleId, key, options: { ...options, onChange } });\r\n   }\r\n\r\n   /**\r\n    * Registers multiple settings.\r\n    *\r\n    * @param {Iterable<GameSetting>} settings - An iterable list of game setting configurations to register.\r\n    */\r\n   registerAll(settings)\r\n   {\r\n      if (!isIterable(settings)) { throw new TypeError(`TJSGameSettings - registerAll: settings is not iterable.`); }\r\n\r\n      for (const entry of settings) { this.register(entry); }\r\n   }\r\n\r\n   onPluginLoad(ev)\r\n   {\r\n      this._eventbus = ev.eventbus;\r\n\r\n      const opts = { guard: true };\r\n\r\n      ev.eventbus.on(`tjs:system:game:settings:store:get`, this.#gameSettings.getWritableStore, this.#gameSettings,\r\n       opts);\r\n\r\n      ev.eventbus.on(`tjs:system:game:settings:store:readable:get`, this.#gameSettings.getReadableStore,\r\n       this.#gameSettings, opts);\r\n\r\n      ev.eventbus.on(`tjs:system:game:settings:store:writable:get`, this.#gameSettings.getWritableStore,\r\n       this.#gameSettings, opts);\r\n\r\n      ev.eventbus.on(`tjs:system:game:settings:register`, this.register, this, opts);\r\n\r\n      ev.eventbus.on(`tjs:system:game:settings:register:all`, this.registerAll, this, opts);\r\n   }\r\n}\r\n\r\n/**\r\n * @typedef {object} GameSettingOptions\r\n *\r\n * @property {object} [choices] - If choices are defined, the resulting setting will be a select menu.\r\n *\r\n * @property {boolean} [config=true] - Specifies that the setting appears in the configuration view.\r\n *\r\n * @property {string} [hint] - A description of the registered setting and its behavior.\r\n *\r\n * @property {string} name - The displayed name of the setting.\r\n *\r\n * @property {Function} [onChange] - An onChange callback to directly receive callbacks from Foundry on setting change.\r\n *\r\n * @property {object} [range] - If range is specified, the resulting setting will be a range slider.\r\n *\r\n * @property {('client' | 'world')} [scope='client'] - Scope for setting.\r\n *\r\n * @property {Object|Function} type - A constructable object or function.\r\n */\r\n\r\n/**\r\n * @typedef {object} GameSetting - Defines a game setting.\r\n *\r\n * @property {string} moduleId - The ID of the module / system.\r\n *\r\n * @property {string} key - The setting key to register.\r\n *\r\n * @property {GameSettingOptions} options - Configuration for setting data.\r\n */\r\n"],"names":["isSimpleDeriver","deriver","length","generator","storage","readable","key","value","start","subscribe","writable","noop","wrap_start","ogSet","wrap_set","new_value","setItem","JSON","stringify","getItem","parse","ogStore","ogWritable","set","update","fn","ogGet","run","invalidate","derived","stores","initial_value","single","Array","isArray","stores_array","inited","values","pending","cleanup","sync","input","result","is_function","unsubscribers","map","store","i","stop","run_all","get","window","localStorage","g","LocalStorage","Map","defaultValue","storageValue","getStore","s_GET_STORE","swapItemBoolean","newValue","s_CREATE_STORE","err","sessionStorage","SessionStorage","LS","SS","GS"],"mappings":"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"}