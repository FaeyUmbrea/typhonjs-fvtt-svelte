{"version":3,"file":"index.js","sources":["../../../../../typhonjs-svelte/lib/node_modules/svelte-persistent-store/dist/chunk.PXUOYU5R.mjs","../../../../../typhonjs-svelte/lib/node_modules/svelte-persistent-store/dist/chunk.W4AS553O.mjs","../../../../../typhonjs-svelte/lib/src/store/LocalStorage.js","../../../../../typhonjs-svelte/lib/node_modules/svelte-persistent-store/dist/chunk.QQJ3JZYS.mjs","../../../../../typhonjs-svelte/lib/src/store/SessionStorage.js","../../../../../typhonjs-svelte/lib/src/plugin/system/store/LocalStorage.js","../../../../../typhonjs-svelte/lib/src/plugin/system/store/SessionStorage.js","../../../src/plugin/system/settings/TJSSettingsControl.js","../../../src/plugin/system/settings/store/TJSGameSettings.js"],"sourcesContent":["// src/generator.ts\nimport {writable as ogWritable, get as ogGet} from \"svelte/store\";\nimport {run_all, noop, is_function} from \"svelte/internal\";\nfunction isSimpleDeriver(deriver) {\n  return deriver.length < 2;\n}\nfunction generator(storage) {\n  function readable(key, value, start) {\n    return {\n      subscribe: writable(key, value, start).subscribe\n    };\n  }\n  function writable(key, value, start = noop) {\n    function wrap_start(ogSet) {\n      return start(function wrap_set(new_value) {\n        if (storage) {\n          storage.setItem(key, JSON.stringify(new_value));\n        }\n        return ogSet(new_value);\n      });\n    }\n    if (storage) {\n      const storageValue = storage.getItem(key);\n      try {\n        if (storageValue) {\n          value = JSON.parse(storageValue);\n        }\n      } catch (err) {\n      }\n      storage.setItem(key, JSON.stringify(value));\n    }\n    const ogStore = ogWritable(value, start ? wrap_start : void 0);\n    function set(new_value) {\n      if (storage) {\n        storage.setItem(key, JSON.stringify(new_value));\n      }\n      ogStore.set(new_value);\n    }\n    function update(fn) {\n      set(fn(ogGet(ogStore)));\n    }\n    function subscribe(run, invalidate = noop) {\n      return ogStore.subscribe(run, invalidate);\n    }\n    return {set, update, subscribe};\n  }\n  function derived(key, stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single ? [stores] : stores;\n    if (storage && storage.getItem(key)) {\n      try {\n        initial_value = JSON.parse(storage.getItem(key));\n      } catch (err) {\n      }\n    }\n    return readable(key, initial_value, (set) => {\n      let inited = false;\n      const values = [];\n      let pending = 0;\n      let cleanup = noop;\n      const sync = () => {\n        if (pending) {\n          return;\n        }\n        cleanup();\n        const input = single ? values[0] : values;\n        if (isSimpleDeriver(fn)) {\n          set(fn(input));\n        } else {\n          const result = fn(input, set);\n          cleanup = is_function(result) ? result : noop;\n        }\n      };\n      const unsubscribers = stores_array.map((store, i) => store.subscribe((value) => {\n        values[i] = value;\n        pending &= ~(1 << i);\n        if (inited) {\n          sync();\n        }\n      }, () => {\n        pending |= 1 << i;\n      }));\n      inited = true;\n      sync();\n      return function stop() {\n        run_all(unsubscribers);\n        cleanup();\n      };\n    });\n  }\n  return {\n    readable,\n    writable,\n    derived,\n    get: ogGet\n  };\n}\n\nexport {\n  generator\n};\n","import {\n  generator\n} from \"./chunk.PXUOYU5R.mjs\";\n\n// src/local.ts\nvar storage = typeof window !== \"undefined\" ? window.localStorage : void 0;\nvar g = generator(storage);\nvar readable = g.readable;\nvar writable = g.writable;\nvar derived = g.derived;\nvar get = g.get;\n\nexport {\n  readable,\n  writable,\n  derived,\n  get\n};\n","import { writable }  from 'svelte-persistent-store/local';\r\n\r\n/**\r\n * @typedef {import('svelte/store').Writable} LSStore - The backing Svelte store; a writable w/ get method attached.\r\n */\r\n\r\nexport class LocalStorage\r\n{\r\n   /**\r\n    * @type {Map<string, LSStore>}\r\n    */\r\n   #stores = new Map();\r\n\r\n   /**\r\n    * Creates a new LSStore for the given key.\r\n    *\r\n    * @param {string}   key - Key to lookup in stores map.\r\n    *\r\n    * @param {boolean}  [defaultValue] - A default value to set for the store.\r\n    *\r\n    * @returns {LSStore} The new LSStore.\r\n    */\r\n   static #createStore(key, defaultValue = void 0)\r\n   {\r\n      try\r\n      {\r\n         const value = localStorage.getItem(key);\r\n         if (value !== null) { defaultValue = JSON.parse(value); }\r\n      }\r\n      catch (err) { /**/ }\r\n\r\n      return writable(key, defaultValue);\r\n   }\r\n\r\n   /**\r\n    * Gets a store from the LSStore Map or creates a new store for the key and a given default value.\r\n    *\r\n    * @param {string}               key - Key to lookup in stores map.\r\n    *\r\n    * @param {boolean}              [defaultValue] - A default value to set for the store.\r\n    *\r\n    * @returns {LSStore} The store for the given key.\r\n    */\r\n   #getStore(key, defaultValue = void 0)\r\n   {\r\n      let store = this.#stores.get(key);\r\n      if (store === void 0)\r\n      {\r\n         store = LocalStorage.#createStore(key, defaultValue);\r\n         this.#stores.set(key, store);\r\n      }\r\n\r\n      return store;\r\n   }\r\n\r\n   /**\r\n    * Get value from the localStorage.\r\n    *\r\n    * @param {string}   key - Key to lookup in localStorage.\r\n    *\r\n    * @param {*}        [defaultValue] - A default value to return if key not present in session storage.\r\n    *\r\n    * @returns {*} Value from session storage or if not defined any default value provided.\r\n    */\r\n   getItem(key, defaultValue)\r\n   {\r\n      let value = defaultValue;\r\n\r\n      const storageValue = localStorage.getItem(key);\r\n\r\n      if (storageValue !== null)\r\n      {\r\n         value = JSON.parse(storageValue);\r\n      }\r\n      else if (defaultValue !== void 0)\r\n      {\r\n         // If there is no existing storage value and defaultValue is defined the storage value needs to be set.\r\n         localStorage.setItem(key, JSON.stringify(defaultValue));\r\n      }\r\n\r\n      return value;\r\n   }\r\n\r\n   /**\r\n    * Returns the backing Svelte store for the given key; potentially sets a default value if the key\r\n    * is not already set.\r\n    *\r\n    * @param {string}   key - Key to lookup in localStorage.\r\n    *\r\n    * @param {*}        [defaultValue] - A default value to return if key not present in session storage.\r\n    *\r\n    * @returns {LSStore} The Svelte store for this key.\r\n    */\r\n   getStore(key, defaultValue)\r\n   {\r\n      return this.#getStore(key, defaultValue);\r\n   }\r\n\r\n   /**\r\n    * Sets the value for the given key in localStorage.\r\n    *\r\n    * @param {string}   key - Key to lookup in localStorage.\r\n    *\r\n    * @param {*}        value - A value to set for this key.\r\n    */\r\n   setItem(key, value)\r\n   {\r\n      const store = this.#getStore(key);\r\n      store.set(value);\r\n   }\r\n\r\n   /**\r\n    * Convenience method to swap a boolean value stored in session storage.\r\n    *\r\n    * @param {string}   key - Key to lookup in localStorage.\r\n    *\r\n    * @param {boolean}  [defaultValue] - A default value to return if key not present in session storage.\r\n    *\r\n    * @returns {boolean} The boolean swap for the given key.\r\n    */\r\n   swapItemBoolean(key, defaultValue)\r\n   {\r\n      const store = this.#getStore(key, defaultValue);\r\n\r\n      let currentValue = false;\r\n\r\n      try\r\n      {\r\n         currentValue = !!JSON.parse(localStorage.getItem(key));\r\n      }\r\n      catch (err) { /**/ }\r\n\r\n      const newValue = typeof currentValue === 'boolean' ? !currentValue : false;\r\n\r\n      store.set(newValue);\r\n      return newValue;\r\n   }\r\n}\r\n","import {\n  generator\n} from \"./chunk.PXUOYU5R.mjs\";\n\n// src/session.ts\nvar storage = typeof window !== \"undefined\" ? window.sessionStorage : void 0;\nvar g = generator(storage);\nvar readable = g.readable;\nvar writable = g.writable;\nvar derived = g.derived;\nvar get = g.get;\n\nexport {\n  readable,\n  writable,\n  derived,\n  get\n};\n","import { writable }  from 'svelte-persistent-store/session';\r\n\r\n/**\r\n * @typedef {import('svelte/store').Writable} SSStore - The backing Svelte store; a writable w/ get method attached.\r\n */\r\n\r\nexport class SessionStorage\r\n{\r\n   /**\r\n    * @type {Map<string, SSStore>}\r\n    */\r\n   #stores = new Map();\r\n\r\n   /**\r\n    * Creates a new SSStore for the given key.\r\n    *\r\n    * @param {string}   key - Key to lookup in stores map.\r\n    *\r\n    * @param {boolean}  [defaultValue] - A default value to set for the store.\r\n    *\r\n    * @returns {LSStore} The new LSStore.\r\n    */\r\n   static #createStore(key, defaultValue = void 0)\r\n   {\r\n      try\r\n      {\r\n         const value = sessionStorage.getItem(key);\r\n         if (value !== null) { defaultValue = JSON.parse(value); }\r\n      }\r\n      catch (err) { /**/ }\r\n\r\n      return writable(key, defaultValue);\r\n   }\r\n\r\n   /**\r\n    * Gets a store from the SSStore Map or creates a new store for the key and a given default value.\r\n    *\r\n    * @param {string}               key - Key to lookup in stores map.\r\n    *\r\n    * @param {boolean}              [defaultValue] - A default value to set for the store.\r\n    *\r\n    * @returns {LSStore} The store for the given key.\r\n    */\r\n   #getStore(key, defaultValue = void 0)\r\n   {\r\n      let store = this.#stores.get(key);\r\n      if (store === void 0)\r\n      {\r\n         store = SessionStorage.#createStore(key, defaultValue);\r\n         this.#stores.set(key, store);\r\n      }\r\n\r\n      return store;\r\n   }\r\n\r\n   /**\r\n    * Get value from the sessionStorage.\r\n    *\r\n    * @param {string}   key - Key to lookup in sessionStorage.\r\n    *\r\n    * @param {*}        [defaultValue] - A default value to return if key not present in session storage.\r\n    *\r\n    * @returns {*} Value from session storage or if not defined any default value provided.\r\n    */\r\n   getItem(key, defaultValue)\r\n   {\r\n      let value = defaultValue;\r\n\r\n      const storageValue = sessionStorage.getItem(key);\r\n\r\n      if (storageValue !== null)\r\n      {\r\n         value = JSON.parse(storageValue);\r\n      }\r\n      else if (defaultValue !== void 0)\r\n      {\r\n         // If there is no existing storage value and defaultValue is defined the storage value needs to be set.\r\n         sessionStorage.setItem(key, JSON.stringify(defaultValue));\r\n      }\r\n\r\n      return value;\r\n   }\r\n\r\n   /**\r\n    * Returns the backing Svelte store for the given key; potentially sets a default value if the key\r\n    * is not already set.\r\n    *\r\n    * @param {string}   key - Key to lookup in sessionStorage.\r\n    *\r\n    * @param {*}        [defaultValue] - A default value to return if key not present in session storage.\r\n    *\r\n    * @returns {LSStore} The Svelte store for this key.\r\n    */\r\n   getStore(key, defaultValue)\r\n   {\r\n      return this.#getStore(key, defaultValue);\r\n   }\r\n\r\n   /**\r\n    * Sets the value for the given key in sessionStorage.\r\n    *\r\n    * @param {string}   key - Key to lookup in sessionStorage.\r\n    *\r\n    * @param {*}        value - A value to set for this key.\r\n    */\r\n   setItem(key, value)\r\n   {\r\n      const store = this.#getStore(key);\r\n      store.set(value);\r\n   }\r\n\r\n   /**\r\n    * Convenience method to swap a boolean value stored in session storage.\r\n    *\r\n    * @param {string}   key - Key to lookup in sessionStorage.\r\n    *\r\n    * @param {boolean}  [defaultValue] - A default value to return if key not present in session storage.\r\n    *\r\n    * @returns {boolean} The boolean swap for the given key.\r\n    */\r\n   swapItemBoolean(key, defaultValue)\r\n   {\r\n      const store = this.#getStore(key, defaultValue);\r\n\r\n      let currentValue = false;\r\n\r\n      try\r\n      {\r\n         currentValue = !!JSON.parse(sessionStorage.getItem(key));\r\n      }\r\n      catch (err) { /**/ }\r\n\r\n      const newValue = typeof currentValue === 'boolean' ? !currentValue : false;\r\n\r\n      store.set(newValue);\r\n      return newValue;\r\n   }\r\n}\r\n","import { LocalStorage as LS } from '@typhonjs-svelte/lib/store';\r\n\r\nexport class LocalStorage\r\n{\r\n   #storage = new LS();\r\n\r\n   onPluginLoad(ev)\r\n   {\r\n      const prepend = typeof ev?.pluginOptions?.eventPrepend === 'string' ? `${ev.pluginOptions.eventPrepend}:` : '';\r\n\r\n      ev.eventbus.on(`${prepend}storage:local:item:get`, this.#storage.getItem, this.#storage, { guard: true });\r\n      ev.eventbus.on(`${prepend}storage:local:item:boolean:swap`, this.#storage.swapItemBoolean, this.#storage,\r\n       { guard: true });\r\n      ev.eventbus.on(`${prepend}storage:local:item:set`, this.#storage.setItem, this.#storage, { guard: true });\r\n      ev.eventbus.on(`${prepend}storage:local:store:get`, this.#storage.getStore, this.#storage, { guard: true });\r\n   }\r\n}\r\n","import { SessionStorage as SS }  from '@typhonjs-svelte/lib/store';\r\n\r\nexport class SessionStorage\r\n{\r\n   #storage = new SS();\r\n\r\n   onPluginLoad(ev)\r\n   {\r\n      const prepend = typeof ev?.pluginOptions?.eventPrepend === 'string' ? `${ev.pluginOptions.eventPrepend}:` : '';\r\n\r\n      ev.eventbus.on(`${prepend}storage:session:item:get`, this.#storage.getItem, this.#storage, { guard: true });\r\n      ev.eventbus.on(`${prepend}storage:session:item:boolean:swap`, this.#storage.swapItemBoolean, this.#storage,\r\n       { guard: true });\r\n      ev.eventbus.on(`${prepend}storage:session:item:set`, this.#storage.setItem, this.#storage, { guard: true });\r\n      ev.eventbus.on(`${prepend}storage:session:store:get`, this.#storage.getStore, this.#storage, { guard: true });\r\n   }\r\n}\r\n","/**\r\n * Defines if logging setting changes to the console occurs.\r\n *\r\n * @type {boolean}\r\n */\r\nlet loggingEnabled = false;\r\n\r\n/**\r\n * Defines a base class for dispatch handling from events triggered from the TJSGameSettings plugin. This is a\r\n * convenience mechanism and is not the only way to handle game settings related events. Use this for small to medium\r\n * scoped apps that do not have a lot of cross-cutting concerns.\r\n *\r\n * SettingsControl listens for all setting change events and attempts to invoke a method with the same name as the\r\n * setting located in the implementing child class.\r\n *\r\n * There is one additional event handled by SettingsControl:\r\n * `tjs:system:settings:control:log:enable` - When passed a truthy value console logging of setting changes occurs.\r\n */\r\nexport class TJSSettingsControl\r\n{\r\n   #handleDispatch(data)\r\n   {\r\n      if (typeof data.setting !== 'string') { return; }\r\n\r\n      if (loggingEnabled)\r\n      {\r\n         console.log(`TJSSettingsControl - handleDispatch - data:\\n`, data);\r\n      }\r\n\r\n      const dispatchFunction = this[data.setting];\r\n\r\n      if (typeof dispatchFunction === 'function')\r\n      {\r\n         dispatchFunction.call(this, data.value);\r\n      }\r\n   }\r\n\r\n   onPluginLoad(ev)\r\n   {\r\n      this._eventbus = ev.eventbus;\r\n\r\n      const opts = { guard: true };\r\n\r\n      ev.eventbus.on('tjs:system:game:settings:change:any', this.#handleDispatch, this, opts);\r\n\r\n      // Enables local logging of setting changes.\r\n      ev.eventbus.on('tjs:system:settings:control:log:enable', (enabled) => loggingEnabled = enabled, void 0, opts);\r\n   }\r\n}\r\n","import { TJSGameSettings as GS } from '@typhonjs-fvtt/svelte/store';\r\nimport { isIterable }            from '@typhonjs-fvtt/svelte/util';\r\n\r\n/**\r\n * Provides a TyphonJS plugin to add TJSGameSettings to the plugin eventbus.\r\n *\r\n * The following events are available for registration:\r\n *\r\n * `tjs:system:game:settings:store:get`          - Invokes `getWritableStore` from backing TJSGameSettings instance.\r\n * `tjs:system:game:settings:store:writable:get` - Invokes `getWritableStore` from backing TJSGameSettings instance.\r\n * `tjs:system:game:settings:store:readable:get` - Invokes `getReadableStore` from backing TJSGameSettings instance.\r\n * `tjs:system:game:settings:register`           - Registers a setting adding a callback to fire an event on change.\r\n * `tjs:system:game:settings:register:all`       - Registers multiple settings.\r\n *\r\n * The following events are triggered on change of a game setting.\r\n *\r\n * `tjs:system:game:settings:change:any`           - Provides an object containing the setting and value.\r\n * `tjs:system:game:settings:change:<SETTING KEY>` - Provides the value of the keyed event.\r\n */\r\nexport class TJSGameSettings\r\n{\r\n   #gameSettings = new GS();\r\n\r\n   /**\r\n    * @param {GameSetting} setting - A GameSetting instance to set to Foundry game settings.\r\n    */\r\n   register(setting)\r\n   {\r\n      if (typeof setting !== 'object') { throw new TypeError(`TJSGameSettings - register: setting is not an object.`); }\r\n\r\n      // TODO: Remove deprecation warning and fully remove support for `moduleId` in a future TRL release.\r\n      if (typeof setting.moduleId === 'string')\r\n      {\r\n         console.warn(\r\n          `TJSGameSettings - register deprecation warning: 'moduleId' should be replaced with 'namespace'.`);\r\n         console.warn(`'moduleId' will cease to work in a future update of TRL / TJSGameSettings.`);\r\n      }\r\n\r\n      if (typeof setting.key !== 'string')\r\n      {\r\n         throw new TypeError(`TJSGameSettings - register: 'key' attribute is not a string.`);\r\n      }\r\n\r\n      if (typeof setting.options !== 'object')\r\n      {\r\n         throw new TypeError(`TJSGameSettings - register: 'options' attribute is not an object.`);\r\n      }\r\n\r\n      // TODO: Remove nullish coalescing operator in a future TRL release.\r\n      const namespace = setting.namespace ?? setting.moduleId;\r\n      const key = setting.key;\r\n\r\n      if (typeof namespace !== 'string')\r\n      {\r\n         throw new TypeError(`TJSGameSettings - register: 'namespace' attribute is not a string.`);\r\n      }\r\n\r\n      /**\r\n       * @type {GameSettingOptions}\r\n       */\r\n      const options = setting.options;\r\n\r\n      const onChange = typeof options?.onChange === 'function' ? [options.onChange] : [];\r\n\r\n      onChange.push((value) =>\r\n      {\r\n         if (this._eventbus)\r\n         {\r\n            this._eventbus.trigger(`tjs:system:game:settings:change:any`, { setting: key, value });\r\n            this._eventbus.trigger(`tjs:system:game:settings:change:${key}`, value);\r\n         }\r\n      });\r\n\r\n      this.#gameSettings.register({ namespace, key, options: { ...options, onChange } });\r\n   }\r\n\r\n   /**\r\n    * Registers multiple settings.\r\n    *\r\n    * @param {Iterable<GameSetting>} settings - An iterable list of game setting configurations to register.\r\n    */\r\n   registerAll(settings)\r\n   {\r\n      if (!isIterable(settings)) { throw new TypeError(`TJSGameSettings - registerAll: settings is not iterable.`); }\r\n\r\n      for (const entry of settings) { this.register(entry); }\r\n   }\r\n\r\n   onPluginLoad(ev)\r\n   {\r\n      this._eventbus = ev.eventbus;\r\n\r\n      const opts = { guard: true };\r\n\r\n      ev.eventbus.on(`tjs:system:game:settings:store:get`, this.#gameSettings.getWritableStore, this.#gameSettings,\r\n       opts);\r\n\r\n      ev.eventbus.on(`tjs:system:game:settings:store:readable:get`, this.#gameSettings.getReadableStore,\r\n       this.#gameSettings, opts);\r\n\r\n      ev.eventbus.on(`tjs:system:game:settings:store:writable:get`, this.#gameSettings.getWritableStore,\r\n       this.#gameSettings, opts);\r\n\r\n      ev.eventbus.on(`tjs:system:game:settings:register`, this.register, this, opts);\r\n\r\n      ev.eventbus.on(`tjs:system:game:settings:register:all`, this.registerAll, this, opts);\r\n   }\r\n}\r\n\r\n/**\r\n * @typedef {object} GameSettingOptions\r\n *\r\n * @property {object} [choices] - If choices are defined, the resulting setting will be a select menu.\r\n *\r\n * @property {boolean} [config=true] - Specifies that the setting appears in the configuration view.\r\n *\r\n * @property {string} [hint] - A description of the registered setting and its behavior.\r\n *\r\n * @property {string} name - The displayed name of the setting.\r\n *\r\n * @property {Function} [onChange] - An onChange callback to directly receive callbacks from Foundry on setting change.\r\n *\r\n * @property {object} [range] - If range is specified, the resulting setting will be a range slider.\r\n *\r\n * @property {('client' | 'world')} [scope='client'] - Scope for setting.\r\n *\r\n * @property {Object|Function} type - A constructable object or function.\r\n */\r\n\r\n/**\r\n * @typedef {object} GameSetting - Defines a game setting.\r\n *\r\n * @property {string} namespace - The setting namespoce; usually the ID of the module / system.\r\n *\r\n * @property {string} key - The setting key to register.\r\n *\r\n * @property {GameSettingOptions} options - Configuration for setting data.\r\n */\r\n"],"names":["ogWritable","ogGet","storage","g","writable","LocalStorage","SessionStorage","LS","SS","GS"],"mappings":"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"}