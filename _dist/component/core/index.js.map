{"version":3,"file":"index.js","sources":["../../../src/component/core/TJSContainer.svelte","../../../src/component/core/TJSComponentShell.svelte","../../../src/component/core/TJSGlassPane.svelte","../../../src/component/core/application/TJSHeaderButton.svelte","../../../src/component/core/application/TJSApplicationHeader.svelte","../../animate/index.js","../../../src/component/core/application/ResizableHandle.svelte","../../../src/component/core/application/ApplicationShell.svelte","../../../src/component/core/application/EmptyApplicationShell.svelte","../../../src/component/core/application/TJSApplicationShell.svelte","../../../src/component/core/dialog/DialogContent.svelte","../../../src/component/core/dialog/DialogShell.svelte"],"sourcesContent":["<script>\r\n   export let warn = false;\r\n   export let children = void 0;\r\n</script>\r\n\r\n<svelte:options accessors={true}/>\r\n\r\n{#if Array.isArray(children)}\r\n    {#each children as child}\r\n        <svelte:component this={child.class} {...child.props} />\r\n    {/each}\r\n{:else if warn}\r\n    <p>Container warning: No children.</p>\r\n{/if}\r\n\r\n<style>\r\n    p {\r\n        color: red;\r\n        font-size: 18px;\r\n    }\r\n</style>","<script>\r\n   import { getContext }    from 'svelte';\r\n\r\n   import TJSContainer      from './TJSContainer.svelte';\r\n\r\n   // The children array can be specified by a parent via prop or is read below from the external context.\r\n   export let children = void 0\r\n\r\n   const context = getContext('external');\r\n\r\n   // This component can host multiple children defined via props or in the TyphonJS SvelteData configuration object\r\n   // that are potentially mounted in the content area. If no children defined then this component mounts any slotted\r\n   // child.\r\n   const allChildren = Array.isArray(children) ? children :\r\n    typeof context === 'object' ? context.children : void 0;\r\n</script>\r\n\r\n<svelte:options accessors={true}/>\r\n\r\n<TJSContainer children={allChildren} warn={true} />","<script>\r\n   import {\r\n      s_DEFAULT_TRANSITION,\r\n      s_DEFAULT_TRANSITION_OPTIONS }   from '@typhonjs-fvtt/svelte/transition';\r\n\r\n   export let id = void 0;\r\n   export let zIndex = Number.MAX_SAFE_INTEGER;\r\n   export let background = '#50505080';\r\n   export let captureInput = true;\r\n   export let preventDefault = true;\r\n   export let stopPropagation = true;\r\n\r\n   let glassPane;\r\n\r\n   $: if (glassPane)\r\n   {\r\n      glassPane.style.maxWidth = '100%';\r\n      glassPane.style.maxHeight = '100%';\r\n      glassPane.style.width = '100%';\r\n      glassPane.style.height = '100%';\r\n   }\r\n\r\n   $: if (glassPane)\r\n   {\r\n      if (captureInput) { glassPane.focus(); }\r\n      glassPane.style.pointerEvents = captureInput ? 'auto' : 'none';\r\n   }\r\n\r\n   $: if (glassPane) { glassPane.style.background = background; }\r\n   $: if (glassPane) { glassPane.style.zIndex = zIndex; }\r\n\r\n   // ---------------------------------------------------------------------------------------------------------------\r\n\r\n   // The following block is somewhat complex, but allows transition options to be updated reactively during\r\n   // runtime execution.\r\n\r\n   // Exports properties to set a transition w/ in / out options.\r\n   export let transition = void 0;\r\n   export let inTransition = s_DEFAULT_TRANSITION;\r\n   export let outTransition = s_DEFAULT_TRANSITION;\r\n\r\n   // Exports properties to set options for any transitions.\r\n   export let transitionOptions = void 0;\r\n   export let inTransitionOptions = s_DEFAULT_TRANSITION_OPTIONS;\r\n   export let outTransitionOptions = s_DEFAULT_TRANSITION_OPTIONS;\r\n\r\n   // Tracks last transition state.\r\n   let oldTransition = void 0;\r\n   let oldTransitionOptions = void 0\r\n\r\n   // Run this reactive block when the last transition state is not equal to the current state.\r\n   $: if (oldTransition !== transition)\r\n   {\r\n      // If transition is defined and not the default transition then set it to both in and out transition otherwise\r\n      // set the default transition to both in & out transitions.\r\n      const newTransition = s_DEFAULT_TRANSITION !== transition && typeof transition === 'function' ? transition :\r\n       s_DEFAULT_TRANSITION;\r\n\r\n      inTransition = newTransition;\r\n      outTransition = newTransition;\r\n\r\n      oldTransition = newTransition;\r\n   }\r\n\r\n   // Run this reactive block when the last transition options state is not equal to the current options state.\r\n   $: if (oldTransitionOptions !== transitionOptions)\r\n   {\r\n      const newOptions = transitionOptions !== s_DEFAULT_TRANSITION_OPTIONS && typeof transitionOptions === 'object' ?\r\n       transitionOptions : s_DEFAULT_TRANSITION_OPTIONS;\r\n\r\n      inTransitionOptions = newOptions;\r\n      outTransitionOptions = newOptions;\r\n\r\n      oldTransitionOptions = newOptions;\r\n   }\r\n\r\n   // Handle cases if inTransition is unset; assign noop default transition function.\r\n   $: if (typeof inTransition !== 'function') { inTransition = s_DEFAULT_TRANSITION; }\r\n\r\n   // Handle cases if outTransition is unset; assign noop default transition function.\r\n   $: if (typeof outTransition !== 'function') { outTransition = s_DEFAULT_TRANSITION; }\r\n\r\n   // Handle cases if inTransitionOptions is unset; assign empty default transition options.\r\n   $: if (typeof inTransitionOptions !== 'object') { inTransitionOptions = s_DEFAULT_TRANSITION_OPTIONS; }\r\n\r\n   // Handle cases if outTransitionOptions is unset; assign empty default transition options.\r\n   $: if (typeof outTransitionOptions !== 'object') { outTransitionOptions = s_DEFAULT_TRANSITION_OPTIONS; }\r\n\r\n   // ---------------------------------------------------------------------------------------------------------------\r\n\r\n   function swallow(event)\r\n   {\r\n      if (captureInput)\r\n      {\r\n         if (preventDefault) { event.preventDefault(); }\r\n         if (stopPropagation) { event.stopPropagation(); }\r\n      }\r\n   }\r\n</script>\r\n\r\n<svelte:options accessors={true}/>\r\n\r\n<div id={id}\r\n     bind:this={glassPane}\r\n     tabindex=0\r\n     class=tjs-glass-pane\r\n     in:inTransition={inTransitionOptions}\r\n     out:outTransition={outTransitionOptions}\r\n     on:keydown={swallow}>\r\n   <slot />\r\n</div>\r\n\r\n<style>\r\n   .tjs-glass-pane {\r\n      position: absolute;\r\n      overflow: inherit;\r\n   }\r\n</style>\r\n","<script>\r\n   /**\r\n    * Provides an app header button conforming to the Foundry {@link ApplicationHeaderButton} type. Additionally a\r\n    * `title` field is supported to give a tool tip for the button. The `onclick` function if defined is invoked when\r\n    * the button is clicked and state is updated accordingly.\r\n    */\r\n   import { applyStyles }   from '@typhonjs-fvtt/svelte/action';\r\n   import { localize }      from '@typhonjs-fvtt/svelte/helper';\r\n\r\n   export let button;\r\n\r\n   const s_REGEX_HTML = /^\\s*<.*>$/;\r\n\r\n   let icon, label, title, styles\r\n\r\n   $: if (button)\r\n   {\r\n      title = typeof button.title === 'string' ? localize(button.title) : '';\r\n\r\n      // Handle icon and treat bare strings as the icon class; otherwise assume the icon is fully formed HTML.\r\n      icon = typeof button.icon !== 'string' ? void 0 : s_REGEX_HTML.test(button.icon) ? button.icon :\r\n       `<i class=\"${button.icon}\" title=\"${title}\"></i>`;\r\n\r\n      label = typeof button.label === 'string' ? localize(button.label) : '';\r\n\r\n      styles = typeof button.styles === 'object' ? button.styles : void 0;\r\n   }\r\n\r\n   function onClick()\r\n   {\r\n      // Accept either callback or onclick as the function / data to invoke.\r\n      const invoke = button.callback ?? button.onclick;\r\n\r\n      if (typeof invoke === 'function')\r\n      {\r\n         invoke.call(button);\r\n         button = button; // This provides a reactive update if button data changes.\r\n      }\r\n   }\r\n</script>\r\n\r\n<svelte:options accessors={true}/>\r\n\r\n<!-- Need to capture pointerdown / dblclick to prevent further action by TJSApplicationHeader -->\r\n<a on:click|preventDefault|stopPropagation={onClick}\r\n   on:pointerdown|preventDefault|stopPropagation={()=>null}\r\n   on:dblclick|preventDefault|stopPropagation={()=>null}\r\n   use:applyStyles={styles}\r\n   class=\"header-button {button.class}\">\r\n    {@html icon}{label}\r\n</a>\r\n","<script>\r\n   import { getContext }            from 'svelte';\r\n\r\n   import {\r\n      draggable as dragDefault }    from '@typhonjs-fvtt/svelte/action';\r\n\r\n   import { localize }              from '@typhonjs-fvtt/svelte/helper';\r\n\r\n   import { isSvelteComponent }     from '@typhonjs-fvtt/svelte/util';\r\n\r\n   export let draggable\r\n   export let draggableOptions;\r\n\r\n   import TJSHeaderButton           from './TJSHeaderButton.svelte';\r\n\r\n   const application = getContext('external').application;\r\n\r\n   const storeTitle = application.reactive.storeAppOptions.title;\r\n   const storeDraggable = application.reactive.storeAppOptions.draggable;\r\n   const storeDragging = application.reactive.storeUIState.dragging;\r\n   const storeHeaderButtons = application.reactive.storeUIState.headerButtons;\r\n   const storeHeaderNoTitleMinimized = application.reactive.storeAppOptions.headerNoTitleMinimized;\r\n   const storeMinimizable = application.reactive.storeAppOptions.minimizable;\r\n   const storeMinimized = application.reactive.storeUIState.minimized;\r\n\r\n   let dragOptions;\r\n\r\n   $: draggable = typeof draggable === 'function' ? draggable : dragDefault;\r\n\r\n   // Combines external options with defaults for TJSApplicationHeader.\r\n   $: dragOptions = Object.assign({}, typeof draggableOptions === 'object' ? draggableOptions : {},\r\n    { position: application.position, active: $storeDraggable, storeDragging });\r\n\r\n   let displayHeaderTitle;\r\n\r\n   $: displayHeaderTitle = $storeHeaderNoTitleMinimized && $storeMinimized ? 'none' : null;\r\n\r\n   let buttons;\r\n\r\n   $:\r\n   {\r\n      buttons = $storeHeaderButtons.reduce((array, button) =>\r\n      {\r\n         // If the button is a SvelteComponent set it as the class otherwise use `TJSHeaderButton` w/ button as props.\r\n         array.push(isSvelteComponent(button) ? { class: button, props: {} } :\r\n          { class: TJSHeaderButton, props: { button } });\r\n\r\n         return array;\r\n      }, []);\r\n   }\r\n\r\n   function minimizable(node, booleanStore)\r\n   {\r\n      const callback = application._onToggleMinimize.bind(application);\r\n\r\n      function activateListeners() { node.addEventListener('dblclick', callback); }\r\n      function removeListeners() { node.removeEventListener('dblclick', callback); }\r\n\r\n      if (booleanStore) { activateListeners(); }\r\n\r\n      return {\r\n         update: (booleanStore) =>  // eslint-disable-line no-shadow\r\n         {\r\n            if (booleanStore) { activateListeners(); }\r\n            else { removeListeners(); }\r\n         },\r\n\r\n         destroy: () => removeListeners()\r\n      };\r\n   }\r\n</script>\r\n\r\n{#key draggable}\r\n   <header class=\"window-header flexrow\"\r\n           use:draggable={dragOptions}\r\n           use:minimizable={$storeMinimizable}>\r\n      <h4 class=window-title style:display={displayHeaderTitle}>{localize($storeTitle)}</h4>\r\n      {#each buttons as button}\r\n         <svelte:component this={button.class} {...button.props} />\r\n      {/each}\r\n   </header>\r\n{/key}\r\n","/**\r\n * Awaits `requestAnimationFrame` calls by the counter specified. This allows asynchronous applications for direct /\r\n * inline style modification amongst other direct animation techniques.\r\n *\r\n * @param {number}   [cntr=1] - A positive integer greater than 0 for amount of requestAnimationFrames to wait.\r\n *\r\n * @returns {Promise<number>} Returns current time equivalent to `performance.now()`.\r\n */\r\nasync function nextAnimationFrame(cntr = 1)\r\n{\r\n   if (!Number.isInteger(cntr) || cntr < 1)\r\n   {\r\n      throw new TypeError(`nextAnimationFrame error: 'cntr' must be a positive integer greater than 0.`);\r\n   }\r\n\r\n   let currentTime = performance.now();\r\n   for (;--cntr >= 0;)\r\n   {\r\n      currentTime = await new Promise((resolve) => requestAnimationFrame(resolve));\r\n   }\r\n\r\n   return currentTime;\r\n}\n\nexport { nextAnimationFrame };\n//# sourceMappingURL=index.js.map\n","<script>\r\n   import { getContext }         from 'svelte';\r\n   import { nextAnimationFrame } from '@typhonjs-fvtt/svelte/animate';\r\n\r\n   export let isResizable = false;\r\n\r\n   const application = getContext('external').application;\r\n\r\n   // Allows retrieval of the element root at runtime.\r\n   const storeElementRoot = getContext('storeElementRoot');\r\n\r\n   const storeResizable = application.reactive.storeAppOptions.resizable;\r\n\r\n   const storeMinimized = application.reactive.storeUIState.minimized;\r\n   const storeResizing = application.reactive.storeUIState.resizing;\r\n\r\n   let elementResize;\r\n\r\n   $: if (elementResize)\r\n   {\r\n      // Instead of creating a derived store it is easier to use isResizable and the minimized store below.\r\n      elementResize.style.display = isResizable && !$storeMinimized ? 'block' : 'none';\r\n\r\n      // Add / remove `resizable` class from element root.\r\n      const elementRoot = $storeElementRoot;\r\n      if (elementRoot) { elementRoot.classList[isResizable ? 'add' : 'remove']('resizable'); }\r\n   }\r\n\r\n   /**\r\n    * Provides an action to handle resizing the application shell based on the resizable app option.\r\n    *\r\n    * @param {HTMLElement}       node - The node associated with the action.\r\n    *\r\n    * @param {object}            [opts] - Optional parameters.\r\n    *\r\n    * @param {boolean}           [opts.active=true] - A boolean value; attached to a readable store.\r\n    *\r\n    * @param {Writable<boolean>} [opts.storeResizing] - A writable store that tracks \"resizing\" state.\r\n    *\r\n    * @returns {{update: Function, destroy: Function}} The action lifecycle methods.\r\n    */\r\n   function resizable(node, { active = true, storeResizing = void 0 } = {})\r\n   {\r\n      /**\r\n       * Duplicate the app / Positionable starting position to track differences.\r\n       *\r\n       * @type {object}\r\n       */\r\n      let position = null;\r\n\r\n      /**\r\n       * Stores the initial X / Y on drag down.\r\n       *\r\n       * @type {object}\r\n       */\r\n      let initialPosition = {};\r\n\r\n      /**\r\n       * Stores the current resizing state and gates the move pointer as the resizing store is not\r\n       * set until the first pointer move.\r\n       *\r\n       * @type {boolean}\r\n       */\r\n      let resizing = false;\r\n\r\n      /**\r\n       * Remember event handlers associated with this action so they may be later unregistered.\r\n       *\r\n       * @type {Object}\r\n       */\r\n      const handlers = {\r\n         resizeDown: ['pointerdown', (e) => onResizePointerDown(e), false],\r\n         resizeMove: ['pointermove', (e) => onResizePointerMove(e), false],\r\n         resizeUp: ['pointerup', (e) => onResizePointerUp(e), false]\r\n      };\r\n\r\n      /**\r\n       * Activates listeners.\r\n       */\r\n      function activateListeners()\r\n      {\r\n         // Resize handlers\r\n         node.addEventListener(...handlers.resizeDown);\r\n\r\n         isResizable = true;\r\n\r\n         node.style.display = 'block';\r\n      }\r\n\r\n      /**\r\n       * Removes listeners.\r\n       */\r\n      function removeListeners()\r\n      {\r\n         if (typeof storeResizing?.set === 'function') { storeResizing.set(false); }\r\n\r\n         // Resize handlers\r\n         node.removeEventListener(...handlers.resizeDown);\r\n         node.removeEventListener(...handlers.resizeMove);\r\n         node.removeEventListener(...handlers.resizeUp);\r\n\r\n         node.style.display = 'none';\r\n\r\n         isResizable = false;\r\n      }\r\n\r\n      // On mount if resizable is true then activate listeners otherwise set element display to `none`.\r\n      if (active)\r\n      {\r\n         activateListeners();\r\n      }\r\n      else\r\n      {\r\n         node.style.display = 'none';\r\n      }\r\n\r\n      /**\r\n       * Handle the initial pointer down that activates resizing capture.\r\n       */\r\n      function onResizePointerDown(event)\r\n      {\r\n         event.preventDefault();\r\n\r\n         resizing = false;\r\n\r\n         // Record initial position\r\n         position = application.position.get();\r\n\r\n         if (position.height === 'auto') { position.height = $storeElementRoot.clientHeight; }\r\n         if (position.width === 'auto') { position.width = $storeElementRoot.clientWidth; }\r\n\r\n         initialPosition = { x: event.clientX, y: event.clientY };\r\n\r\n         // Add temporary handlers\r\n         node.addEventListener(...handlers.resizeMove);\r\n         node.addEventListener(...handlers.resizeUp);\r\n\r\n         node.setPointerCapture(event.pointerId);\r\n      }\r\n\r\n      /**\r\n       * Sets the width / height of the positionable application.\r\n       */\r\n      async function onResizePointerMove(event)\r\n      {\r\n         event.preventDefault();\r\n\r\n         await nextAnimationFrame();\r\n\r\n         if (!resizing && typeof storeResizing?.set === 'function')\r\n         {\r\n            resizing = true;\r\n            storeResizing.set(true);\r\n         }\r\n\r\n         application.position.set({\r\n            width: position.width + (event.clientX - initialPosition.x),\r\n            height: position.height + (event.clientY - initialPosition.y)\r\n         });\r\n      }\r\n\r\n      /**\r\n       * Conclude the dragging behavior when the pointer is released setting the final position and\r\n       * removing listeners.\r\n       */\r\n      function onResizePointerUp(event)\r\n      {\r\n         resizing = false;\r\n         if (typeof storeResizing?.set === 'function') { storeResizing.set(false); }\r\n\r\n         event.preventDefault();\r\n         node.removeEventListener(...handlers.resizeMove);\r\n         node.removeEventListener(...handlers.resizeUp);\r\n\r\n         application._onResize(event);\r\n      }\r\n\r\n      return {\r\n         update: ({ active }) =>  // eslint-disable-line no-shadow\r\n         {\r\n            if (active) { activateListeners(); }\r\n            else { removeListeners(); }\r\n         },\r\n\r\n         destroy: () => removeListeners()\r\n      };\r\n   }\r\n\r\n</script>\r\n\r\n<div class=\"window-resizable-handle\"\r\n     use:resizable={{active: $storeResizable, storeResizing}}\r\n     bind:this={elementResize}>\r\n   <i class=\"fas fa-arrows-alt-h\"></i>\r\n</div>\r\n","<script>\r\n   import { getContext, setContext }   from 'svelte';\r\n   import { writable }                 from 'svelte/store';\r\n\r\n   import {\r\n      applyStyles,\r\n      resizeObserver }                 from '@typhonjs-fvtt/svelte/action';\r\n\r\n   import TJSApplicationHeader         from './TJSApplicationHeader.svelte';\r\n   import TJSContainer                 from '../TJSContainer.svelte';\r\n   import ResizableHandle              from './ResizableHandle.svelte';\r\n\r\n   import {\r\n      s_DEFAULT_TRANSITION,\r\n      s_DEFAULT_TRANSITION_OPTIONS }   from '@typhonjs-fvtt/svelte/transition';\r\n\r\n   // Bound to the content and root elements. Can be used by parent components. SvelteApplication will also\r\n   // use 'elementRoot' to set the element of the Application. You can also provide `elementContent` and\r\n   // `elementTarget`. Please see SvelteApplication lifecycle documentation.\r\n   export let elementContent;\r\n   export let elementRoot;\r\n\r\n   // Allows custom draggable implementations to be forwarded to TJSApplicationHeader.\r\n   export let draggable;\r\n   export let draggableOptions;\r\n\r\n   // The children array can be specified by a parent via prop or is read below from the external context.\r\n   export let children = void 0;\r\n\r\n   // Explicit style overrides for the main app and content elements. Uses action `applyStyles`.\r\n   export let stylesApp;\r\n   export let stylesContent;\r\n\r\n   // If a parent component binds and sets `appOffsetHeight` to true then a resizeObserver action is enabled on the\r\n   // outer application `div`. Additionally, the SvelteApplication position resizeObserved store is updated.\r\n   export let appOffsetHeight = false;\r\n   export let appOffsetWidth = false;\r\n\r\n   // Set to `resizeObserver` if either of the above props are truthy otherwise a null operation.\r\n   const appResizeObserver = !!appOffsetHeight || !!appOffsetWidth ? resizeObserver : () => null;\r\n\r\n   // If a parent component binds and sets `contentOffsetHeight` or `contentOffsetWidth` to true then a\r\n   // resizeObserver action is enabled on the content `section`.\r\n   export let contentOffsetHeight = false;\r\n   export let contentOffsetWidth = false;\r\n\r\n   // Set to `resizeObserver` if either of the above props are truthy otherwise a null operation.\r\n   const contentResizeObserver = !!contentOffsetHeight || !!contentOffsetWidth ? resizeObserver : () => null;\r\n\r\n   // If the application is a popOut application then when clicked bring to top. Bound to on pointerdown.\r\n   const bringToTop = () =>\r\n   {\r\n      if (typeof application.options.popOut === 'boolean' && application.options.popOut &&\r\n       application !== ui?.activeWindow)\r\n      {\r\n         application.bringToTop.call(application);\r\n      }\r\n   }\r\n\r\n   // Use a writable store to make `elementContent` and `elementRoot` accessible. A store is used in the case when\r\n   // One root component with an `elementRoot` is replaced with another. Due to timing issues and the onDestroy / outro\r\n   // transitions either of these may be set to null. I will investigate more and file a bug against Svelte.\r\n   if (!getContext('storeElementContent')) { setContext('storeElementContent', writable(elementContent)); }\r\n   if (!getContext('storeElementRoot')) { setContext('storeElementRoot', writable(elementRoot)); }\r\n\r\n   // Only update the `elementContent` store if the new `elementContent` is not null or undefined.\r\n   $: if (elementContent !== void 0 && elementContent !== null)\r\n   {\r\n      getContext('storeElementContent').set(elementContent);\r\n   }\r\n\r\n   // Only update the `elementRoot` store if the new `elementRoot` is not null or undefined.\r\n   $: if (elementRoot !== void 0 && elementRoot !== null)\r\n   {\r\n      getContext('storeElementRoot').set(elementRoot);\r\n   }\r\n\r\n   const context = getContext('external');\r\n\r\n   // Store Foundry Application reference.\r\n   const application = context.application;\r\n\r\n   // This component can host multiple children defined via props or in the TyphonJS SvelteData configuration object\r\n   // that are potentially mounted in the content area. If no children defined then this component mounts any slotted\r\n   // child.\r\n   const allChildren = Array.isArray(children) ? children :\r\n    typeof context === 'object' ? context.children : void 0;\r\n\r\n   // ---------------------------------------------------------------------------------------------------------------\r\n\r\n   // The following block is somewhat complex, but allows transition options to be updated reactively during\r\n   // runtime execution.\r\n\r\n   // Exports properties to set a transition w/ in / out options.\r\n   export let transition = void 0;\r\n   export let inTransition = s_DEFAULT_TRANSITION;\r\n   export let outTransition = s_DEFAULT_TRANSITION;\r\n\r\n   // Exports properties to set options for any transitions.\r\n   export let transitionOptions = void 0;\r\n   export let inTransitionOptions = s_DEFAULT_TRANSITION_OPTIONS;\r\n   export let outTransitionOptions = s_DEFAULT_TRANSITION_OPTIONS;\r\n\r\n   // Tracks last transition state.\r\n   let oldTransition = void 0;\r\n   let oldTransitionOptions = void 0\r\n\r\n   // Run this reactive block when the last transition state is not equal to the current state.\r\n   $: if (oldTransition !== transition)\r\n   {\r\n      // If transition is defined and not the default transition then set it to both in and out transition otherwise\r\n      // set the default transition to both in & out transitions.\r\n      const newTransition = s_DEFAULT_TRANSITION !== transition && typeof transition === 'function' ? transition :\r\n       s_DEFAULT_TRANSITION;\r\n\r\n      inTransition = newTransition;\r\n      outTransition = newTransition;\r\n\r\n      oldTransition = newTransition;\r\n   }\r\n\r\n   // Run this reactive block when the last transition options state is not equal to the current options state.\r\n   $: if (oldTransitionOptions !== transitionOptions)\r\n   {\r\n      const newOptions = transitionOptions !== s_DEFAULT_TRANSITION_OPTIONS && typeof transitionOptions === 'object' ?\r\n       transitionOptions : s_DEFAULT_TRANSITION_OPTIONS;\r\n\r\n      inTransitionOptions = newOptions;\r\n      outTransitionOptions = newOptions;\r\n\r\n      oldTransitionOptions = newOptions;\r\n   }\r\n\r\n   // Handle cases if inTransition is unset; assign noop default transition function.\r\n   $: if (typeof inTransition !== 'function') { inTransition = s_DEFAULT_TRANSITION; }\r\n\r\n   $:\r\n   {\r\n      // Handle cases if outTransition is unset; assign noop default transition function.\r\n      if (typeof outTransition !== 'function') { outTransition = s_DEFAULT_TRANSITION; }\r\n\r\n      // Set jquery close animation to either run or not when an out transition is changed.\r\n      if (application && typeof application?.options?.defaultCloseAnimation === 'boolean')\r\n      {\r\n         application.options.defaultCloseAnimation = outTransition === s_DEFAULT_TRANSITION;\r\n      }\r\n   }\r\n\r\n   // Handle cases if inTransitionOptions is unset; assign empty default transition options.\r\n   $: if (typeof inTransitionOptions !== 'object') { inTransitionOptions = s_DEFAULT_TRANSITION_OPTIONS; }\r\n\r\n   // Handle cases if outTransitionOptions is unset; assign empty default transition options.\r\n   $: if (typeof outTransitionOptions !== 'object') { outTransitionOptions = s_DEFAULT_TRANSITION_OPTIONS; }\r\n\r\n   // ---------------------------------------------------------------------------------------------------------------\r\n\r\n   /**\r\n    * Callback for content resizeObserver action. This is enabled when contentOffsetHeight or contentOffsetWidth is\r\n    * bound.\r\n    *\r\n    * @param {number}   offsetWidth - Observed offsetWidth.\r\n    *\r\n    * @param {number}   offsetHeight - Observed offsetHeight\r\n    */\r\n   function resizeObservedContent(offsetWidth, offsetHeight)\r\n   {\r\n      contentOffsetWidth = offsetWidth;\r\n      contentOffsetHeight = offsetHeight;\r\n   }\r\n\r\n   /**\r\n    * Callback for app resizeObserver action. This is enabled when appOffsetHeight or appOffsetWidth is\r\n    * bound. Additionally, the Application position resizeObserved store is updated.\r\n    *\r\n    * @param {number}   contentWidth - Observed contentWidth.\r\n    * @param {number}   contentHeight - Observed contentHeight\r\n    * @param {number}   offsetWidth - Observed offsetWidth.\r\n    * @param {number}   offsetHeight - Observed offsetHeight\r\n    */\r\n   function resizeObservedApp(offsetWidth, offsetHeight, contentWidth, contentHeight)\r\n   {\r\n      application.position.stores.resizeObserved.update((object) =>\r\n      {\r\n         object.contentWidth = contentWidth;\r\n         object.contentHeight = contentHeight;\r\n         object.offsetWidth = offsetWidth;\r\n         object.offsetHeight = offsetHeight;\r\n\r\n         return object;\r\n      });\r\n\r\n      appOffsetHeight = offsetHeight;\r\n      appOffsetWidth = offsetWidth;\r\n   }\r\n</script>\r\n\r\n<svelte:options accessors={true}/>\r\n\r\n<div id={application.id}\r\n     class=\"app window-app {application.options.classes.join(' ')}\"\r\n     data-appid={application.appId}\r\n     bind:this={elementRoot}\r\n     in:inTransition={inTransitionOptions}\r\n     out:outTransition={outTransitionOptions}\r\n     on:pointerdown|capture={bringToTop}\r\n     use:applyStyles={stylesApp}\r\n     use:appResizeObserver={resizeObservedApp}>\r\n   <TJSApplicationHeader {draggable} {draggableOptions} />\r\n   <section class=window-content\r\n            bind:this={elementContent}\r\n            use:applyStyles={stylesContent}\r\n            use:contentResizeObserver={resizeObservedContent}>\r\n      {#if Array.isArray(allChildren)}\r\n         <TJSContainer children={allChildren} />\r\n      {:else}\r\n         <slot />\r\n      {/if}\r\n   </section>\r\n   <ResizableHandle />\r\n</div>\r\n\r\n<style>\r\n   .window-app {\r\n      overflow: inherit;\r\n   }\r\n</style>\r\n","<script>\r\n   import { getContext, setContext }   from 'svelte';\r\n\r\n   import {\r\n      s_DEFAULT_TRANSITION,\r\n      s_DEFAULT_TRANSITION_OPTIONS }   from '@typhonjs-fvtt/svelte/transition';\r\n   import { writable } from \"svelte/store\";\r\n\r\n   // Bound to the content and root elements. Can be used by parent components. SvelteApplication will also\r\n   // use 'elementRoot' to set the element of the Application. You can also provide `elementContent` and\r\n   // `elementTarget`. Please see SvelteApplication lifecycle documentation.\r\n   export let elementContent;\r\n   export let elementRoot;\r\n\r\n   // If a parent component binds and sets `heightChanged` to true then it is bound to the content & root element\r\n   // `clientHeight`.\r\n   export let heightChanged = false;\r\n\r\n   // Store the initial `heightChanged` state. If it is truthy then `clientHeight` for the content & root elements\r\n   // are bound to `heightChanged` to signal to any parent component of any change to the client & root.\r\n   const bindHeightChanged = !!heightChanged;\r\n\r\n   // Use a writable store to make `elementContent` and `elementRoot` accessible. A store is used in the case when\r\n   // One root component with an `elementRoot` is replaced with another. Due to timing issues and the onDestroy / outro\r\n   // transitions either of these may be set to null. I will investigate more and file a bug against Svelte.\r\n   if (!getContext('storeElementContent')) { setContext('storeElementContent', writable(elementContent)); }\r\n   if (!getContext('storeElementRoot')) { setContext('storeElementRoot', writable(elementRoot)); }\r\n\r\n   // Only update the `elementContent` store if the new `elementContent` is not null or undefined.\r\n   $: if (elementContent !== void 0 && elementContent !== null)\r\n   {\r\n      getContext('storeElementContent').set(elementContent);\r\n   }\r\n\r\n   // Only update the `elementRoot` store if the new `elementRoot` is not null or undefined.\r\n   $: if (elementRoot !== void 0 && elementRoot !== null)\r\n   {\r\n      getContext('storeElementRoot').set(elementRoot);\r\n   }\r\n\r\n   const context = getContext('external');\r\n\r\n   // Store Foundry Application reference.\r\n   const application = context.application;\r\n\r\n   $: if (elementRoot) { elementContent = elementRoot; }\r\n\r\n   // ---------------------------------------------------------------------------------------------------------------\r\n\r\n   // The following block is somewhat complex, but allows transition options to be updated reactively during\r\n   // runtime execution.\r\n\r\n   // Exports properties to set a transition w/ in / out options.\r\n   export let transition = void 0;\r\n   export let inTransition = s_DEFAULT_TRANSITION;\r\n   export let outTransition = s_DEFAULT_TRANSITION;\r\n\r\n   // Exports properties to set options for any transitions.\r\n   export let transitionOptions = void 0;\r\n   export let inTransitionOptions = s_DEFAULT_TRANSITION_OPTIONS;\r\n   export let outTransitionOptions = s_DEFAULT_TRANSITION_OPTIONS;\r\n\r\n   // Tracks last transition state.\r\n   let oldTransition = void 0;\r\n   let oldTransitionOptions = void 0\r\n\r\n   // Run this reactive block when the last transition state is not equal to the current state.\r\n   $: if (oldTransition !== transition)\r\n   {\r\n      // If transition is defined and not the default transition then set it to both in and out transition otherwise\r\n      // set the default transition to both in & out transitions.\r\n      const newTransition = s_DEFAULT_TRANSITION !== transition && typeof transition === 'function' ? transition :\r\n       s_DEFAULT_TRANSITION;\r\n\r\n      inTransition = newTransition;\r\n      outTransition = newTransition;\r\n\r\n      oldTransition = newTransition;\r\n   }\r\n\r\n   // Run this reactive block when the last transition options state is not equal to the current options state.\r\n   $: if (oldTransitionOptions !== transitionOptions)\r\n   {\r\n      const newOptions = transitionOptions !== s_DEFAULT_TRANSITION_OPTIONS && typeof transitionOptions === 'object' ?\r\n       transitionOptions : s_DEFAULT_TRANSITION_OPTIONS;\r\n\r\n      inTransitionOptions = newOptions;\r\n      outTransitionOptions = newOptions;\r\n\r\n      oldTransitionOptions = newOptions;\r\n   }\r\n\r\n   // Handle cases if inTransition is unset; assign noop default transition function.\r\n   $: if (typeof inTransition !== 'function') { inTransition = s_DEFAULT_TRANSITION; }\r\n\r\n   $:\r\n   {\r\n      // Handle cases if outTransition is unset; assign noop default transition function.\r\n      if (typeof outTransition !== 'function') { outTransition = s_DEFAULT_TRANSITION; }\r\n\r\n      // Set jquery close animation to either run or not when an out transition is changed.\r\n      if (application && typeof application?.options?.defaultCloseAnimation === 'boolean')\r\n      {\r\n         application.options.defaultCloseAnimation = outTransition === s_DEFAULT_TRANSITION;\r\n      }\r\n   }\r\n\r\n   // Handle cases if inTransitionOptions is unset; assign empty default transition options.\r\n   $: if (typeof inTransitionOptions !== 'object') { inTransitionOptions = s_DEFAULT_TRANSITION_OPTIONS; }\r\n\r\n   // Handle cases if outTransitionOptions is unset; assign empty default transition options.\r\n   $: if (typeof outTransitionOptions !== 'object') { outTransitionOptions = s_DEFAULT_TRANSITION_OPTIONS; }\r\n</script>\r\n\r\n<svelte:options accessors={true}/>\r\n\r\n{#if bindHeightChanged}\r\n    <div id={application.id}\r\n         class=\"{application.options.classes.join(' ')}\"\r\n         data-appid={application.appId}\r\n         bind:clientHeight={heightChanged}\r\n         bind:this={elementRoot}\r\n         in:inTransition={inTransitionOptions}\r\n         out:outTransition={outTransitionOptions}>\r\n    </div>\r\n{:else}\r\n    <div id={application.id}\r\n         class=\"{application.options.classes.join(' ')}\"\r\n         data-appid={application.appId}\r\n         bind:this={elementRoot}\r\n         in:inTransition={inTransitionOptions}\r\n         out:outTransition={outTransitionOptions}>\r\n    </div>\r\n{/if}\r\n","<script>\r\n   import { getContext, setContext }    from 'svelte';\r\n   import { writable }                  from 'svelte/store';\r\n\r\n   import {\r\n      applyStyles,\r\n      resizeObserver }                 from '@typhonjs-fvtt/svelte/action';\r\n\r\n   import TJSApplicationHeader          from './TJSApplicationHeader.svelte';\r\n   import TJSContainer                  from '../TJSContainer.svelte';\r\n   import ResizableHandle               from './ResizableHandle.svelte';\r\n\r\n   import {\r\n      s_DEFAULT_TRANSITION,\r\n      s_DEFAULT_TRANSITION_OPTIONS }    from '@typhonjs-fvtt/svelte/transition';\r\n\r\n   // Bound to the content and root elements. Can be used by parent components. SvelteApplication will also\r\n   // use 'elementRoot' to set the element of the Application. You can also provide `elementContent` and\r\n   // `elementTarget`. Please see SvelteApplication lifecycle documentation.\r\n   export let elementContent;\r\n   export let elementRoot;\r\n\r\n   // Allows custom draggable implementations to be forwarded to TJSApplicationHeader.\r\n   export let draggable;\r\n   export let draggableOptions;\r\n\r\n   // The children array can be specified by a parent via prop or is read below from the external context.\r\n   export let children = void 0;\r\n\r\n   // Explicit style overrides for the main app and content elements. Uses action `applyStyles`.\r\n   export let stylesApp;\r\n   export let stylesContent;\r\n\r\n   // If a parent component binds and sets `appOffsetHeight` to true then a resizeObserver action is enabled on the\r\n   // outer application `div`. Additionally, the SvelteApplication position resizeObserved store is updated.\r\n   export let appOffsetHeight = false;\r\n   export let appOffsetWidth = false;\r\n\r\n   // Set to `resizeObserver` if either of the above props are truthy otherwise a null operation.\r\n   const appResizeObserver = !!appOffsetHeight || !!appOffsetWidth ? resizeObserver : () => null;\r\n\r\n   // If a parent component binds and sets `contentOffsetHeight` or `contentOffsetWidth` to true then a\r\n   // resizeObserver action is enabled on the content `section`.\r\n   export let contentOffsetHeight = false;\r\n   export let contentOffsetWidth = false;\r\n\r\n   // Set to `resizeObserver` if either of the above props are truthy otherwise a null operation.\r\n   const contentResizeObserver = !!contentOffsetHeight || !!contentOffsetWidth ? resizeObserver : () => null;\r\n\r\n   // If the application is a popOut application then when clicked bring to top. Bound to on pointerdown.\r\n   const bringToTop = () =>\r\n   {\r\n      if (typeof application.options.popOut === 'boolean' && application.options.popOut &&\r\n       application !== ui?.activeWindow)\r\n      {\r\n         application.bringToTop.call(application);\r\n      }\r\n   }\r\n\r\n   // Use a writable store to make `elementContent` and `elementRoot` accessible. A store is used in the case when\r\n   // One root component with an `elementRoot` is replaced with another. Due to timing issues and the onDestroy / outro\r\n   // transitions either of these may be set to null. I will investigate more and file a bug against Svelte.\r\n   if (!getContext('storeElementContent')) { setContext('storeElementContent', writable(elementContent)); }\r\n   if (!getContext('storeElementRoot')) { setContext('storeElementRoot', writable(elementRoot)); }\r\n\r\n   // Only update the `elementContent` store if the new `elementContent` is not null or undefined.\r\n   $: if (elementContent !== void 0 && elementContent !== null)\r\n   {\r\n      getContext('storeElementContent').set(elementContent);\r\n   }\r\n\r\n   // Only update the `elementRoot` store if the new `elementRoot` is not null or undefined.\r\n   $: if (elementRoot !== void 0 && elementRoot !== null)\r\n   {\r\n      getContext('storeElementRoot').set(elementRoot);\r\n   }\r\n\r\n   const context = getContext('external');\r\n\r\n   // Store Foundry Application reference.\r\n   const application = context.application;\r\n\r\n   // This component can host multiple children defined via props or in the TyphonJS SvelteData configuration object\r\n   // that are potentially mounted in the content area. If no children defined then this component mounts any slotted\r\n   // child.\r\n   const allChildren = Array.isArray(children) ? children :\r\n    typeof context === 'object' ? context.children : void 0;\r\n\r\n   // ---------------------------------------------------------------------------------------------------------------\r\n\r\n   // The following block is somewhat complex, but allows transition options to be updated reactively during\r\n   // runtime execution.\r\n\r\n   // Exports properties to set a transition w/ in / out options.\r\n   export let transition = void 0;\r\n   export let inTransition = s_DEFAULT_TRANSITION;\r\n   export let outTransition = s_DEFAULT_TRANSITION;\r\n\r\n   // Exports properties to set options for any transitions.\r\n   export let transitionOptions = void 0;\r\n   export let inTransitionOptions = s_DEFAULT_TRANSITION_OPTIONS;\r\n   export let outTransitionOptions = s_DEFAULT_TRANSITION_OPTIONS;\r\n\r\n   // Tracks last transition state.\r\n   let oldTransition = void 0;\r\n   let oldTransitionOptions = void 0\r\n\r\n   // Run this reactive block when the last transition state is not equal to the current state.\r\n   $: if (oldTransition !== transition)\r\n   {\r\n      // If transition is defined and not the default transition then set it to both in and out transition otherwise\r\n      // set the default transition to both in & out transitions.\r\n      const newTransition = s_DEFAULT_TRANSITION !== transition && typeof transition === 'function' ? transition :\r\n       s_DEFAULT_TRANSITION;\r\n\r\n      inTransition = newTransition;\r\n      outTransition = newTransition;\r\n\r\n      oldTransition = newTransition;\r\n   }\r\n\r\n   // Run this reactive block when the last transition options state is not equal to the current options state.\r\n   $: if (oldTransitionOptions !== transitionOptions)\r\n   {\r\n      const newOptions = transitionOptions !== s_DEFAULT_TRANSITION_OPTIONS && typeof transitionOptions === 'object' ?\r\n       transitionOptions : s_DEFAULT_TRANSITION_OPTIONS;\r\n\r\n      inTransitionOptions = newOptions;\r\n      outTransitionOptions = newOptions;\r\n\r\n      oldTransitionOptions = newOptions;\r\n   }\r\n\r\n   // Handle cases if inTransition is unset; assign noop default transition function.\r\n   $: if (typeof inTransition !== 'function') { inTransition = s_DEFAULT_TRANSITION; }\r\n\r\n   $:\r\n   {\r\n      // Handle cases if outTransition is unset; assign noop default transition function.\r\n      if (typeof outTransition !== 'function') { outTransition = s_DEFAULT_TRANSITION; }\r\n\r\n      // Set jquery close animation to either run or not when an out transition is changed.\r\n      if (application && typeof application?.options?.defaultCloseAnimation === 'boolean')\r\n      {\r\n         application.options.defaultCloseAnimation = outTransition === s_DEFAULT_TRANSITION;\r\n      }\r\n   }\r\n\r\n   // Handle cases if inTransitionOptions is unset; assign empty default transition options.\r\n   $: if (typeof inTransitionOptions !== 'object') { inTransitionOptions = s_DEFAULT_TRANSITION_OPTIONS; }\r\n\r\n   // Handle cases if outTransitionOptions is unset; assign empty default transition options.\r\n   $: if (typeof outTransitionOptions !== 'object') { outTransitionOptions = s_DEFAULT_TRANSITION_OPTIONS; }\r\n\r\n   // ---------------------------------------------------------------------------------------------------------------\r\n\r\n   /**\r\n    * Callback for content resizeObserver action. This is enabled when contentOffsetHeight or contentOffsetWidth is\r\n    * bound.\r\n    *\r\n    * @param {number}   offsetWidth - Observed offsetWidth.\r\n    *\r\n    * @param {number}   offsetHeight - Observed offsetHeight\r\n    */\r\n   function resizeObservedContent(offsetWidth, offsetHeight)\r\n   {\r\n      contentOffsetWidth = offsetWidth;\r\n      contentOffsetHeight = offsetHeight;\r\n   }\r\n\r\n   /**\r\n    * Callback for app resizeObserver action. This is enabled when appOffsetHeight or appOffsetWidth is\r\n    * bound. Additionally, the Application position resizeObserved store is updated.\r\n    *\r\n    * @param {number}   contentWidth - Observed contentWidth.\r\n    * @param {number}   contentHeight - Observed contentHeight\r\n    * @param {number}   offsetWidth - Observed offsetWidth.\r\n    * @param {number}   offsetHeight - Observed offsetHeight\r\n    */\r\n   function resizeObservedApp(offsetWidth, offsetHeight, contentWidth, contentHeight)\r\n   {\r\n      application.position.stores.resizeObserved.update((object) =>\r\n      {\r\n         object.contentWidth = contentWidth;\r\n         object.contentHeight = contentHeight;\r\n         object.offsetWidth = offsetWidth;\r\n         object.offsetHeight = offsetHeight;\r\n\r\n         return object;\r\n      });\r\n\r\n      appOffsetHeight = offsetHeight;\r\n      appOffsetWidth = offsetWidth;\r\n   }\r\n</script>\r\n\r\n<svelte:options accessors={true}/>\r\n\r\n<div id={application.id}\r\n    class=\"tjs-app tjs-window-app {application.options.classes.join(' ')}\"\r\n    data-appid={application.appId}\r\n    bind:this={elementRoot}\r\n    in:inTransition={inTransitionOptions}\r\n    out:outTransition={outTransitionOptions}\r\n    on:pointerdown|capture={bringToTop}\r\n    use:applyStyles={stylesApp}\r\n    use:appResizeObserver={resizeObservedApp}>\r\n   <TJSApplicationHeader {draggable} {draggableOptions} />\r\n   <section class=window-content\r\n            bind:this={elementContent}\r\n            use:applyStyles={stylesContent}\r\n            use:contentResizeObserver={resizeObservedContent}>\r\n       {#if Array.isArray(allChildren)}\r\n           <TJSContainer children={allChildren} />\r\n       {:else}\r\n           <slot />\r\n       {/if}\r\n   </section>\r\n   <ResizableHandle />\r\n</div>\r\n\r\n<style>\r\n    /**\r\n     * Defines styles that mimic a Foundry popout Application. `:global` is used to preserve the unused CSS in the\r\n     * template above. A primary benefit of a separate application shell implementation is that the styles are not\r\n     * overridden by any given game system / modules that might alter the standard Foundry Application CSS. This allows\r\n     * separate and unique styles to be given to this application regardless of game system / module modifications.\r\n     */\r\n    :global(.tjs-app) {\r\n        max-height: 100%;\r\n        background: url(/ui/denim075.png) repeat;\r\n        border-radius: 5px;\r\n        box-shadow: 0 0 20px #000;\r\n        margin: 3px 0;\r\n        padding: 0.5em;\r\n        color: #f0f0e0;\r\n        z-index: 95;\r\n        overflow: inherit;\r\n    }\r\n\r\n    :global(.tjs-window-app) {\r\n        display: flex;\r\n        flex-direction: column;\r\n        flex-wrap: nowrap;\r\n        justify-content: flex-start;\r\n        position: absolute;\r\n        box-shadow: 0 0 20px #000;\r\n        padding: 0;\r\n        z-index: 95;\r\n    }\r\n\r\n    :global(.tjs-window-app > *) {\r\n        flex: 1;\r\n    }\r\n\r\n    :global(.tjs-window-app > .flex0) {\r\n        display: block;\r\n        flex: 0;\r\n    }\r\n\r\n    :global(.tjs-window-app > .flex1) {\r\n        flex: 1;\r\n    }\r\n\r\n    :global(.tjs-window-app > .flex2) {\r\n        flex: 2;\r\n    }\r\n\r\n    :global(.tjs-window-app > .flex3) {\r\n        flex: 3;\r\n    }\r\n\r\n    :global(.tjs-window-app .window-header) {\r\n        flex: 0 0 30px;\r\n        overflow: hidden;\r\n        padding: 0 8px;\r\n        line-height: 30px;\r\n        border-bottom: 1px solid #000;\r\n    }\r\n\r\n    :global(.tjs-window-app .window-header .window-title) {\r\n        margin: 0;\r\n        word-break: break-all;\r\n    }\r\n\r\n    :global(.tjs-window-app .window-header a) {\r\n        flex: none;\r\n        margin: 0 0 0 8px;\r\n    }\r\n\r\n    :global(.tjs-window-app .window-header i[class^=fa]) {\r\n        margin-right: 3px;\r\n    }\r\n\r\n    :global(.tjs-window-app.minimized .window-header) {\r\n        border: 1px solid #000;\r\n    }\r\n\r\n    :global(.tjs-window-app .window-content) {\r\n        display: flex;\r\n        flex-direction: column;\r\n        flex-wrap: nowrap;\r\n        justify-content: flex-start;\r\n        padding: 8px;\r\n        color: #191813;\r\n        overflow-y: auto;\r\n        overflow-x: hidden;\r\n    }\r\n\r\n    :global(.window-app .window-content > *) {\r\n        flex: 1;\r\n    }\r\n\r\n    :global(.window-app .window-content > .flex0) {\r\n        display: block;\r\n        flex: 0;\r\n    }\r\n\r\n    :global(.window-app .window-content > .flex1) {\r\n        flex: 1;\r\n    }\r\n\r\n    :global(.window-app .window-content > .flex2) {\r\n        flex: 2;\r\n    }\r\n\r\n    :global(.window-app .window-content > .flex3) {\r\n        flex: 3;\r\n    }\r\n\r\n    :global(.window-app.zhover) {\r\n        z-index: calc(var(--z-index-window) + 1);\r\n    }\r\n\r\n    :global(.tjs-window-app .window-resizable-handle) {\r\n        width: 20px;\r\n        height: 20px;\r\n        position: absolute;\r\n        bottom: -1px;\r\n        right: 0;\r\n        background: #444;\r\n        padding: 2px;\r\n        border: 1px solid #111;\r\n        border-radius: 4px 0 0 0;\r\n    }\r\n\r\n    :global(.tjs-window-app .window-resizable-handle i.fas) {\r\n        transform: rotate(45deg);\r\n    }\r\n\r\n    :global(.window-app.minimized .window-resizable-handle) {\r\n        display: none;\r\n    }\r\n</style>\r\n","<script>\r\n   import { getContext }   from 'svelte';\r\n\r\n   import { applyStyles }  from '@typhonjs-fvtt/svelte/action';\r\n   import { localize }     from '@typhonjs-fvtt/svelte/helper';\r\n\r\n   import {\r\n      isObject,\r\n      isSvelteComponent,\r\n      parseSvelteConfig }  from '@typhonjs-fvtt/svelte/util';\r\n\r\n   export let data = {};\r\n   export let autoClose = true;\r\n   export let preventDefault = false;\r\n   export let stopPropagation = false;\r\n\r\n   export let dialogInstance = void 0;\r\n\r\n   const s_REGEX_HTML = /^\\s*<.*>$/;\r\n\r\n   let buttons;\r\n   let content = void 0;\r\n   let dialogComponent;\r\n   let dialogProps = {};\r\n\r\n   let application = getContext('external').application;\r\n\r\n   let currentButtonId = data.default;\r\n\r\n   // If `data.buttons` is not an object then set an empty array otherwise reduce the button data.\r\n   $:\r\n   {\r\n      buttons = !isObject(data.buttons) ? [] : Object.keys(data.buttons).reduce((array, key) =>\r\n      {\r\n         const b = data.buttons[key];\r\n\r\n         // Handle icon and treat bare strings as the icon class; otherwise assume the icon is fully formed HTML.\r\n         const icon = typeof b.icon !== 'string' ? void 0 : s_REGEX_HTML.test(b.icon) ? b.icon :\r\n          `<i class=\"${b.icon}\"></i>`;\r\n\r\n         const label = typeof b.label === 'string' ? `${icon !== void 0 ? ' ' : ''}${localize(b.label)}` : '';\r\n\r\n         const title = typeof b.title === 'string' ? localize(b.title) : void 0;\r\n\r\n         // Test any condition supplied otherwise default to true.\r\n         const condition = typeof b.condition === 'function' ? b.condition.call(b) : b.condition ?? true;\r\n\r\n         if (condition) { array.push({ ...b, id: key, icon, label, title }); }\r\n\r\n         return array;\r\n      }, []);\r\n   }\r\n\r\n   /**\r\n    * This reactivity block will trigger on arrow left / right key presses _and_ when buttons change. It is OK for it to\r\n    * trigger on both.\r\n    */\r\n   $: if (!buttons.find((button) => button.id === currentButtonId)) { currentButtonId = void 0; }\r\n\r\n   $: if (content !== data.content) // Only update the content if it has changed.\r\n   {\r\n      content = data.content;\r\n\r\n      try\r\n      {\r\n         if (isSvelteComponent(content))\r\n         {\r\n            dialogComponent = content;\r\n            dialogProps = {};\r\n         }\r\n         else if (typeof content === 'object')\r\n         {\r\n            const svelteConfig = parseSvelteConfig(content, application);\r\n            dialogComponent = svelteConfig.class;\r\n            dialogProps = svelteConfig.props ?? {};\r\n\r\n            // Check for any children parsed and added to the external context.\r\n            const children = svelteConfig?.context?.get('external')?.children;\r\n\r\n            // If so add to dialogProps.\r\n            if (Array.isArray(children)) { dialogProps.children = children; }\r\n         }\r\n         else\r\n         {\r\n            dialogComponent = void 0;\r\n            dialogProps = {};\r\n         }\r\n      }\r\n      catch (err)\r\n      {\r\n         dialogComponent = void 0;\r\n         dialogProps = {};\r\n\r\n         content = err.message;\r\n         console.error(err);\r\n      }\r\n   }\r\n\r\n   async function onClick(button)\r\n   {\r\n      try\r\n      {\r\n         let result = null;\r\n\r\n         // Accept either callback or onclick as the function / data to invoke.\r\n         const invoke = button.callback ?? button.onclick;\r\n\r\n         switch (typeof invoke)\r\n         {\r\n            case 'function':\r\n               // Passing back the HTML element is to keep with the existing Foundry API, however second parameter is\r\n               // the Svelte component instance.\r\n               result = await invoke(application.options.jQuery ? application.element : application.element[0],\r\n                dialogInstance);\r\n               break;\r\n\r\n            case 'string':\r\n               // Attempt lookup by function name in dialog instance component.\r\n               if (dialogInstance !== void 0 && typeof dialogInstance[invoke] === 'function')\r\n               {\r\n                  result = await dialogInstance[invoke](application.options.jQuery ? application.element :\r\n                   application.element[0], dialogInstance);\r\n               }\r\n               break;\r\n         }\r\n\r\n         // Delay closing to next clock tick to be able to return result.\r\n         if (autoClose) { setTimeout(() => application.close(), 0); }\r\n\r\n         return result;\r\n      }\r\n      catch(err)\r\n      {\r\n         ui.notifications.error(err);\r\n         throw new Error(err);\r\n      }\r\n   }\r\n\r\n   function onKeydown(event)\r\n   {\r\n      /**\r\n       * If this dialog is not the activeWindow then return immediately. See {@link SvelteApplication.bringToTop} as\r\n       * SvelteApplication overrides core Foundry and always sets the activeWindow when `bringToTop` is invoked.\r\n       */\r\n      if (event.key !== 'Escape' && ui.activeWindow !== application) { return; }\r\n\r\n      switch (event.key)\r\n      {\r\n         case 'ArrowLeft':\r\n         {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n\r\n            const currentIndex = buttons.findIndex((button) => button.id === currentButtonId);\r\n            if (buttons.length && currentIndex > 0)\r\n            {\r\n               currentButtonId = buttons[currentIndex - 1].id;\r\n            }\r\n            break;\r\n         }\r\n\r\n         case 'ArrowRight':\r\n         {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n\r\n            const currentIndex = buttons.findIndex((button) => button.id === currentButtonId);\r\n            if (buttons.length && currentIndex < buttons.length - 1)\r\n            {\r\n               currentButtonId = buttons[currentIndex + 1].id;\r\n            }\r\n            break;\r\n         }\r\n\r\n         case 'Escape':\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n            return application.close();\r\n\r\n         case 'Enter':\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n            if (currentButtonId && isObject(data.buttons) && currentButtonId in data.buttons)\r\n            {\r\n               onClick(data.buttons[currentButtonId]);\r\n            }\r\n            break;\r\n\r\n         default:\r\n            if (preventDefault) { event.preventDefault(); }\r\n            if (stopPropagation) { event.stopPropagation(); }\r\n            break;\r\n      }\r\n   }\r\n</script>\r\n\r\n<svelte:body on:keydown={onKeydown} />\r\n\r\n<div class=\"dialog-content\">\r\n   {#if typeof content === 'string'}\r\n      {@html content}\r\n   {:else if dialogComponent}\r\n      <svelte:component bind:this={dialogInstance} this={dialogComponent} {...dialogProps} />\r\n   {/if}\r\n</div>\r\n\r\n{#if buttons.length}\r\n<div class=\"dialog-buttons\">\r\n   {#each buttons as button (button.id)}\r\n   <button class=\"dialog-button {button.id}\"\r\n           on:click={() => onClick(button)}\r\n           class:default={button.id === currentButtonId}\r\n           use:applyStyles={button.styles}>\r\n      <span title={button.title}>{#if button.icon}{@html button.icon}{/if}{button.label}</span>\r\n   </button>\r\n   {/each}\r\n</div>\r\n{/if}\r\n\r\n<style>\r\n   div.dialog-buttons {\r\n      padding-top: 8px;\r\n   }\r\n</style>\r\n","<script>\r\n   import { getContext }               from 'svelte';\r\n   import { fade }                     from 'svelte/transition';\r\n\r\n   import ApplicationShell             from '../application/ApplicationShell.svelte';\r\n   import DialogContent                from './DialogContent.svelte';\r\n   import TJSGlassPane                 from '../TJSGlassPane.svelte';\r\n\r\n   // Application shell contract.\r\n   export let elementContent;\r\n   export let elementRoot;\r\n\r\n   // The dialog data.\r\n   export let data = {};\r\n\r\n   export let dialogComponent = void 0;\r\n\r\n   const application = getContext('external').application;\r\n\r\n   const s_MODAL_TRANSITION = fade;\r\n   const s_MODAL_TRANSITION_OPTIONS = { duration: 200 };\r\n   const s_MODAL_BACKGROUND = '#50505080'\r\n\r\n   let modal = void 0;\r\n\r\n   // Stores props for the ApplicationShell.\r\n   const appProps = {\r\n      // Stores any transition functions.\r\n      transition: void 0,\r\n      inTransition: void 0,\r\n      outTransition: void 0,\r\n\r\n      // Stores properties to set for options for any transitions.\r\n      transitionOptions: void 0,\r\n      inTransitionOptions: void 0,\r\n      outTransitionOptions: void 0,\r\n\r\n      // Stores any style overrides for application shell.\r\n      stylesApp: void 0,\r\n      stylesContent: void 0\r\n   }\r\n\r\n   const modalProps = {\r\n      // Background CSS style string.\r\n      background: void 0,\r\n\r\n      // Stores any transition functions.\r\n      transition: void 0,\r\n      inTransition: void 0,\r\n      outTransition: void 0,\r\n\r\n      // Stores properties to set for options for any transitions.\r\n      transitionOptions: void 0,\r\n      inTransitionOptions: void 0,\r\n      outTransitionOptions: void 0,\r\n   }\r\n\r\n   let zIndex = void 0;\r\n\r\n   // Automatically close the dialog on button click handler completion.\r\n   let autoClose = true;\r\n\r\n   // Only set modal once on mount. You can't change between a modal an non-modal dialog during runtime.\r\n   if (modal === void 0) { modal = typeof data?.modal === 'boolean' ? data.modal : false; }\r\n\r\n   // Retrieve values from the DialogData object and also potentially set any SvelteApplication accessors.\r\n   // Explicit checks are performed against existing local variables as the only externally reactive variable is `data`.\r\n   // All of the checks below trigger when there are any external changes to the `data` prop.\r\n   // Prevent any unnecessary changing of local & `application` variables unless actual changes occur.\r\n\r\n   // Foundry App options --------------------------------------------------------------------------------------------\r\n\r\n   $: if (typeof data === 'object')\r\n   {\r\n      autoClose = typeof data.autoClose === 'boolean' ? data.autoClose : true;\r\n\r\n      const newZIndex = Number.isInteger(data.zIndex) || data.zIndex === null ? data.zIndex :\r\n       modal ? Number.MAX_SAFE_INTEGER : Number.MAX_SAFE_INTEGER - 1\r\n      if (zIndex !== newZIndex) { zIndex = newZIndex; }\r\n\r\n      // Update the main foundry options when data changes. Perform explicit checks against existing data in `application`.\r\n      const newDraggable = data.draggable ?? true;\r\n      if (application.reactive.draggable !== newDraggable) { application.reactive.draggable = newDraggable; }\r\n\r\n      const newPopOut = data.popOut ?? true;\r\n      if (application.reactive.popOut !== newPopOut) { application.reactive.popOut = newPopOut; }\r\n\r\n      const newResizable = data.resizable ?? false;\r\n      if (application.reactive.resizable !== newResizable) { application.reactive.resizable = newResizable; }\r\n\r\n      // Note application.title from Application localizes `options.title`, so compare with `application.options.title`.\r\n      const newTitle = data.title ?? 'Dialog';\r\n      if (newTitle !== application?.options?.title) { application.reactive.title = newTitle; }\r\n\r\n      if (application.position.zIndex !== zIndex) { application.position.zIndex = zIndex; }\r\n   }\r\n\r\n   // ApplicationShell transition options ----------------------------------------------------------------------------\r\n\r\n   $: if (typeof data?.transition === 'object')\r\n   {\r\n      // Store data.transitions to shorten statements below.\r\n      const d = data.transition;\r\n\r\n      if (d?.transition !== appProps.transition) { appProps.transition = d.transition; }\r\n      if (d?.inTransition !== appProps.inTransition) { appProps.inTransition = d.inTransition; }\r\n      if (d?.outTransition !== appProps.outTransition) { appProps.outTransition = d.outTransition; }\r\n      if (d?.transitionOptions !== appProps.transitionOptions) { appProps.transitionOptions = d.transitionOptions; }\r\n\r\n      if (d?.inTransitionOptions !== appProps.inTransitionOptions)\r\n      {\r\n         appProps.inTransitionOptions = d.inTransitionOptions;\r\n      }\r\n\r\n      if (d?.outTransitionOptions !== appProps.outTransitionOptions)\r\n      {\r\n         appProps.outTransitionOptions = d.outTransitionOptions;\r\n      }\r\n   }\r\n\r\n   // Modal options --------------------------------------------------------------------------------------------------\r\n\r\n   $:\r\n   {\r\n      const newModalBackground = typeof data?.modalOptions?.background === 'string' ? data.modalOptions.background :\r\n       s_MODAL_BACKGROUND;\r\n\r\n      if (newModalBackground !== modalProps.background) { modalProps.background = newModalBackground; }\r\n   }\r\n\r\n   $: if (typeof data?.modalOptions?.transition === 'object')\r\n   {\r\n      // Store data.transitions to shorten statements below.\r\n      const d = data.modalOptions.transition;\r\n\r\n      if (d?.transition !== modalProps.transition)\r\n      {\r\n         modalProps.transition = typeof d?.transition === 'function' ? d.transition : s_MODAL_TRANSITION;\r\n      }\r\n\r\n      if (d?.inTransition !== modalProps.inTransition) { modalProps.inTransition = d.inTransition; }\r\n      if (d?.outTransition !== modalProps.outTransition) { modalProps.outTransition = d.outTransition; }\r\n\r\n      // Provide default transition options if not defined.\r\n      if (d?.transitionOptions !== modalProps.transitionOptions)\r\n      {\r\n         modalProps.transitionOptions = typeof d?.transitionOptions === 'object' ? d.transitionOptions :\r\n          s_MODAL_TRANSITION_OPTIONS;\r\n      }\r\n\r\n      if (d?.inTransitionOptions !== modalProps.inTransitionOptions)\r\n      {\r\n         modalProps.inTransitionOptions = d.inTransitionOptions;\r\n      }\r\n\r\n      if (d?.outTransitionOptions !== modalProps.outTransitionOptions)\r\n      {\r\n         modalProps.outTransitionOptions = d.outTransitionOptions;\r\n      }\r\n   }\r\n   else  // Provide a fallback / default glass pane transition when `data.modalOptions.transition` is not defined.\r\n   {\r\n      const newModalTransition = typeof data?.modalOptions?.transition?.transition === 'function' ?\r\n       data.modalOptions.transition.transition : s_MODAL_TRANSITION;\r\n\r\n      if (newModalTransition !== modalProps.transition) { modalProps.transition = newModalTransition; }\r\n\r\n      const newModalTransitionOptions = typeof data?.modalOptions?.transitionOptions === 'object' ?\r\n       data.modalOptions.transitionOptions : s_MODAL_TRANSITION_OPTIONS;\r\n\r\n      if (newModalTransitionOptions !== modalProps.transitionOptions)\r\n      {\r\n         modalProps.transitionOptions = newModalTransitionOptions;\r\n      }\r\n   }\r\n</script>\r\n\r\n<svelte:options accessors={true}/>\r\n\r\n{#if modal}\r\n   <TJSGlassPane id={`${application.id}-glasspane`} preventDefault={false} stopPropagation={false} {...modalProps} {zIndex}>\r\n      <ApplicationShell bind:elementRoot bind:elementContent {...appProps} appOffsetHeight={true}>\r\n         <DialogContent bind:autoClose bind:dialogInstance={dialogComponent} stopPropagation={true} {data} />\r\n      </ApplicationShell>\r\n   </TJSGlassPane>\r\n{:else}\r\n   <ApplicationShell bind:elementRoot bind:elementContent {...appProps} appOffsetHeight={true}>\r\n      <DialogContent bind:autoClose bind:dialogInstance={dialogComponent} {data} />\r\n   </ApplicationShell>\r\n{/if}\r\n"],"names":["s_REGEX_HTML","draggable","dragDefault"],"mappings":"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"}