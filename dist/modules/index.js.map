{"version":3,"file":"index.js","sources":["../../src/modules/application/GetSvelteData.js","../../src/modules/application/SvelteApplication.js","../../src/modules/application/TJSDialog.js","../../src/modules/application/TJSMenu.js"],"sourcesContent":["/**\r\n * Provides a helper class for {@link SvelteApplication} by combining all methods that work on the {@link SvelteData[]}\r\n * of mounted components. This class is instantiated and can be retrieved by the getter `svelte` via SvelteApplication.\r\n */\r\nclass GetSvelteData\r\n{\r\n   /**\r\n    * @type {ApplicationShell|null[]}\r\n    */\r\n   #applicationShellHolder;\r\n\r\n   /**\r\n    * @type {SvelteData[]}\r\n    */\r\n   #svelteData;\r\n\r\n   /**\r\n    * Keep a direct reference to the SvelteData array in an associated {@link SvelteApplication}.\r\n    *\r\n    * @param {ApplicationShell|null[]}  applicationShellHolder - A reference to the ApplicationShell array.\r\n    *\r\n    * @param {SvelteData[]}  svelteData - A reference to the SvelteData array of mounted components.\r\n    */\r\n   constructor(applicationShellHolder, svelteData)\r\n   {\r\n      this.#applicationShellHolder = applicationShellHolder;\r\n      this.#svelteData = svelteData;\r\n   }\r\n\r\n   /**\r\n    * Returns any mounted {@link ApplicationShell}.\r\n    *\r\n    * @returns {ApplicationShell|null} Any mounted application shell.\r\n    */\r\n   get applicationShell() { return this.#applicationShellHolder[0]; }\r\n\r\n   /**\r\n    * Returns the indexed Svelte component.\r\n    *\r\n    * @param {number}   index -\r\n    *\r\n    * @returns {object} The loaded Svelte component.\r\n    */\r\n   component(index)\r\n   {\r\n      const data = this.#svelteData[index];\r\n      return typeof data === 'object' ? data?.component : void 0;\r\n   }\r\n\r\n   /**\r\n    * Returns the Svelte component entries iterator.\r\n    *\r\n    * @returns {Generator<(number|*)[], void, *>} Svelte component entries iterator.\r\n    * @yields\r\n    */\r\n   *componentEntries()\r\n   {\r\n      for (let cntr = 0; cntr < this.#svelteData.length; cntr++)\r\n      {\r\n         yield [cntr, this.#svelteData[cntr].component];\r\n      }\r\n   }\r\n\r\n   /**\r\n    * Returns the Svelte component values iterator.\r\n    *\r\n    * @returns {Generator<*, void, *>} Svelte component values iterator.\r\n    * @yields\r\n    */\r\n   *componentValues()\r\n   {\r\n      for (let cntr = 0; cntr < this.#svelteData.length; cntr++)\r\n      {\r\n         yield this.#svelteData[cntr].component;\r\n      }\r\n   }\r\n\r\n   /**\r\n    * Returns the indexed SvelteData entry.\r\n    *\r\n    * @param {number}   index -\r\n    *\r\n    * @returns {object} The loaded Svelte config + component.\r\n    */\r\n   data(index)\r\n   {\r\n      return this.#svelteData[index];\r\n   }\r\n\r\n   /**\r\n    * Returns the SvelteData entries iterator.\r\n    *\r\n    * @returns {IterableIterator<[number, Object]>} SvelteData entries iterator.\r\n    */\r\n   dataEntries()\r\n   {\r\n      return this.#svelteData.entries();\r\n   }\r\n\r\n   /**\r\n    * Returns the SvelteData values iterator.\r\n    *\r\n    * @returns {IterableIterator<Object>} SvelteData values iterator.\r\n    */\r\n   dataValues()\r\n   {\r\n      return this.#svelteData.values();\r\n   }\r\n\r\n   get length()\r\n   {\r\n      return this.#svelteData.length;\r\n   }\r\n}\r\n\r\nObject.freeze(GetSvelteData);\r\n\r\nexport { GetSvelteData };\r\n\r\n/**\r\n * @typedef {object} SvelteData\r\n *\r\n * @property {object}            config -\r\n *\r\n * @property {SvelteComponent}   component -\r\n *\r\n * @property {HTMLElement}       element -\r\n *\r\n * @property {Eventbus}          eventbus -\r\n */","import { derived, writable }     from 'svelte/store';\r\nimport { safeAccess, safeSet }   from '@typhonjs-utils/object';\r\n\r\nimport {\r\n   hasGetter,\r\n   isApplicationShell,\r\n   outroAndDestroy,\r\n   parseSvelteConfig }           from '@typhonjs-fvtt/svelte/util';\r\n\r\nimport { GetSvelteData }         from './GetSvelteData.js';\r\n\r\n/**\r\n * Provides a Svelte aware extension to Application to control the app lifecycle appropriately. You can declaratively\r\n * load one or more components from `defaultOptions`. For the time being please refer to this temporary demo code\r\n * in `typhonjs-quest-log` for examples of how to declare Svelte components.\r\n * {@link https://github.com/typhonjs-fvtt/typhonjs-quest-log/tree/master/src/view/demo}\r\n *\r\n * A repository of demos will be available soon.\r\n */\r\nexport class SvelteApplication extends Application\r\n{\r\n   /**\r\n    * Stores the first mounted component which follows the application shell contract.\r\n    *\r\n    * @type {ApplicationShell|null[]} Application shell.\r\n    */\r\n   #applicationShellHolder = [null];\r\n\r\n   /**\r\n    * Get the current application shell.\r\n    *\r\n    * @returns {ApplicationShell|null} The first mounted component which follows the application shell contract.\r\n    */\r\n   get #applicationShell() { return this.#applicationShellHolder[0]; }\r\n\r\n   /**\r\n    * Stores the target element which may not necessarily be the main element.\r\n    *\r\n    * @type {HTMLElement}\r\n    */\r\n   #elementTarget = null;\r\n\r\n   /**\r\n    * Stores the content element which is set for application shells.\r\n    *\r\n    * @type {HTMLElement}\r\n    */\r\n   #elementContent = null;\r\n\r\n   /**\r\n    * The Application option store which is injected into mounted Svelte component context under the `external` key.\r\n    *\r\n    * @type {StoreAppOptions}\r\n    */\r\n   #storeAppOptions;\r\n\r\n   /**\r\n    * Stores the update function for `#storeAppOptions`.\r\n    *\r\n    * @type {import('svelte/store').Writable.update}\r\n    */\r\n   #storeAppOptionsUpdate;\r\n\r\n   /**\r\n    * The UI option store which is injected into mounted Svelte component context under the `external` key.\r\n    *\r\n    * @type {StoreUIOptions}\r\n    */\r\n   #storeUIOptions;\r\n\r\n   /**\r\n    * Stores the update function for `#storeUIOptions`.\r\n    *\r\n    * @type {import('svelte/store').Writable.update}\r\n    */\r\n   #storeUIOptionsUpdate;\r\n\r\n   /**\r\n    * Stores the unsubscribe functions from local store subscriptions.\r\n    *\r\n    * @type {import('svelte/store').Unsubscriber[]}\r\n    */\r\n   #storeUnsubscribe = [];\r\n\r\n   /**\r\n    * Stores SvelteData entries with instantiated Svelte components.\r\n    *\r\n    * @type {SvelteData[]}\r\n    */\r\n   #svelteData = [];\r\n\r\n   /**\r\n    * Provides a helper class that combines multiple methods for interacting with the mounted components tracked in\r\n    * {@link #svelteData}.\r\n    *\r\n    * @type {GetSvelteData}\r\n    */\r\n   #getSvelteData = new GetSvelteData(this.#applicationShellHolder, this.#svelteData);\r\n\r\n   /**\r\n    * @inheritDoc\r\n    */\r\n   constructor(options)\r\n   {\r\n      super(options);\r\n\r\n      this.#storesInitialize();\r\n   }\r\n\r\n   /**\r\n    * Specifies the default options that SvelteApplication supports.\r\n    *\r\n    * @returns {object} options - Application options.\r\n    * @see https://foundryvtt.com/api/Application.html#options\r\n    */\r\n   static get defaultOptions()\r\n   {\r\n      return foundry.utils.mergeObject(super.defaultOptions, {\r\n         draggable: true,              // If true then application shells are draggable.\r\n         headerButtonNoLabel: false,   // If true then header button labels are removed for application shells.\r\n         jqueryCloseAnimation: true,   // If false the Foundry JQuery close animation is not run.\r\n         zIndex: null                  // When set the zIndex is manually controlled.\r\n      });\r\n   }\r\n\r\n   /**\r\n    * Returns the draggable app option.\r\n    *\r\n    * @returns {boolean} Draggable app option.\r\n    */\r\n   get draggable() { return this.options.draggable; }\r\n\r\n   /**\r\n    * Returns the content element if an application shell is mounted.\r\n    *\r\n    * @returns {HTMLElement} Content element.\r\n    */\r\n   get elementContent() { return this.#elementContent; }\r\n\r\n   /**\r\n    * Returns the target element or main element if no target defined.\r\n    *\r\n    * @returns {HTMLElement} Target element.\r\n    */\r\n   get elementTarget() { return this.#elementTarget; }\r\n\r\n   /**\r\n    * @inheritDoc\r\n    */\r\n   get popOut() { return super.popOut; }\r\n\r\n   /**\r\n    * Returns the resizable option.\r\n    *\r\n    * @returns {boolean} Resizable app option.\r\n    */\r\n   get resizable() { return this.options.resizable; }\r\n\r\n   /**\r\n    * Returns the Svelte helper class w/ various methods to access mounted Svelte components.\r\n    *\r\n    * @returns {GetSvelteData} GetSvelteData\r\n    */\r\n   get svelte() { return this.#getSvelteData; }\r\n\r\n   /**\r\n    * Returns the title accessor from the parent Application class.\r\n    * TODO: Application v2; note that super.title localizes `this.options.title`; IMHO it shouldn't.\r\n    *\r\n    * @returns {string} Title.\r\n    */\r\n   get title() { return super.title; }\r\n\r\n   /**\r\n    * Returns the zIndex app option.\r\n    *\r\n    * @returns {number} z-index app option.\r\n    */\r\n   get zIndex() { return this.options.zIndex; }\r\n\r\n   /**\r\n    * Sets `this.options.draggable` which is reactive for application shells.\r\n    *\r\n    * @param {boolean}  draggable - Sets the draggable option.\r\n    */\r\n   set draggable(draggable)\r\n   {\r\n      if (typeof draggable === 'boolean') { this.setOptions('draggable', draggable); }\r\n   }\r\n\r\n   /**\r\n    * Sets the content element.\r\n    *\r\n    * @param {HTMLElement} content - Content element.\r\n    */\r\n   set elementContent(content)\r\n   {\r\n      if (!(content instanceof HTMLElement))\r\n      {\r\n         throw new TypeError(`SvelteApplication - set elementContent error: 'content' is not an HTMLElement.`);\r\n      }\r\n      this.#elementContent = content;\r\n   }\r\n\r\n   /**\r\n    * Sets the target element or main element if no target defined.\r\n    *\r\n    * @param {HTMLElement} target - Target element.\r\n    */\r\n   set elementTarget(target)\r\n   {\r\n      if (!(target instanceof HTMLElement))\r\n      {\r\n         throw new TypeError(`SvelteApplication - set elementTarget error: 'target' is not an HTMLElement.`);\r\n      }\r\n      this.#elementTarget = target;\r\n   }\r\n\r\n   /**\r\n    * Sets `this.options.popOut` which is reactive for application shells. This will add / remove this application\r\n    * from `ui.windows`.\r\n    *\r\n    * @param {boolean}  popOut - Sets the popOut option.\r\n    */\r\n   set popOut(popOut)\r\n   {\r\n      if (typeof popOut === 'boolean') { this.setOptions('popOut', popOut); }\r\n   }\r\n\r\n   /**\r\n    * Sets `this.options.resizable` which is reactive for application shells.\r\n    *\r\n    * @param {boolean}  resizable - Sets the resizable option.\r\n    */\r\n   set resizable(resizable)\r\n   {\r\n      if (typeof resizable === 'boolean') { this.setOptions('resizable', resizable); }\r\n   }\r\n\r\n   /**\r\n    * Sets `this.options.title` which is reactive for application shells.\r\n    *\r\n    * @param {string}   title - Application title; will be localized, so a translation key is fine.\r\n    */\r\n   set title(title)\r\n   {\r\n      if (typeof title === 'string') { this.setOptions('title', title); }\r\n   }\r\n\r\n   /**\r\n    * Sets `this.options.zIndex` which is reactive for application shells.\r\n    *\r\n    * @param {number}   zIndex - Application z-index.\r\n    */\r\n   set zIndex(zIndex)\r\n   {\r\n      this.setOptions('zIndex', Number.isInteger(zIndex) ? zIndex : null);\r\n   }\r\n\r\n   /**\r\n    * Note: This method is fully overridden and duplicated as Svelte components need to be destroyed manually and the\r\n    * best visual result is to destroy them after the default JQuery slide up animation occurs, but before the element\r\n    * is removed from the DOM.\r\n    *\r\n    * If you destroy the Svelte components before the slide up animation the Svelte elements are removed immediately\r\n    * from the DOM. The purpose of overriding ensures the slide up animation is always completed before\r\n    * the Svelte components are destroyed and then the element is removed from the DOM.\r\n    *\r\n    * Close the application and un-register references to it within UI mappings.\r\n    * This function returns a Promise which resolves once the window closing animation concludes\r\n    *\r\n    * @param {object}   options - Optional parameters.\r\n    *\r\n    * @param {boolean}  options.force - Force close regardless of render state.\r\n    *\r\n    * @returns {Promise<void|number>}    A Promise which resolves once the application is closed\r\n    */\r\n   async close(options = {})\r\n   {\r\n      const states = Application.RENDER_STATES;\r\n      if (!options.force && ![states.RENDERED, states.ERROR].includes(this._state)) { return; }\r\n\r\n      // Unsubscribe from any local stores.\r\n      this.#storesUnsubscribe();\r\n\r\n      this._state = states.CLOSING;\r\n\r\n      /**\r\n       * Get the element.\r\n       *\r\n       * @type {JQuery}\r\n       */\r\n      const el = $(this.#elementTarget);\r\n      if (!el) { return this._state = states.CLOSED; }\r\n\r\n      // Dispatch Hooks for closing the base and subclass applications\r\n      for (const cls of this.constructor._getInheritanceChain())\r\n      {\r\n         /**\r\n          * A hook event that fires whenever this Application is closed.\r\n          *\r\n          * @param {Application} app                     The Application instance being closed\r\n          *\r\n          * @param {jQuery[]} html                       The application HTML when it is closed\r\n          *\r\n          * @function closeApplication\r\n          *\r\n          * @memberof hookEvents\r\n          */\r\n         Hooks.call(`close${cls.name}`, this, el);\r\n      }\r\n\r\n      // If options `jqueryCloseAnimation` is false then do not execute the standard JQuery slide up animation.\r\n      // This allows Svelte components to provide any out transition. Application shells will automatically set\r\n      // `jqueryCloseAnimation` based on any out transition set or unset.\r\n      const animate = typeof this.options.jqueryCloseAnimation === 'boolean' ? this.options.jqueryCloseAnimation : true;\r\n      if (animate)\r\n      {\r\n         // Await on JQuery to slide up the main element.\r\n         el[0].style.minHeight = '0';\r\n         await new Promise((resolve) => { el.slideUp(200, () => resolve()); });\r\n      }\r\n\r\n      // Stores the Promises returned from running outro transitions and destroying each Svelte component.\r\n      const svelteDestroyPromises = [];\r\n\r\n      // Manually invoke the destroy callbacks for all Svelte components.\r\n      for (const entry of this.#svelteData)\r\n      {\r\n         // Use `outroAndDestroy` to run outro transitions before destroying.\r\n         svelteDestroyPromises.push(outroAndDestroy(entry.component));\r\n\r\n         // If any proxy eventbus has been added then remove all event registrations from the component.\r\n         const eventbus = entry.config.eventbus;\r\n         if (typeof eventbus === 'object' && typeof eventbus.off === 'function')\r\n         {\r\n            eventbus.off();\r\n            entry.config.eventbus = void 0;\r\n         }\r\n      }\r\n\r\n      // Await all Svelte components to destroy.\r\n      await Promise.all(svelteDestroyPromises);\r\n\r\n      // Reset SvelteData like this to maintain reference to GetSvelteData / `this.svelte`.\r\n      this.#svelteData.length = 0;\r\n\r\n      // Use JQuery to remove `this._element` from the DOM. Most SvelteComponents have already removed it.\r\n      el.remove();\r\n\r\n      // Clean up data\r\n      this.#applicationShellHolder[0] = null;\r\n      this._element = null;\r\n      this.#elementContent = null;\r\n      this.#elementTarget = null;\r\n      delete ui.windows[this.appId];\r\n      this._minimized = false;\r\n      this._scrollPositions = null;\r\n      this._state = states.CLOSED;\r\n\r\n      // Update the minimized UI store options.\r\n      this.#storeUIOptionsUpdate((storeOptions) => foundry.utils.mergeObject(storeOptions, {\r\n         minimized: this._minimized\r\n      }));\r\n   }\r\n\r\n   /**\r\n    * Provides a way to safely get this applications options given an accessor string which describes the\r\n    * entries to walk. To access deeper entries into the object format the accessor string with `.` between entries\r\n    * to walk.\r\n    *\r\n    * // TODO DOCUMENT the accessor in more detail.\r\n    *\r\n    * @param {string}   accessor - The path / key to set. You can set multiple levels.\r\n    *\r\n    * @param {*}        [defaultValue] - A default value returned if the accessor is not found.\r\n    *\r\n    * @returns {*} Value at the accessor.\r\n    */\r\n   getOptions(accessor, defaultValue)\r\n   {\r\n      return safeAccess(this.options, accessor, defaultValue);\r\n   }\r\n\r\n   /**\r\n    * Inject the Svelte components defined in `this.options.svelte`. The Svelte component can attach to the existing\r\n    * pop-out of Application or provide no template and render into a document fragment which is then attached to the\r\n    * DOM.\r\n    *\r\n    * @param {JQuery} html -\r\n    *\r\n    * @override\r\n    * @inheritDoc\r\n    */\r\n   _injectHTML(html)\r\n   {\r\n      if (this.popOut && html.length === 0 && Array.isArray(this.options.svelte))\r\n      {\r\n         throw new Error(\r\n          'SvelteApplication - _injectHTML - A popout app with no template can only support one Svelte component.');\r\n      }\r\n\r\n      // Make sure the store is updated with the latest header buttons. Also allows filtering buttons before display.\r\n      this.updateHeaderButtons();\r\n\r\n      if (Array.isArray(this.options.svelte))\r\n      {\r\n         for (const svelteConfig of this.options.svelte)\r\n         {\r\n            const svelteData = s_LOAD_CONFIG(this, html, svelteConfig, this.#storeAppOptions, this.#storeUIOptions);\r\n\r\n            if (isApplicationShell(svelteData.component))\r\n            {\r\n               if (this.#applicationShell !== null)\r\n               {\r\n                  throw new Error(\r\n                   `SvelteApplication - _injectHTML - An application shell is already mounted; offending config: \r\n                    ${JSON.stringify(svelteConfig)}`);\r\n               }\r\n\r\n               this.#applicationShellHolder[0] = svelteData.component;\r\n            }\r\n\r\n            this.#svelteData.push(svelteData);\r\n         }\r\n      }\r\n      else if (typeof this.options.svelte === 'object')\r\n      {\r\n         const svelteData = s_LOAD_CONFIG(this, html, this.options.svelte, this.#storeAppOptions, this.#storeUIOptions);\r\n\r\n         if (isApplicationShell(svelteData.component))\r\n         {\r\n            // A sanity check as shouldn't hit this case as only one component is being mounted.\r\n            if (this.#applicationShell !== null)\r\n            {\r\n               throw new Error(\r\n                `SvelteApplication - _injectHTML - An application shell is already mounted; offending config: \r\n                 ${JSON.stringify(this.options.svelte)}`);\r\n            }\r\n\r\n            this.#applicationShellHolder[0] = svelteData.component;\r\n         }\r\n\r\n         this.#svelteData.push(svelteData);\r\n      }\r\n      // TODO EVALUATE; COMMENTED OUT WHILE WORKING ON HandlebarsApplication.\r\n      // else\r\n      // {\r\n      //    throw new TypeError(`SvelteApplication - _injectHTML - this.options.svelte not an array or object.`);\r\n      // }\r\n\r\n      // Detect if this is a synthesized DocumentFragment.\r\n      const isDocumentFragment = html.length && html[0] instanceof DocumentFragment;\r\n\r\n      // If any of the Svelte components mounted directly targets an HTMLElement then do not inject HTML.\r\n      let injectHTML = true;\r\n      for (const svelteData of this.#svelteData)\r\n      {\r\n         if (!svelteData.injectHTML) { injectHTML = false; break; }\r\n      }\r\n      if (injectHTML) { super._injectHTML(html); }\r\n\r\n      if (this.#applicationShell !== null)\r\n      {\r\n         this._element = $(this.#applicationShell.elementRoot);\r\n\r\n         // Detect if the application shell exports an `elementContent` accessor.\r\n         this.#elementContent = hasGetter(this.#applicationShell, 'elementContent') ?\r\n          this.#applicationShell.elementContent : null;\r\n\r\n         // Detect if the application shell exports an `elementTarget` accessor.\r\n         this.#elementTarget = hasGetter(this.#applicationShell, 'elementTarget') ?\r\n          this.#applicationShell.elementTarget : null;\r\n      }\r\n      else if (isDocumentFragment) // Set the element of the app to the first child element in order of Svelte components mounted.\r\n      {\r\n         for (const svelteData of this.#svelteData)\r\n         {\r\n            if (svelteData.element instanceof HTMLElement)\r\n            {\r\n               this._element = $(svelteData.element);\r\n               break;\r\n            }\r\n         }\r\n      }\r\n\r\n      // Potentially retrieve a specific target element if `selectorTarget` is defined otherwise make the target the\r\n      // main element.\r\n      if (this.#elementTarget === null)\r\n      {\r\n         const element = typeof this.options.selectorTarget === 'string' ?\r\n          this._element.find(this.options.selectorTarget) : this._element;\r\n\r\n         this.#elementTarget = element[0];\r\n      }\r\n\r\n      // TODO VERIFY THIS CHECK ESPECIALLY `this.#elementTarget.length === 0`.\r\n      if (this.#elementTarget === null || this.#elementTarget === void 0 || this.#elementTarget.length === 0)\r\n      {\r\n         throw new Error(`SvelteApplication - _injectHTML: Target element '${this.options.selectorTarget}' not found.`);\r\n      }\r\n\r\n      // Subscribe to local store handling. Defer to next clock tick for the render cycle to complete.\r\n      setTimeout(() => this.#storesSubscribe(), 0);\r\n\r\n      this.onSvelteMount({ element: this._element[0], elementContent: this.#elementContent, elementTarget:\r\n       this.#elementTarget });\r\n   }\r\n\r\n   /**\r\n    * Provides a mechanism to update the UI options store for minimized.\r\n    *\r\n    * Note: the sanity check is duplicated from {@link Application.maximize} and the store is updated _before_\r\n    * the actual parent method is invoked. This allows application shells to remove / show any resize handlers\r\n    * correctly.\r\n    *\r\n    * @inheritDoc\r\n    */\r\n   async maximize()\r\n   {\r\n      if (!this.popOut || [false, null].includes(this._minimized)) { return; }\r\n\r\n      this.#storeUIOptionsUpdate((options) => foundry.utils.mergeObject(options, { minimized: false }));\r\n\r\n      return super.maximize();\r\n   }\r\n\r\n   /**\r\n    * Provides a mechanism to update the UI options store for minimized.\r\n    *\r\n    * Note: the sanity check is duplicated from {@link Application.minimize} and the store is updated _before_\r\n    * the actual parent method is invoked. This allows application shells to remove / show any resize handlers\r\n    * correctly.\r\n    *\r\n    * @inheritDoc\r\n    */\r\n   async minimize()\r\n   {\r\n      if (!this.rendered || !this.popOut || [true, null].includes(this._minimized)) { return; }\r\n\r\n      this.#storeUIOptionsUpdate((options) => foundry.utils.mergeObject(options, { minimized: true }));\r\n\r\n      return super.minimize();\r\n   }\r\n\r\n   /**\r\n    * Provides a way to merge `options` into this applications options and update the appOptions store.\r\n    *\r\n    * @param {object}   options - The options object to merge with `this.options`.\r\n    */\r\n   mergeOptions(options)\r\n   {\r\n      this.#storeAppOptionsUpdate((instanceOptions) => foundry.utils.mergeObject(instanceOptions, options));\r\n   }\r\n\r\n   /**\r\n    * Provides a callback after all Svelte components are initialized.\r\n    *\r\n    * @param {object}      [opts] - Optional parameters.\r\n    *\r\n    * @param {HTMLElement} [opts.element] - HTMLElement container for main application element.\r\n    *\r\n    * @param {HTMLElement} [opts.elementContent] - HTMLElement container for content area of application shells.\r\n    *\r\n    * @param {HTMLElement} [opts.elementTarget] - HTMLElement container for main application target element.\r\n    */\r\n   onSvelteMount({ element, elementContent, elementTarget }) {} // eslint-disable-line no-unused-vars\r\n\r\n   /**\r\n    * Override replacing HTML as Svelte components control the rendering process. Only potentially change the outer\r\n    * application frame / title for pop-out applications.\r\n    *\r\n    * @override\r\n    * @inheritDoc\r\n    */\r\n   _replaceHTML(element, html)  // eslint-disable-line no-unused-vars\r\n   {\r\n      if (!element.length) { return; }\r\n\r\n      this.updateHeaderButtons();\r\n\r\n   }\r\n\r\n   /**\r\n    * Render the inner application content. Only render a template if one is defined otherwise provide an empty\r\n    * JQuery element.\r\n    *\r\n    * @param {Object} data         The data used to render the inner template\r\n    *\r\n    * @returns {Promise.<JQuery>}   A promise resolving to the constructed jQuery object\r\n    *\r\n    * @override\r\n    * @private\r\n    */\r\n   async _renderInner(data)\r\n   {\r\n      const html = typeof this.template === 'string' ? await renderTemplate(this.template, data) :\r\n       document.createDocumentFragment();\r\n\r\n      return $(html);\r\n   }\r\n\r\n   /**\r\n    * Provides a way to safely set this applications options given an accessor string which describes the\r\n    * entries to walk. To access deeper entries into the object format the accessor string with `.` between entries\r\n    * to walk.\r\n    *\r\n    * Additionally if an application shell Svelte component is mounted and exports the `appOptions` property then\r\n    * the application options is set to `appOptions` potentially updating the application shell / Svelte component.\r\n    *\r\n    * // TODO DOCUMENT the accessor in more detail.\r\n    *\r\n    * @param {string}   accessor - The path / key to set. You can set multiple levels.\r\n    *\r\n    * @param {*}        value - Value to set.\r\n    */\r\n   setOptions(accessor, value)\r\n   {\r\n      const success = safeSet(this.options, accessor, value);\r\n\r\n      // If `this.options` modified then update the app options store.\r\n      if (success)\r\n      {\r\n         this.#storeAppOptionsUpdate(() => this.options);\r\n      }\r\n   }\r\n\r\n   /**\r\n    * Modified Application `setPosition` to support QuestTrackerApp for switchable resizable globalThis.\r\n    * Set the application position and store its new location.\r\n    *\r\n    * @param {object}               [opts] - Optional parameters.\r\n    *\r\n    * @param {number|null}          [opts.left] - The left offset position in pixels\r\n    *\r\n    * @param {number|null}          [opts.top] - The top offset position in pixels\r\n    *\r\n    * @param {number|null}          [opts.width] - The application width in pixels\r\n    *\r\n    * @param {number|string|null}   [opts.height] - The application height in pixels\r\n    *\r\n    * @param {number|null}          [opts.scale] - The application scale as a numeric factor where 1.0 is default\r\n    *\r\n    * @param {boolean}              [opts.noHeight] - When true no element height is modified.\r\n    *\r\n    * @param {boolean}              [opts.noWidth] - When true no element width is modified.\r\n    *\r\n    * @returns {{left: number, top: number, width: number, height: number, scale:number}}\r\n    * The updated position object for the application containing the new values\r\n    */\r\n   setPosition({ left, top, width, height, scale, noHeight = false, noWidth = false } = {})\r\n   {\r\n      const el = this.elementTarget;\r\n      const currentPosition = this.position;\r\n      const styles = globalThis.getComputedStyle(el);\r\n\r\n      // Update width if an explicit value is passed, or if no width value is set on the element\r\n      if (!el.style.width || width)\r\n      {\r\n         const tarW = width || el.offsetWidth;\r\n         const minW = parseInt(styles.minWidth) || MIN_WINDOW_WIDTH;\r\n         const maxW = el.style.maxWidth || globalThis.innerWidth;\r\n         currentPosition.width = width = Math.clamped(tarW, minW, maxW);\r\n\r\n         if (!noWidth) { el.style.width = `${width}px`; }\r\n         if ((width + currentPosition.left) > globalThis.innerWidth) { left = currentPosition.left; }\r\n      }\r\n      width = el.offsetWidth;\r\n\r\n      // Update height if an explicit value is passed, or if no height value is set on the element\r\n      if (!el.style.height || height)\r\n      {\r\n         const tarH = height || (el.offsetHeight + 1);\r\n         const minH = parseInt(styles.minHeight) || MIN_WINDOW_HEIGHT;\r\n         const maxH = el.style.maxHeight || globalThis.innerHeight;\r\n         currentPosition.height = height = Math.clamped(tarH, minH, maxH);\r\n\r\n         if (!noHeight) { el.style.height = `${height}px`; }\r\n         if ((height + currentPosition.top) > globalThis.innerHeight + 1) { top = currentPosition.top - 1; }\r\n      }\r\n      height = el.offsetHeight;\r\n\r\n      // Update Left\r\n      if ((!el.style.left) || Number.isFinite(left))\r\n      {\r\n         const tarL = Number.isFinite(left) ? left : (globalThis.innerWidth - width) / 2;\r\n         const maxL = Math.max(globalThis.innerWidth - width, 0);\r\n         currentPosition.left = left = Math.clamped(tarL, 0, maxL);\r\n         el.style.left = `${left}px`;\r\n      }\r\n\r\n      // Update Top\r\n      if ((!el.style.top) || Number.isFinite(top))\r\n      {\r\n         const tarT = Number.isFinite(top) ? top : (globalThis.innerHeight - height) / 2;\r\n         const maxT = Math.max(globalThis.innerHeight - height, 0);\r\n         currentPosition.top = top = Math.clamped(tarT, 0, maxT);\r\n         el.style.top = `${currentPosition.top}px`;\r\n      }\r\n\r\n      // Update Scale\r\n      if (scale)\r\n      {\r\n         currentPosition.scale = Math.max(scale, 0);\r\n         if (scale === 1) { el.style.transform = \"\"; }\r\n         else { el.style.transform = `scale(${scale})`; }\r\n      }\r\n\r\n      // Return the updated position object\r\n      return currentPosition;\r\n   }\r\n\r\n   /**\r\n    * Initializes the Svelte stores and derived stores for the application options and UI state.\r\n    *\r\n    * While writable stores are created the update method is stored in private variables locally and derived Readable\r\n    * stores are provided for essential options which are commonly used.\r\n    *\r\n    * These stores are injected into all Svelte components mounted under the `external` context: `storeAppOptions` and\r\n    * ` storeUIOptions`.\r\n    */\r\n   #storesInitialize()\r\n   {\r\n      const writtableAppOptions = writable(this.options);\r\n\r\n      // Keep the update function locally, but make the store essentially readable.\r\n      this.#storeAppOptionsUpdate = writtableAppOptions.update;\r\n\r\n      /**\r\n       * @type {StoreAppOptions}\r\n       */\r\n      const storeAppOptions = {\r\n         subscribe: writtableAppOptions.subscribe,\r\n\r\n         draggable: derived(writtableAppOptions, ($options, set) => set($options.draggable)),\r\n         minimizable: derived(writtableAppOptions, ($options, set) => set($options.minimizable)),\r\n         popOut: derived(writtableAppOptions, ($options, set) => set($options.popOut)),\r\n         resizable: derived(writtableAppOptions, ($options, set) => set($options.resizable)),\r\n         title: derived(writtableAppOptions, ($options, set) => set($options.title)),\r\n         zIndex: derived(writtableAppOptions,\r\n          ($options, set) => set(Number.isInteger($options.zIndex) ? $options.zIndex : null))\r\n      };\r\n\r\n      Object.freeze(storeAppOptions);\r\n\r\n      this.#storeAppOptions = storeAppOptions;\r\n\r\n      // Create a store for UI state data.\r\n      const writableUIOptions = writable({\r\n         headerButtons: [],\r\n         minimized: this._minimized\r\n      });\r\n\r\n      // Keep the update function locally, but make the store essentially readable.\r\n      this.#storeUIOptionsUpdate = writableUIOptions.update;\r\n\r\n      /**\r\n       * @type {StoreUIOptions}\r\n       */\r\n      const storeUIOptions = {\r\n         subscribe: writableUIOptions.subscribe,\r\n\r\n         headerButtons: derived(writableUIOptions, ($options, set) => set($options.headerButtons)),\r\n         minimized: derived(writableUIOptions, ($options, set) => set($options.minimized))\r\n      };\r\n\r\n      Object.freeze(storeUIOptions);\r\n\r\n      // Initialize the store with options set in the Application constructor.\r\n      this.#storeUIOptions = storeUIOptions;\r\n   }\r\n\r\n   /**\r\n    * Registers local store subscriptions for app options. `popOut` controls registering this app with `ui.windows`.\r\n    * `zIndex` controls the z-index style of the element root.\r\n    *\r\n    * @see SvelteApplication._injectHTML\r\n    */\r\n   #storesSubscribe()\r\n   {\r\n      // Register local subscriptions.\r\n      this.#storeUnsubscribe.push(this.#storeAppOptions.popOut.subscribe((value) =>\r\n      {\r\n         if (value && this.rendered)\r\n         {\r\n            ui.windows[this.appId] = this;\r\n         }\r\n         else\r\n         {\r\n            delete ui.windows[this.appId];\r\n         }\r\n      }));\r\n\r\n      // Handles directly updating the element root `z-index` style when `zIndex` changes.\r\n      this.#storeUnsubscribe.push(this.#storeAppOptions.zIndex.subscribe((value) =>\r\n      {\r\n         if (this._element !== null) { this._element[0].style.zIndex = value; }\r\n      }));\r\n   }\r\n\r\n   /**\r\n    * Unsubscribes from any locally monitored stores.\r\n    *\r\n    * @see SvelteApplication.close\r\n    */\r\n   #storesUnsubscribe()\r\n   {\r\n      this.#storeUnsubscribe.forEach((unsubscribe) => unsubscribe());\r\n      this.#storeUnsubscribe = [];\r\n   }\r\n\r\n   /**\r\n    * Updates the UI Options store with the current header buttons. You may dynamically add / remove header buttons\r\n    * if using an application shell Svelte component. In either overriding `_getHeaderButtons` or responding to the\r\n    * Hooks fired return a new button array and the uiOptions store is updated and the application shell will render\r\n    * the new buttons.\r\n    *\r\n    * Optionally you can set in the Foundry app options `headerButtonNoLabel` to true and labels will be removed from\r\n    * the header buttons.\r\n    */\r\n   updateHeaderButtons()\r\n   {\r\n      const buttons = this._getHeaderButtons();\r\n\r\n      // Remove labels if this.options.headerButtonNoLabel is true;\r\n      if (typeof this.options.headerButtonNoLabel === 'boolean' && this.options.headerButtonNoLabel)\r\n      {\r\n         for (const button of buttons) { button.label = void 0; }\r\n      }\r\n\r\n      this.#storeUIOptionsUpdate((options) =>\r\n      {\r\n         options.headerButtons = buttons;\r\n         return options;\r\n      });\r\n   }\r\n}\r\n\r\n/**\r\n * Instantiates and attaches a Svelte component to the main inserted HTML.\r\n *\r\n * @param {SvelteApplication} app - The application\r\n *\r\n * @param {JQuery}            html - The inserted HTML.\r\n *\r\n * @param {object}            config - Svelte component options\r\n *\r\n * @param {StoreAppOptions}   storeAppOptions - Svelte store for app options.\r\n *\r\n * @param {StoreUIOptions}    storeUIOptions - Svelte store for UI options.\r\n *\r\n * @returns {object} The config + instantiated Svelte component.\r\n */\r\nfunction s_LOAD_CONFIG(app, html, config, storeAppOptions, storeUIOptions)\r\n{\r\n   const svelteOptions = typeof config.options === 'object' ? config.options : {};\r\n\r\n   // TODO EVALUATE; COMMENTED OUT WHILE WORKING ON HandlebarsApplication.\r\n   // if (typeof app.template === 'string' && typeof config.target !== 'string')\r\n   // {\r\n   //    throw new TypeError(\r\n   //     `SvelteApplication - s_LOAD_CONFIG - Template defined and target selector not a string for config:\\n${\r\n   //      JSON.stringify(config)}`);\r\n   // }\r\n\r\n   let target;\r\n\r\n   if (config.target instanceof HTMLElement)       // A specific HTMLElement to append Svelte component.\r\n   {\r\n      target = config.target;\r\n   }\r\n   else if (typeof config.target === 'string')     // A string target defines a selector to find in existing HTML.\r\n   {\r\n      target = html.find(config.target).get(0);\r\n   }\r\n   else                                            // No target defined, create a document fragment.\r\n   {\r\n      target = document.createDocumentFragment();\r\n   }\r\n\r\n   if (target === void 0)\r\n   {\r\n      throw new Error(\r\n       `SvelteApplication - s_LOAD_CONFIG - could not find target selector: ${config.target} for config:\\n${\r\n        JSON.stringify(config)}`);\r\n   }\r\n\r\n   const SvelteComponent = config.class;\r\n\r\n   const svelteConfig = parseSvelteConfig({ ...config, target }, app);\r\n\r\n   const externalContext = svelteConfig.context.get('external');\r\n\r\n   // Inject the Foundry application instance as a Svelte prop.\r\n   externalContext.foundryApp = app;\r\n\r\n   // Always inject the appOptions and uiOptions stores.\r\n   externalContext.storeAppOptions = storeAppOptions;\r\n   externalContext.storeUIOptions = storeUIOptions;\r\n\r\n   let eventbus;\r\n\r\n   // Potentially inject any TyphonJS eventbus and track the proxy in the SvelteData instance.\r\n   if (typeof app._eventbus === 'object' && typeof app._eventbus.createProxy === 'function')\r\n   {\r\n      eventbus = app._eventbus.createProxy();\r\n      externalContext.eventbus = eventbus;\r\n   }\r\n\r\n   // Create the Svelte component.\r\n   const component = new SvelteComponent(svelteConfig);\r\n\r\n   // Set any eventbus to the config.\r\n   svelteConfig.eventbus = eventbus;\r\n\r\n   let element;\r\n\r\n   // We can directly get the root element from components which follow the application store contract.\r\n   if (isApplicationShell(component))\r\n   {\r\n      element = component.elementRoot;\r\n   }\r\n\r\n   // Detect if target is a synthesized DocumentFragment with an child element. Child elements will be present\r\n   // if the Svelte component mounts and renders initial content into the document fragment.\r\n   if (config.target instanceof DocumentFragment && target.firstElementChild)\r\n   {\r\n      if (element === void 0) { element = target.firstElementChild; }\r\n      html.append(target);\r\n   }\r\n   else if (config.target instanceof HTMLElement && element === void 0)\r\n   {\r\n      if (config.target instanceof HTMLElement && typeof svelteOptions.selectorElement !== 'string')\r\n      {\r\n         throw new Error(\r\n          `SvelteApplication - s_LOAD_CONFIG - HTMLElement target with no 'selectorElement' defined for config:\\n${\r\n           JSON.stringify(config)}`);\r\n      }\r\n\r\n      // The target is an HTMLElement so find the Application element from `selectorElement` option.\r\n      element = target.querySelector(svelteOptions.selectorElement);\r\n\r\n      if (element === null || element === void 0)\r\n      {\r\n         throw new Error(\r\n          `SvelteApplication - s_LOAD_CONFIG - HTMLElement target - could not find 'selectorElement' for config:\\n${\r\n           JSON.stringify(config)}`);\r\n      }\r\n   }\r\n\r\n   // If the configuration / original target is an HTML element then do not inject HTML.\r\n   const injectHTML = !(config.target instanceof HTMLElement);\r\n\r\n   const result = { config: svelteConfig, component, element, injectHTML };\r\n\r\n   Object.freeze(result);\r\n\r\n   return result;\r\n}","import { DialogShell }           from '@typhonjs-fvtt/svelte/component';\r\nimport { safeAccess, safeSet }   from '@typhonjs-utils/object';\r\n\r\nimport { SvelteApplication }     from './SvelteApplication.js';\r\n\r\n/**\r\n * Provides a Foundry API compatible dialog alternative implemented w/ Svelte. There are several features including\r\n * a glasspane / modal option with various styling and transition capabilities.\r\n */\r\nexport class TJSDialog extends SvelteApplication\r\n{\r\n   #data;\r\n\r\n   constructor(data, options)\r\n   {\r\n      super(options);\r\n\r\n      this.#data = data;\r\n   }\r\n\r\n   static get defaultOptions()\r\n   {\r\n      return foundry.utils.mergeObject(super.defaultOptions, {\r\n         classes: ['dialog'],\r\n         width: 400,\r\n         svelte: {\r\n            class: DialogShell,\r\n            intro: true,\r\n            target: document.body,\r\n            props: function() { return { data: this.#data }; }\r\n         }\r\n      });\r\n   }\r\n\r\n   get content() { return this.getDialogData('content'); }\r\n\r\n   get data() { return this.#data; }\r\n\r\n   set content(content) { this.setDialogData('content', content); }\r\n\r\n   set data(data)\r\n   {\r\n      this.#data = data;\r\n\r\n      const component = this.svelte.applicationShell;\r\n      if (component?.data) { component.data = data; }\r\n   }\r\n\r\n   /**\r\n    * Implemented only for backwards compatibility w/ default Foundry {@link Dialog} API.\r\n    *\r\n    * @param {JQuery}   html - JQuery element for content area.\r\n    */\r\n   activateListeners(html)\r\n   {\r\n      super.activateListeners(html);\r\n\r\n      if (this.data.render instanceof Function) { this.data.render(this.options.jQuery ? html : html[0]); }\r\n   }\r\n\r\n   async close(options)\r\n   {\r\n      /**\r\n       * Implemented only for backwards compatibility w/ default Foundry {@link Dialog} API.\r\n       */\r\n       if (this.data.close instanceof Function)\r\n      {\r\n         this.data.close(this.options.jQuery ? this.element : this.element[0]);\r\n      }\r\n\r\n      return super.close(options);\r\n   }\r\n\r\n   getDialogData(accessor, defaultValue)\r\n   {\r\n      return safeAccess(this.#data, accessor, defaultValue);\r\n   }\r\n\r\n   mergeDialogData(data)\r\n   {\r\n      this.data = foundry.utils.mergeObject(this.#data, data, { inplace: false });\r\n   }\r\n\r\n   /**\r\n    * Provides a way to safely set this dialogs data given an accessor string which describes the\r\n    * entries to walk. To access deeper entries into the object format the accessor string with `.` between entries\r\n    * to walk.\r\n    *\r\n    * Automatically the dialog data will be updated in the associated DialogShell Svelte component.\r\n    *\r\n    * // TODO DOCUMENT the accessor in more detail.\r\n    *\r\n    * @param {string}   accessor - The path / key to set. You can set multiple levels.\r\n    *\r\n    * @param {*}        value - Value to set.\r\n    */\r\n   setDialogData(accessor, value)\r\n   {\r\n      const success = safeSet(this.#data, accessor, value);\r\n\r\n      // If `this.options` modified then update the app options store.\r\n      if (success)\r\n      {\r\n         const component = this.svelte.component(0);\r\n         if (component?.data) { component.data = this.#data; }\r\n      }\r\n   }\r\n\r\n   // ---------------------------------------------------------------------------------------------------------------\r\n\r\n   static async confirm({ title, content, yes, no, render, defaultYes = true, rejectClose = false, options = {},\r\n    buttons = {}, draggable = true, modal = false, modalOptions = {}, popOut = true, resizable = false, transition = {},\r\n     zIndex } = {})\r\n   {\r\n      // Allow overwriting of default icon and labels.\r\n      const mergedButtons = foundry.utils.mergeObject({\r\n         yes: {\r\n            icon: '<i class=\"fas fa-check\"></i>',\r\n            label: game.i18n.localize('Yes')\r\n         },\r\n         no: {\r\n            icon: '<i class=\"fas fa-times\"></i>',\r\n            label: game.i18n.localize('No'),\r\n         }\r\n      }, buttons);\r\n\r\n      return new Promise((resolve, reject) =>\r\n      {\r\n         const dialog = new this({\r\n            title,\r\n            content,\r\n            render,\r\n            draggable,\r\n            modal,\r\n            modalOptions,\r\n            popOut,\r\n            resizable,\r\n            zIndex,\r\n            transition,\r\n            buttons: foundry.utils.mergeObject(mergedButtons, {\r\n               yes: {\r\n                  callback: (html) =>\r\n                  {\r\n                     const result = yes ? yes(html) : true;\r\n                     resolve(result);\r\n                  }\r\n               },\r\n               no: {\r\n                  callback: (html) =>\r\n                  {\r\n                     const result = no ? no(html) : false;\r\n                     resolve(result);\r\n                  }\r\n               }\r\n            }),\r\n            default: defaultYes ? \"yes\" : \"no\",\r\n            close: () =>\r\n            {\r\n               if (rejectClose) { reject('The confirmation Dialog was closed without a choice being made.'); }\r\n               else { resolve(null); }\r\n            },\r\n         }, options);\r\n         dialog.render(true);\r\n      });\r\n   }\r\n\r\n   static async prompt({ title, content, label, callback, render, rejectClose = false, options = {}, draggable = true,\r\n    icon = '<i class=\"fas fa-check\"></i>', modal = false, modalOptions = {}, popOut = true, resizable = false,\r\n     transition = {}, zIndex } = {})\r\n   {\r\n      return new Promise((resolve, reject) =>\r\n      {\r\n         const dialog = new this({\r\n            title,\r\n            content,\r\n            render,\r\n            draggable,\r\n            modal,\r\n            modalOptions,\r\n            popOut,\r\n            resizable,\r\n            transition,\r\n            zIndex,\r\n            buttons: {\r\n               ok: {\r\n                  icon,\r\n                  label,\r\n                  callback: (html) =>\r\n                  {\r\n                     const result = callback ? callback(html) : null;\r\n                     resolve(result);\r\n                  }\r\n               },\r\n            },\r\n            default: 'ok',\r\n            close: () =>\r\n            {\r\n               if (rejectClose)\r\n               {\r\n                  reject(new Error('The Dialog prompt was closed without being accepted.'));\r\n               }\r\n               else { resolve(null); }\r\n            },\r\n         }, options);\r\n         dialog.render(true);\r\n      });\r\n   }\r\n}","import { TJSContextMenu }  from '@typhonjs-fvtt/svelte/component';\r\n\r\n/**\r\n * Provides game wide menu functionality.\r\n */\r\nexport class TJSMenu\r\n{\r\n   /**\r\n    * Stores any active context menu.\r\n    */\r\n   static #contextMenu = void 0;\r\n\r\n   /**\r\n    * Creates and manages a game wide context menu.\r\n    *\r\n    * @param {object}   opts - Optional parameters.\r\n    *\r\n    * @param {string}   [opts.id] - A custom CSS ID to add to the menu.\r\n    *\r\n    * @param {number}   opts.x - X position for the top / left of the menu.\r\n    *\r\n    * @param {number}   opts.y - Y position for the top / left of the menu.\r\n    *\r\n    * @param {object[]} opts.items - Menu items to display.\r\n    *\r\n    * @param {number}   [opts.zIndex=10000] - Z-index for context menu.\r\n    *\r\n    * @param {...*}     [opts.transitionOptions] - The rest of opts defined the slideFade transition options.\r\n    */\r\n   static createContext({id = '', x = 0, y = 0, items = [], zIndex = 10000, ...transitionOptions} = {})\r\n   {\r\n      if (this.#contextMenu !== void 0) { return; }\r\n\r\n      // Create the new context menu with the last click x / y point.\r\n      this.#contextMenu = new TJSContextMenu({\r\n         target: document.body,\r\n         intro: true,\r\n         props: { id, x, y, items, zIndex, transitionOptions }\r\n      });\r\n\r\n      // Register an event listener to remove any active context menu if closed from a menu selection or pointer\r\n      // down event to `document.body`.\r\n      this.#contextMenu.$on('close', () => { this.#contextMenu = void 0; });\r\n   }\r\n}"],"names":["GetSvelteData","constructor","applicationShellHolder","svelteData","applicationShell","component","index","data","componentEntries","cntr","length","componentValues","dataEntries","entries","dataValues","values","Object","freeze","SvelteApplication","Application","options","defaultOptions","foundry","utils","mergeObject","draggable","headerButtonNoLabel","jqueryCloseAnimation","zIndex","elementContent","elementTarget","popOut","resizable","svelte","title","setOptions","content","HTMLElement","TypeError","target","Number","isInteger","close","states","RENDER_STATES","force","RENDERED","ERROR","includes","_state","CLOSING","el","$","CLOSED","cls","_getInheritanceChain","Hooks","call","name","animate","style","minHeight","Promise","resolve","slideUp","svelteDestroyPromises","entry","push","outroAndDestroy","eventbus","config","off","all","remove","_element","ui","windows","appId","_minimized","_scrollPositions","storeOptions","minimized","getOptions","accessor","defaultValue","safeAccess","_injectHTML","html","Array","isArray","Error","updateHeaderButtons","svelteConfig","s_LOAD_CONFIG","isApplicationShell","JSON","stringify","isDocumentFragment","DocumentFragment","injectHTML","elementRoot","hasGetter","element","selectorTarget","find","setTimeout","onSvelteMount","maximize","minimize","rendered","mergeOptions","instanceOptions","_replaceHTML","_renderInner","template","renderTemplate","document","createDocumentFragment","value","success","safeSet","setPosition","left","top","width","height","scale","noHeight","noWidth","currentPosition","position","styles","globalThis","getComputedStyle","tarW","offsetWidth","minW","parseInt","minWidth","MIN_WINDOW_WIDTH","maxW","maxWidth","innerWidth","Math","clamped","tarH","offsetHeight","minH","MIN_WINDOW_HEIGHT","maxH","maxHeight","innerHeight","isFinite","tarL","maxL","max","tarT","maxT","transform","buttons","_getHeaderButtons","button","label","headerButtons","writtableAppOptions","writable","update","storeAppOptions","subscribe","derived","$options","set","minimizable","writableUIOptions","storeUIOptions","forEach","unsubscribe","app","svelteOptions","get","SvelteComponent","class","parseSvelteConfig","externalContext","context","foundryApp","_eventbus","createProxy","firstElementChild","append","selectorElement","querySelector","result","TJSDialog","classes","DialogShell","intro","body","props","getDialogData","setDialogData","activateListeners","render","Function","jQuery","mergeDialogData","inplace","confirm","yes","no","defaultYes","rejectClose","modal","modalOptions","transition","mergedButtons","icon","game","i18n","localize","reject","dialog","callback","default","prompt","ok","TJSMenu","createContext","id","x","y","items","transitionOptions","TJSContextMenu","$on"],"mappings":"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"}