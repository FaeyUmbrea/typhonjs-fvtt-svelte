{"version":3,"file":"application-legacy.js","sources":["../../src/modules/application/legacy/HandlebarsApplication.js","../../src/modules/application/GetSvelteData.js","../../src/modules/application/legacy/SvelteFormApplication.js","../../src/modules/application/legacy/HandlebarsFormApplication.js"],"sourcesContent":["import { ApplicationShell }   from '@typhonjs-fvtt/svelte/component';\r\n\r\nimport { SvelteApplication }  from '@typhonjs-fvtt/svelte';\r\n\r\nexport class HandlebarsApplication extends SvelteApplication\r\n{\r\n   /**\r\n    * Temporarily holds the original popOut value when rendering.\r\n    *\r\n    * @type {boolean}\r\n    */\r\n   #orignalPopOut;\r\n\r\n   /**\r\n    * @inheritDoc\r\n    */\r\n   constructor(options)\r\n   {\r\n      super(options);\r\n\r\n      if (this.popOut)\r\n      {\r\n         this.options.svelte = foundry.utils.mergeObject(typeof this.options.svelte === 'object' ?\r\n          this.options.svelte : {}, {\r\n            class: ApplicationShell,\r\n            intro: true,\r\n            target: document.body\r\n         });\r\n      }\r\n   }\r\n\r\n   /**\r\n    * Temporarily set popOut to false to only render inner HTML. This inner HTML will be appended to the content area\r\n    * of ApplicationShell if the original popOut value is true.\r\n    *\r\n    * @inheritDoc\r\n    */\r\n   async _render(force, options)\r\n   {\r\n      this.#orignalPopOut = this.options.popOut;\r\n      this.options.popOut = false;\r\n      await super._render(force, options);\r\n      this.options.popOut = this.#orignalPopOut;\r\n   }\r\n\r\n   _injectHTML(html)\r\n   {\r\n      // Mounts any Svelte components.\r\n      super._injectHTML(html);\r\n\r\n      // Appends inner HTML content to application shell content element.\r\n      if (this.svelte?.applicationShell?.elementContent)\r\n      {\r\n         this.svelte.applicationShell.elementContent.appendChild(...html);\r\n      }\r\n   }\r\n\r\n   /**\r\n    * Override replacing HTML as Svelte components control the rendering process. Only potentially change the outer\r\n    * application frame / title for pop-out applications.\r\n    *\r\n    * @override\r\n    * @inheritDoc\r\n    */\r\n   _replaceHTML(element, html)  // eslint-disable-line no-unused-vars\r\n   {\r\n      if (!element.length) { return; }\r\n\r\n      super._replaceHTML(element, html);\r\n\r\n      if (this.svelte?.applicationShell?.elementContent)\r\n      {\r\n         const elementContent = this.svelte.applicationShell.elementContent;\r\n\r\n         // Remove existing children.\r\n         while (elementContent.firstChild && !elementContent.lastChild.remove()) {} // eslint-disable-line no-empty\r\n\r\n         elementContent.appendChild(...html);\r\n\r\n         // Use the setter from `SvelteFormApplication` to set the title store.\r\n         this.title = this.title; // eslint-disable-line no-self-assign\r\n      }\r\n      else\r\n      {\r\n         element.replaceWith(html);\r\n         this._element = html;\r\n         this.elementTarget = html[0];\r\n      }\r\n   }\r\n}","/**\r\n * Provides a helper class for {@link SvelteApplication} by combining all methods that work on the {@link SvelteData[]}\r\n * of mounted components. This class is instantiated and can be retrieved by the getter `svelte` via SvelteApplication.\r\n */\r\nclass GetSvelteData\r\n{\r\n   /**\r\n    * @type {ApplicationShell|null[]}\r\n    */\r\n   #applicationShellHolder;\r\n\r\n   /**\r\n    * @type {SvelteData[]}\r\n    */\r\n   #svelteData;\r\n\r\n   /**\r\n    * Keep a direct reference to the SvelteData array in an associated {@link SvelteApplication}.\r\n    *\r\n    * @param {ApplicationShell|null[]}  applicationShellHolder - A reference to the ApplicationShell array.\r\n    *\r\n    * @param {SvelteData[]}  svelteData - A reference to the SvelteData array of mounted components.\r\n    */\r\n   constructor(applicationShellHolder, svelteData)\r\n   {\r\n      this.#applicationShellHolder = applicationShellHolder;\r\n      this.#svelteData = svelteData;\r\n   }\r\n\r\n   /**\r\n    * Returns any mounted {@link ApplicationShell}.\r\n    *\r\n    * @returns {ApplicationShell|null} Any mounted application shell.\r\n    */\r\n   get applicationShell() { return this.#applicationShellHolder[0]; }\r\n\r\n   /**\r\n    * Returns the indexed Svelte component.\r\n    *\r\n    * @param {number}   index -\r\n    *\r\n    * @returns {object} The loaded Svelte component.\r\n    */\r\n   component(index)\r\n   {\r\n      const data = this.#svelteData[index];\r\n      return typeof data === 'object' ? data?.component : void 0;\r\n   }\r\n\r\n   /**\r\n    * Returns the Svelte component entries iterator.\r\n    *\r\n    * @returns {Generator<(number|*)[], void, *>} Svelte component entries iterator.\r\n    * @yields\r\n    */\r\n   *componentEntries()\r\n   {\r\n      for (let cntr = 0; cntr < this.#svelteData.length; cntr++)\r\n      {\r\n         yield [cntr, this.#svelteData[cntr].component];\r\n      }\r\n   }\r\n\r\n   /**\r\n    * Returns the Svelte component values iterator.\r\n    *\r\n    * @returns {Generator<*, void, *>} Svelte component values iterator.\r\n    * @yields\r\n    */\r\n   *componentValues()\r\n   {\r\n      for (let cntr = 0; cntr < this.#svelteData.length; cntr++)\r\n      {\r\n         yield this.#svelteData[cntr].component;\r\n      }\r\n   }\r\n\r\n   /**\r\n    * Returns the indexed SvelteData entry.\r\n    *\r\n    * @param {number}   index -\r\n    *\r\n    * @returns {object} The loaded Svelte config + component.\r\n    */\r\n   data(index)\r\n   {\r\n      return this.#svelteData[index];\r\n   }\r\n\r\n   /**\r\n    * Returns the SvelteData entries iterator.\r\n    *\r\n    * @returns {IterableIterator<[number, Object]>} SvelteData entries iterator.\r\n    */\r\n   dataEntries()\r\n   {\r\n      return this.#svelteData.entries();\r\n   }\r\n\r\n   /**\r\n    * Returns the SvelteData values iterator.\r\n    *\r\n    * @returns {IterableIterator<Object>} SvelteData values iterator.\r\n    */\r\n   dataValues()\r\n   {\r\n      return this.#svelteData.values();\r\n   }\r\n\r\n   get length()\r\n   {\r\n      return this.#svelteData.length;\r\n   }\r\n}\r\n\r\nObject.freeze(GetSvelteData);\r\n\r\nexport { GetSvelteData };\r\n\r\n/**\r\n * @typedef {object} SvelteData\r\n *\r\n * @property {object}            config -\r\n *\r\n * @property {SvelteComponent}   component -\r\n *\r\n * @property {HTMLElement}       element -\r\n *\r\n * @property {Eventbus}          eventbus -\r\n */","import { derived, writable }     from 'svelte/store';\r\nimport { safeAccess, safeSet }   from '@typhonjs-utils/object';\r\n\r\nimport {\r\n   hasGetter,\r\n   isApplicationShell,\r\n   outroAndDestroy,\r\n   parseSvelteConfig }           from '@typhonjs-fvtt/svelte/util';\r\n\r\nimport { GetSvelteData }         from '../GetSvelteData.js';\r\n\r\n/**\r\n * Provides a Svelte aware extension to FormApplication to control the app lifecycle appropriately.\r\n *\r\n * NOTE: THIS IS ONLY TO BE USED FOR {@link HandlebarsFormApplication}.\r\n *\r\n * @see SvelteApplication\r\n */\r\nexport class SvelteFormApplication extends FormApplication\r\n{\r\n   /**\r\n    * Stores the first mounted component which follows the application shell contract.\r\n    *\r\n    * @type {ApplicationShell|null[]} Application shell.\r\n    */\r\n   #applicationShellHolder = [null];\r\n\r\n   /**\r\n    * Get the current application shell.\r\n    *\r\n    * @returns {ApplicationShell|null} The first mounted component which follows the application shell contract.\r\n    */\r\n   get #applicationShell() { return this.#applicationShellHolder[0]; }\r\n\r\n   /**\r\n    * Stores the target element which may not necessarily be the main element.\r\n    *\r\n    * @type {HTMLElement}\r\n    */\r\n   #elementTarget = null;\r\n\r\n   /**\r\n    * Stores the content element which is set for application shells.\r\n    *\r\n    * @type {HTMLElement}\r\n    */\r\n   #elementContent = null;\r\n\r\n   /**\r\n    * The Application option store which is injected into mounted Svelte component context under the `external` key.\r\n    *\r\n    * @type {StoreAppOptions}\r\n    */\r\n   #storeAppOptions;\r\n\r\n   /**\r\n    * Stores the update function for `#storeAppOptions`.\r\n    *\r\n    * @type {import('svelte/store').Writable.update}\r\n    */\r\n   #storeAppOptionsUpdate;\r\n\r\n   /**\r\n    * The UI option store which is injected into mounted Svelte component context under the `external` key.\r\n    *\r\n    * @type {StoreUIOptions}\r\n    */\r\n   #storeUIOptions;\r\n\r\n   /**\r\n    * Stores the update function for `#storeUIOptions`.\r\n    *\r\n    * @type {import('svelte/store').Writable.update}\r\n    */\r\n   #storeUIOptionsUpdate;\r\n\r\n   /**\r\n    * Stores the unsubscribe functions from local store subscriptions.\r\n    *\r\n    * @type {import('svelte/store').Unsubscriber[]}\r\n    */\r\n   #storeUnsubscribe = [];\r\n\r\n   /**\r\n    * Stores SvelteData entries with instantiated Svelte components.\r\n    *\r\n    * @type {SvelteData[]}\r\n    */\r\n   #svelteData = [];\r\n\r\n   /**\r\n    * Provides a helper class that combines multiple methods for interacting with the mounted components tracked in\r\n    * {@link #svelteData}.\r\n    *\r\n    * @type {GetSvelteData}\r\n    */\r\n   #getSvelteData = new GetSvelteData(this.#applicationShellHolder, this.#svelteData);\r\n\r\n   /**\r\n    * @inheritDoc\r\n    */\r\n   constructor(object, options)\r\n   {\r\n      super(object, options);\r\n\r\n      this.#storesInitialize();\r\n   }\r\n\r\n   /**\r\n    * Specifies the default options that SvelteApplication supports.\r\n    *\r\n    * @returns {object} options - Application options.\r\n    * @see https://foundryvtt.com/api/Application.html#options\r\n    */\r\n   static get defaultOptions()\r\n   {\r\n      return foundry.utils.mergeObject(super.defaultOptions, {\r\n         draggable: true,              // If true then application shells are draggable.\r\n         headerButtonNoLabel: false,   // If true then header button labels are removed for application shells.\r\n         jqueryCloseAnimation: true,   // If false the Foundry JQuery close animation is not run.\r\n         zIndex: null                  // When set the zIndex is manually controlled.\r\n      });\r\n   }\r\n\r\n   /**\r\n    * Returns the draggable app option.\r\n    *\r\n    * @returns {boolean} Draggable app option.\r\n    */\r\n   get draggable() { return this.options.draggable; }\r\n\r\n   /**\r\n    * Returns the content element if an application shell is mounted.\r\n    *\r\n    * @returns {HTMLElement} Content element.\r\n    */\r\n   get elementContent() { return this.#elementContent; }\r\n\r\n   /**\r\n    * Returns the target element or main element if no target defined.\r\n    *\r\n    * @returns {HTMLElement} Target element.\r\n    */\r\n   get elementTarget() { return this.#elementTarget; }\r\n\r\n   /**\r\n    * @inheritDoc\r\n    */\r\n   get popOut() { return super.popOut; }\r\n\r\n   /**\r\n    * Returns the resizable option.\r\n    *\r\n    * @returns {boolean} Resizable app option.\r\n    */\r\n   get resizable() { return this.options.resizable; }\r\n\r\n   /**\r\n    * Returns the Svelte helper class w/ various methods to access mounted Svelte components.\r\n    *\r\n    * @returns {GetSvelteData} GetSvelteData\r\n    */\r\n   get svelte() { return this.#getSvelteData; }\r\n\r\n   /**\r\n    * Returns the title accessor from the parent Application class.\r\n    * TODO: Application v2; note that super.title localizes `this.options.title`; IMHO it shouldn't.\r\n    *\r\n    * @returns {string} Title.\r\n    */\r\n   get title() { return super.title; }\r\n\r\n   /**\r\n    * Returns the zIndex app option.\r\n    *\r\n    * @returns {number} z-index app option.\r\n    */\r\n   get zIndex() { return this.options.zIndex; }\r\n\r\n   /**\r\n    * Sets `this.options.draggable` which is reactive for application shells.\r\n    *\r\n    * @param {boolean}  draggable - Sets the draggable option.\r\n    */\r\n   set draggable(draggable)\r\n   {\r\n      if (typeof draggable === 'boolean') { this.setOptions('draggable', draggable); }\r\n   }\r\n\r\n   /**\r\n    * Sets the content element.\r\n    *\r\n    * @param {HTMLElement} content - Content element.\r\n    */\r\n   set elementContent(content)\r\n   {\r\n      if (!(content instanceof HTMLElement))\r\n      {\r\n         throw new TypeError(`SvelteFormApplication - set elementContent error: 'content' is not an HTMLElement.`);\r\n      }\r\n      this.#elementContent = content;\r\n   }\r\n\r\n   /**\r\n    * Sets the target element or main element if no target defined.\r\n    *\r\n    * @param {HTMLElement} target - Target element.\r\n    */\r\n   set elementTarget(target)\r\n   {\r\n      if (!(target instanceof HTMLElement))\r\n      {\r\n         throw new TypeError(`SvelteFormApplication - set elementTarget error: 'target' is not an HTMLElement.`);\r\n      }\r\n      this.#elementTarget = target;\r\n   }\r\n\r\n   /**\r\n    * Sets `this.options.popOut` which is reactive for application shells. This will add / remove this application\r\n    * from `ui.windows`.\r\n    *\r\n    * @param {boolean}  popOut - Sets the popOut option.\r\n    */\r\n   set popOut(popOut)\r\n   {\r\n      if (typeof popOut === 'boolean') { this.setOptions('popOut', popOut); }\r\n   }\r\n\r\n   /**\r\n    * Sets `this.options.resizable` which is reactive for application shells.\r\n    *\r\n    * @param {boolean}  resizable - Sets the resizable option.\r\n    */\r\n   set resizable(resizable)\r\n   {\r\n      if (typeof resizable === 'boolean') { this.setOptions('resizable', resizable); }\r\n   }\r\n\r\n   /**\r\n    * Sets `this.options.title` which is reactive for application shells.\r\n    *\r\n    * @param {string}   title - Application title; will be localized, so a translation key is fine.\r\n    */\r\n   set title(title)\r\n   {\r\n      if (typeof title === 'string') { this.setOptions('title', title); }\r\n   }\r\n\r\n   /**\r\n    * Sets `this.options.zIndex` which is reactive for application shells.\r\n    *\r\n    * @param {number}   zIndex - Application z-index.\r\n    */\r\n   set zIndex(zIndex)\r\n   {\r\n      this.setOptions('zIndex', Number.isInteger(zIndex) ? zIndex : null);\r\n   }\r\n\r\n   /**\r\n    * Note: This method is fully overridden and duplicated as Svelte components need to be destroyed manually and the\r\n    * best visual result is to destroy them after the default JQuery slide up animation occurs, but before the element\r\n    * is removed from the DOM.\r\n    *\r\n    * If you destroy the Svelte components before the slide up animation the Svelte elements are removed immediately\r\n    * from the DOM. The purpose of overriding ensures the slide up animation is always completed before\r\n    * the Svelte components are destroyed and then the element is removed from the DOM.\r\n    *\r\n    * Close the application and un-register references to it within UI mappings.\r\n    * This function returns a Promise which resolves once the window closing animation concludes\r\n    *\r\n    * @param {object}   options - Optional parameters.\r\n    *\r\n    * @param {boolean}  options.force - Force close regardless of render state.\r\n    *\r\n    * @returns {Promise<void|number>}    A Promise which resolves once the application is closed\r\n    */\r\n   async close(options = {})\r\n   {\r\n      const states = Application.RENDER_STATES;\r\n      if (!options.force && ![states.RENDERED, states.ERROR].includes(this._state)) { return; }\r\n\r\n      // Unsubscribe from any local stores.\r\n      this.#storesUnsubscribe();\r\n\r\n      this._state = states.CLOSING;\r\n\r\n      /**\r\n       * Get the element.\r\n       *\r\n       * @type {JQuery}\r\n       */\r\n      const el = $(this.#elementTarget);\r\n      if (!el) { return this._state = states.CLOSED; }\r\n\r\n      // Dispatch Hooks for closing the base and subclass applications\r\n      for (const cls of this.constructor._getInheritanceChain())\r\n      {\r\n         /**\r\n          * A hook event that fires whenever this Application is closed.\r\n          *\r\n          * @param {Application} app                     The Application instance being closed\r\n          *\r\n          * @param {jQuery[]} html                       The application HTML when it is closed\r\n          *\r\n          * @function closeApplication\r\n          *\r\n          * @memberof hookEvents\r\n          */\r\n         Hooks.call(`close${cls.name}`, this, el);\r\n      }\r\n\r\n      // If options `jqueryCloseAnimation` is false then do not execute the standard JQuery slide up animation.\r\n      // This allows Svelte components to provide any out transition. Application shells will automatically set\r\n      // `jqueryCloseAnimation` based on any out transition set or unset.\r\n      const animate = typeof this.options.jqueryCloseAnimation === 'boolean' ? this.options.jqueryCloseAnimation : true;\r\n      if (animate)\r\n      {\r\n         // Await on JQuery to slide up the main element.\r\n         el[0].style.minHeight = '0';\r\n         await new Promise((resolve) => { el.slideUp(200, () => resolve()); });\r\n      }\r\n\r\n      // Stores the Promises returned from running outro transitions and destroying each Svelte component.\r\n      const svelteDestroyPromises = [];\r\n\r\n      // Manually invoke the destroy callbacks for all Svelte components.\r\n      for (const entry of this.#svelteData)\r\n      {\r\n         // Use `outroAndDestroy` to run outro transitions before destroying.\r\n         svelteDestroyPromises.push(outroAndDestroy(entry.component));\r\n\r\n         // If any proxy eventbus has been added then remove all event registrations from the component.\r\n         const eventbus = entry.config.eventbus;\r\n         if (typeof eventbus === 'object' && typeof eventbus.off === 'function')\r\n         {\r\n            eventbus.off();\r\n            entry.config.eventbus = void 0;\r\n         }\r\n      }\r\n\r\n      // Await all Svelte components to destroy.\r\n      await Promise.all(svelteDestroyPromises);\r\n\r\n      // Reset SvelteData like this to maintain reference to GetSvelteData / `this.svelte`.\r\n      this.#svelteData.length = 0;\r\n\r\n      // Use JQuery to remove `this._element` from the DOM. Most SvelteComponents have already removed it.\r\n      el.remove();\r\n\r\n      // Clean up data\r\n      this.#applicationShellHolder[0] = null;\r\n      this._element = null;\r\n      this.#elementContent = null;\r\n      this.#elementTarget = null;\r\n      delete ui.windows[this.appId];\r\n      this._minimized = false;\r\n      this._scrollPositions = null;\r\n      this._state = states.CLOSED;\r\n\r\n      // Update the minimized UI store options.\r\n      this.#storeUIOptionsUpdate((storeOptions) => foundry.utils.mergeObject(storeOptions, {\r\n         minimized: this._minimized\r\n      }));\r\n   }\r\n\r\n   /**\r\n    * Provides a way to safely get this applications options given an accessor string which describes the\r\n    * entries to walk. To access deeper entries into the object format the accessor string with `.` between entries\r\n    * to walk.\r\n    *\r\n    * // TODO DOCUMENT the accessor in more detail.\r\n    *\r\n    * @param {string}   accessor - The path / key to set. You can set multiple levels.\r\n    *\r\n    * @param {*}        [defaultValue] - A default value returned if the accessor is not found.\r\n    *\r\n    * @returns {*} Value at the accessor.\r\n    */\r\n   getOptions(accessor, defaultValue)\r\n   {\r\n      return safeAccess(this.options, accessor, defaultValue);\r\n   }\r\n\r\n   /**\r\n    * Inject the Svelte components defined in `this.options.svelte`. The Svelte component can attach to the existing\r\n    * pop-out of Application or provide no template and render into a document fragment which is then attached to the\r\n    * DOM.\r\n    *\r\n    * @param {JQuery} html -\r\n    *\r\n    * @override\r\n    * @inheritDoc\r\n    */\r\n   _injectHTML(html)\r\n   {\r\n      if (this.popOut && html.length === 0 && Array.isArray(this.options.svelte))\r\n      {\r\n         throw new Error(\r\n          'SvelteApplication - _injectHTML - A popout app with no template can only support one Svelte component.');\r\n      }\r\n\r\n      // Make sure the store is updated with the latest header buttons. Also allows filtering buttons before display.\r\n      this.updateHeaderButtons();\r\n\r\n      if (Array.isArray(this.options.svelte))\r\n      {\r\n         for (const svelteConfig of this.options.svelte)\r\n         {\r\n            const svelteData = s_LOAD_CONFIG(this, html, svelteConfig, this.#storeAppOptions, this.#storeUIOptions);\r\n\r\n            if (isApplicationShell(svelteData.component))\r\n            {\r\n               if (this.#applicationShell !== null)\r\n               {\r\n                  throw new Error(\r\n                   `SvelteApplication - _injectHTML - An application shell is already mounted; offending config: \r\n                    ${JSON.stringify(svelteConfig)}`);\r\n               }\r\n\r\n               this.#applicationShellHolder[0] = svelteData.component;\r\n            }\r\n\r\n            this.#svelteData.push(svelteData);\r\n         }\r\n      }\r\n      else if (typeof this.options.svelte === 'object')\r\n      {\r\n         const svelteData = s_LOAD_CONFIG(this, html, this.options.svelte, this.#storeAppOptions, this.#storeUIOptions);\r\n\r\n         if (isApplicationShell(svelteData.component))\r\n         {\r\n            // A sanity check as shouldn't hit this case as only one component is being mounted.\r\n            if (this.#applicationShell !== null)\r\n            {\r\n               throw new Error(\r\n                `SvelteApplication - _injectHTML - An application shell is already mounted; offending config: \r\n                 ${JSON.stringify(this.options.svelte)}`);\r\n            }\r\n\r\n            this.#applicationShellHolder[0] = svelteData.component;\r\n         }\r\n\r\n         this.#svelteData.push(svelteData);\r\n      }\r\n      // TODO EVALUATE; COMMENTED OUT WHILE WORKING ON HandlebarsApplication.\r\n      // else\r\n      // {\r\n      //    throw new TypeError(`SvelteApplication - _injectHTML - this.options.svelte not an array or object.`);\r\n      // }\r\n\r\n      // Detect if this is a synthesized DocumentFragment.\r\n      const isDocumentFragment = html.length && html[0] instanceof DocumentFragment;\r\n\r\n      // If any of the Svelte components mounted directly targets an HTMLElement then do not inject HTML.\r\n      let injectHTML = true;\r\n      for (const svelteData of this.#svelteData)\r\n      {\r\n         if (!svelteData.injectHTML) { injectHTML = false; break; }\r\n      }\r\n      if (injectHTML) { super._injectHTML(html); }\r\n\r\n      if (this.#applicationShell !== null)\r\n      {\r\n         this._element = $(this.#applicationShell.elementRoot);\r\n\r\n         // Detect if the application shell exports an `elementContent` accessor.\r\n         this.#elementContent = hasGetter(this.#applicationShell, 'elementContent') ?\r\n          this.#applicationShell.elementContent : null;\r\n\r\n         // Detect if the application shell exports an `elementTarget` accessor.\r\n         this.#elementTarget = hasGetter(this.#applicationShell, 'elementTarget') ?\r\n          this.#applicationShell.elementTarget : null;\r\n      }\r\n      else if (isDocumentFragment) // Set the element of the app to the first child element in order of Svelte components mounted.\r\n      {\r\n         for (const svelteData of this.#svelteData)\r\n         {\r\n            if (svelteData.element instanceof HTMLElement)\r\n            {\r\n               this._element = $(svelteData.element);\r\n               break;\r\n            }\r\n         }\r\n      }\r\n\r\n      // Potentially retrieve a specific target element if `selectorTarget` is defined otherwise make the target the\r\n      // main element.\r\n      if (this.#elementTarget === null)\r\n      {\r\n         const element = typeof this.options.selectorTarget === 'string' ?\r\n          this._element.find(this.options.selectorTarget) : this._element;\r\n\r\n         this.#elementTarget = element[0];\r\n      }\r\n\r\n      // TODO VERIFY THIS CHECK ESPECIALLY `this.#elementTarget.length === 0`.\r\n      if (this.#elementTarget === null || this.#elementTarget === void 0 || this.#elementTarget.length === 0)\r\n      {\r\n         throw new Error(`SvelteApplication - _injectHTML: Target element '${this.options.selectorTarget}' not found.`);\r\n      }\r\n\r\n      // Subscribe to local store handling. Defer to next clock tick for the render cycle to complete.\r\n      setTimeout(() => this.#storesSubscribe(), 0);\r\n\r\n      this.onSvelteMount({ element: this._element[0], elementContent: this.#elementContent, elementTarget:\r\n         this.#elementTarget });\r\n   }\r\n\r\n   /**\r\n    * Provides a mechanism to update the UI options store for minimized.\r\n    *\r\n    * Note: the sanity check is duplicated from {@link Application.maximize} and the store is updated _before_\r\n    * the actual parent method is invoked. This allows application shells to remove / show any resize handlers\r\n    * correctly.\r\n    *\r\n    * @inheritDoc\r\n    */\r\n   async maximize()\r\n   {\r\n      if (!this.popOut || [false, null].includes(this._minimized)) { return; }\r\n\r\n      this.#storeUIOptionsUpdate((options) => foundry.utils.mergeObject(options, { minimized: false }));\r\n\r\n      return super.maximize();\r\n   }\r\n\r\n   /**\r\n    * Provides a mechanism to update the UI options store for minimized.\r\n    *\r\n    * Note: the sanity check is duplicated from {@link Application.minimize} and the store is updated _before_\r\n    * the actual parent method is invoked. This allows application shells to remove / show any resize handlers\r\n    * correctly.\r\n    *\r\n    * @inheritDoc\r\n    */\r\n   async minimize()\r\n   {\r\n      if (!this.rendered || !this.popOut || [true, null].includes(this._minimized)) { return; }\r\n\r\n      this.#storeUIOptionsUpdate((options) => foundry.utils.mergeObject(options, { minimized: true }));\r\n\r\n      return super.minimize();\r\n   }\r\n\r\n   /**\r\n    * Provides a way to merge `options` into this applications options and update the appOptions store.\r\n    *\r\n    * @param {object}   options - The options object to merge with `this.options`.\r\n    */\r\n   mergeOptions(options)\r\n   {\r\n      this.#storeAppOptionsUpdate((instanceOptions) => foundry.utils.mergeObject(instanceOptions, options));\r\n   }\r\n\r\n   /**\r\n    * Provides a callback after all Svelte components are initialized.\r\n    *\r\n    * @param {object}      [opts] - Optional parameters.\r\n    *\r\n    * @param {HTMLElement} [opts.element] - HTMLElement container for main application element.\r\n    *\r\n    * @param {HTMLElement} [opts.elementContent] - HTMLElement container for content area of application shells.\r\n    *\r\n    * @param {HTMLElement} [opts.elementTarget] - HTMLElement container for main application target element.\r\n    */\r\n   onSvelteMount({ element, elementContent, elementTarget }) {} // eslint-disable-line no-unused-vars\r\n\r\n   /**\r\n    * Override replacing HTML as Svelte components control the rendering process. Only potentially change the outer\r\n    * application frame / title for pop-out applications.\r\n    *\r\n    * @override\r\n    * @inheritDoc\r\n    */\r\n   _replaceHTML(element, html)  // eslint-disable-line no-unused-vars\r\n   {\r\n      if (!element.length) { return; }\r\n\r\n      this.updateHeaderButtons();\r\n   }\r\n\r\n   /**\r\n    * Render the inner application content. Only render a template if one is defined otherwise provide an empty\r\n    * JQuery element.\r\n    *\r\n    * @param {Object} data         The data used to render the inner template\r\n    *\r\n    * @returns {Promise.<JQuery>}   A promise resolving to the constructed jQuery object\r\n    *\r\n    * @override\r\n    * @private\r\n    */\r\n   async _renderInner(data)\r\n   {\r\n      const html = typeof this.template === 'string' ? await renderTemplate(this.template, data) :\r\n       document.createDocumentFragment();\r\n\r\n      return $(html);\r\n   }\r\n\r\n   /**\r\n    * Provides a way to safely set this applications options given an accessor string which describes the\r\n    * entries to walk. To access deeper entries into the object format the accessor string with `.` between entries\r\n    * to walk.\r\n    *\r\n    * Additionally if an application shell Svelte component is mounted and exports the `appOptions` property then\r\n    * the application options is set to `appOptions` potentially updating the application shell / Svelte component.\r\n    *\r\n    * // TODO DOCUMENT the accessor in more detail.\r\n    *\r\n    * @param {string}   accessor - The path / key to set. You can set multiple levels.\r\n    *\r\n    * @param {*}        value - Value to set.\r\n    */\r\n   setOptions(accessor, value)\r\n   {\r\n      const success = safeSet(this.options, accessor, value);\r\n\r\n      // If `this.options` modified then update the app options store.\r\n      if (success)\r\n      {\r\n         this.#storeAppOptionsUpdate(() => this.options);\r\n      }\r\n   }\r\n\r\n   /**\r\n    * Modified Application `setPosition` to support QuestTrackerApp for switchable resizable globalThis.\r\n    * Set the application position and store its new location.\r\n    *\r\n    * @param {object}               [opts] - Optional parameters.\r\n    *\r\n    * @param {number|null}          [opts.left] - The left offset position in pixels\r\n    *\r\n    * @param {number|null}          [opts.top] - The top offset position in pixels\r\n    *\r\n    * @param {number|null}          [opts.width] - The application width in pixels\r\n    *\r\n    * @param {number|string|null}   [opts.height] - The application height in pixels\r\n    *\r\n    * @param {number|null}          [opts.scale] - The application scale as a numeric factor where 1.0 is default\r\n    *\r\n    * @param {boolean}              [opts.noHeight] - When true no element height is modified.\r\n    *\r\n    * @param {boolean}              [opts.noWidth] - When true no element width is modified.\r\n    *\r\n    * @returns {{left: number, top: number, width: number, height: number, scale:number}}\r\n    * The updated position object for the application containing the new values\r\n    */\r\n   setPosition({ left, top, width, height, scale, noHeight = false, noWidth = false } = {})\r\n   {\r\n      const el = this.elementTarget;\r\n      const currentPosition = this.position;\r\n      const styles = globalThis.getComputedStyle(el);\r\n\r\n      // Update width if an explicit value is passed, or if no width value is set on the element\r\n      if (!el.style.width || width)\r\n      {\r\n         const tarW = width || el.offsetWidth;\r\n         const minW = parseInt(styles.minWidth) || MIN_WINDOW_WIDTH;\r\n         const maxW = el.style.maxWidth || globalThis.innerWidth;\r\n         currentPosition.width = width = Math.clamped(tarW, minW, maxW);\r\n\r\n         if (!noWidth) { el.style.width = `${width}px`; }\r\n         if ((width + currentPosition.left) > globalThis.innerWidth) { left = currentPosition.left; }\r\n      }\r\n      width = el.offsetWidth;\r\n\r\n      // Update height if an explicit value is passed, or if no height value is set on the element\r\n      if (!el.style.height || height)\r\n      {\r\n         const tarH = height || (el.offsetHeight + 1);\r\n         const minH = parseInt(styles.minHeight) || MIN_WINDOW_HEIGHT;\r\n         const maxH = el.style.maxHeight || globalThis.innerHeight;\r\n         currentPosition.height = height = Math.clamped(tarH, minH, maxH);\r\n\r\n         if (!noHeight) { el.style.height = `${height}px`; }\r\n         if ((height + currentPosition.top) > globalThis.innerHeight + 1) { top = currentPosition.top - 1; }\r\n      }\r\n      height = el.offsetHeight;\r\n\r\n      // Update Left\r\n      if ((!el.style.left) || Number.isFinite(left))\r\n      {\r\n         const tarL = Number.isFinite(left) ? left : (globalThis.innerWidth - width) / 2;\r\n         const maxL = Math.max(globalThis.innerWidth - width, 0);\r\n         currentPosition.left = left = Math.clamped(tarL, 0, maxL);\r\n         el.style.left = `${left}px`;\r\n      }\r\n\r\n      // Update Top\r\n      if ((!el.style.top) || Number.isFinite(top))\r\n      {\r\n         const tarT = Number.isFinite(top) ? top : (globalThis.innerHeight - height) / 2;\r\n         const maxT = Math.max(globalThis.innerHeight - height, 0);\r\n         currentPosition.top = top = Math.clamped(tarT, 0, maxT);\r\n         el.style.top = `${currentPosition.top}px`;\r\n      }\r\n\r\n      // Update Scale\r\n      if (scale)\r\n      {\r\n         currentPosition.scale = Math.max(scale, 0);\r\n         if (scale === 1) { el.style.transform = \"\"; }\r\n         else { el.style.transform = `scale(${scale})`; }\r\n      }\r\n\r\n      // Return the updated position object\r\n      return currentPosition;\r\n   }\r\n\r\n   /**\r\n    * Initializes the Svelte stores and derived stores for the application options and UI state.\r\n    *\r\n    * While writable stores are created the update method is stored in private variables locally and derived Readable\r\n    * stores are provided for essential options which are commonly used.\r\n    *\r\n    * These stores are injected into all Svelte components mounted under the `external` context: `storeAppOptions` and\r\n    * ` storeUIOptions`.\r\n    */\r\n   #storesInitialize()\r\n   {\r\n      const writtableAppOptions = writable(this.options);\r\n\r\n      // Keep the update function locally, but make the store essentially readable.\r\n      this.#storeAppOptionsUpdate = writtableAppOptions.update;\r\n\r\n      /**\r\n       * @type {StoreAppOptions}\r\n       */\r\n      const storeAppOptions = {\r\n         subscribe: writtableAppOptions.subscribe,\r\n\r\n         draggable: derived(writtableAppOptions, ($options, set) => set($options.draggable)),\r\n         minimizable: derived(writtableAppOptions, ($options, set) => set($options.minimizable)),\r\n         popOut: derived(writtableAppOptions, ($options, set) => set($options.popOut)),\r\n         resizable: derived(writtableAppOptions, ($options, set) => set($options.resizable)),\r\n         title: derived(writtableAppOptions, ($options, set) => set($options.title)),\r\n         zIndex: derived(writtableAppOptions,\r\n          ($options, set) => set(Number.isInteger($options.zIndex) ? $options.zIndex : null))\r\n      };\r\n\r\n      Object.freeze(storeAppOptions);\r\n\r\n      this.#storeAppOptions = storeAppOptions;\r\n\r\n      // Create a store for UI state data.\r\n      const writableUIOptions = writable({\r\n         headerButtons: [],\r\n         minimized: this._minimized\r\n      });\r\n\r\n      // Keep the update function locally, but make the store essentially readable.\r\n      this.#storeUIOptionsUpdate = writableUIOptions.update;\r\n\r\n      /**\r\n       * @type {StoreUIOptions}\r\n       */\r\n      const storeUIOptions = {\r\n         subscribe: writableUIOptions.subscribe,\r\n\r\n         headerButtons: derived(writableUIOptions, ($options, set) => set($options.headerButtons)),\r\n         minimized: derived(writableUIOptions, ($options, set) => set($options.minimized))\r\n      };\r\n\r\n      Object.freeze(storeUIOptions);\r\n\r\n      // Initialize the store with options set in the Application constructor.\r\n      this.#storeUIOptions = storeUIOptions;\r\n   }\r\n\r\n   /**\r\n    * Registers local store subscriptions for app options. `popOut` controls registering this app with `ui.windows`.\r\n    * `zIndex` controls the z-index style of the element root.\r\n    *\r\n    * @see SvelteApplication._injectHTML\r\n    */\r\n   #storesSubscribe()\r\n   {\r\n      // Register local subscriptions.\r\n      this.#storeUnsubscribe.push(this.#storeAppOptions.popOut.subscribe((value) =>\r\n      {\r\n         if (value && this.rendered)\r\n         {\r\n            ui.windows[this.appId] = this;\r\n         }\r\n         else\r\n         {\r\n            delete ui.windows[this.appId];\r\n         }\r\n      }));\r\n\r\n      // Handles directly updating the element root `z-index` style when `zIndex` changes.\r\n      this.#storeUnsubscribe.push(this.#storeAppOptions.zIndex.subscribe((value) =>\r\n      {\r\n         if (this._element !== null) { this._element[0].style.zIndex = value; }\r\n      }));\r\n   }\r\n\r\n   /**\r\n    * Unsubscribes from any locally monitored stores.\r\n    *\r\n    * @see SvelteApplication.close\r\n    */\r\n   #storesUnsubscribe()\r\n   {\r\n      this.#storeUnsubscribe.forEach((unsubscribe) => unsubscribe());\r\n      this.#storeUnsubscribe = [];\r\n   }\r\n\r\n   /**\r\n    * Updates the UI Options store with the current header buttons. You may dynamically add / remove header buttons\r\n    * if using an application shell Svelte component. In either overriding `_getHeaderButtons` or responding to the\r\n    * Hooks fired return a new button array and the uiOptions store is updated and the application shell will render\r\n    * the new buttons.\r\n    *\r\n    * Optionally you can set in the Foundry app options `headerButtonNoLabel` to true and labels will be removed from\r\n    * the header buttons.\r\n    */\r\n   updateHeaderButtons()\r\n   {\r\n      const buttons = this._getHeaderButtons();\r\n\r\n      // Remove labels if this.options.headerButtonNoLabel is true;\r\n      if (typeof this.options.headerButtonNoLabel === 'boolean' && this.options.headerButtonNoLabel)\r\n      {\r\n         for (const button of buttons) { button.label = void 0; }\r\n      }\r\n\r\n      this.#storeUIOptionsUpdate((options) =>\r\n      {\r\n         options.headerButtons = buttons;\r\n         return options;\r\n      });\r\n   }\r\n}\r\n\r\n/**\r\n * Instantiates and attaches a Svelte component to the main inserted HTML.\r\n *\r\n * @param {SvelteApplication} app - The application\r\n *\r\n * @param {JQuery}            html - The inserted HTML.\r\n *\r\n * @param {object}            config - Svelte component options\r\n *\r\n * @param {StoreAppOptions}   storeAppOptions - Svelte store for app options.\r\n *\r\n * @param {StoreUIOptions}    storeUIOptions - Svelte store for UI options.\r\n *\r\n * @returns {object} The config + instantiated Svelte component.\r\n */\r\nfunction s_LOAD_CONFIG(app, html, config, storeAppOptions, storeUIOptions)\r\n{\r\n   const svelteOptions = typeof config.options === 'object' ? config.options : {};\r\n\r\n   // TODO EVALUATE; COMMENTED OUT WHILE WORKING ON HandlebarsApplication.\r\n   // if (typeof app.template === 'string' && typeof config.target !== 'string')\r\n   // {\r\n   //    throw new TypeError(\r\n   //     `SvelteApplication - s_LOAD_CONFIG - Template defined and target selector not a string for config:\\n${\r\n   //      JSON.stringify(config)}`);\r\n   // }\r\n\r\n   let target;\r\n\r\n   if (config.target instanceof HTMLElement)       // A specific HTMLElement to append Svelte component.\r\n   {\r\n      target = config.target;\r\n   }\r\n   else if (typeof config.target === 'string')     // A string target defines a selector to find in existing HTML.\r\n   {\r\n      target = html.find(config.target).get(0);\r\n   }\r\n   else                                            // No target defined, create a document fragment.\r\n   {\r\n      target = document.createDocumentFragment();\r\n   }\r\n\r\n   if (target === void 0)\r\n   {\r\n      throw new Error(\r\n       `SvelteApplication - s_LOAD_CONFIG - could not find target selector: ${config.target} for config:\\n${\r\n        JSON.stringify(config)}`);\r\n   }\r\n\r\n   const SvelteComponent = config.class;\r\n\r\n   const svelteConfig = parseSvelteConfig({ ...config, target }, app);\r\n\r\n   const externalContext = svelteConfig.context.get('external');\r\n\r\n   // Inject the Foundry application instance as a Svelte prop.\r\n   externalContext.foundryApp = app;\r\n\r\n   // Always inject the appOptions and uiOptions stores.\r\n   externalContext.storeAppOptions = storeAppOptions;\r\n   externalContext.storeUIOptions = storeUIOptions;\r\n\r\n   let eventbus;\r\n\r\n   // Potentially inject any TyphonJS eventbus and track the proxy in the SvelteData instance.\r\n   if (typeof app._eventbus === 'object' && typeof app._eventbus.createProxy === 'function')\r\n   {\r\n      eventbus = app._eventbus.createProxy();\r\n      externalContext.eventbus = eventbus;\r\n   }\r\n\r\n   // Create the Svelte component.\r\n   const component = new SvelteComponent(svelteConfig);\r\n\r\n   // Set any eventbus to the config.\r\n   svelteConfig.eventbus = eventbus;\r\n\r\n   let element;\r\n\r\n   // We can directly get the root element from components which follow the application store contract.\r\n   if (isApplicationShell(component))\r\n   {\r\n      element = component.elementRoot;\r\n   }\r\n\r\n   // Detect if target is a synthesized DocumentFragment with an child element. Child elements will be present\r\n   // if the Svelte component mounts and renders initial content into the document fragment.\r\n   if (config.target instanceof DocumentFragment && target.firstElementChild)\r\n   {\r\n      if (element === void 0) { element = target.firstElementChild; }\r\n      html.append(target);\r\n   }\r\n   else if (config.target instanceof HTMLElement && element === void 0)\r\n   {\r\n      if (config.target instanceof HTMLElement && typeof svelteOptions.selectorElement !== 'string')\r\n      {\r\n         throw new Error(\r\n          `SvelteApplication - s_LOAD_CONFIG - HTMLElement target with no 'selectorElement' defined for config:\\n${\r\n           JSON.stringify(config)}`);\r\n      }\r\n\r\n      // The target is an HTMLElement so find the Application element from `selectorElement` option.\r\n      element = target.querySelector(svelteOptions.selectorElement);\r\n\r\n      if (element === null || element === void 0)\r\n      {\r\n         throw new Error(\r\n          `SvelteApplication - s_LOAD_CONFIG - HTMLElement target - could not find 'selectorElement' for config:\\n${\r\n           JSON.stringify(config)}`);\r\n      }\r\n   }\r\n\r\n   // If the configuration / original target is an HTML element then do not inject HTML.\r\n   const injectHTML = !(config.target instanceof HTMLElement);\r\n\r\n   const result = { config: svelteConfig, component, element, injectHTML };\r\n\r\n   Object.freeze(result);\r\n\r\n   return result;\r\n}","import { ApplicationShell }      from '@typhonjs-fvtt/svelte/component';\r\n\r\nimport { SvelteFormApplication } from './SvelteFormApplication';\r\n\r\nexport class HandlebarsFormApplication extends SvelteFormApplication\r\n{\r\n   /**\r\n    * Temporarily holds the original popOut value when rendering.\r\n    *\r\n    * @type {boolean}\r\n    */\r\n   #orignalPopOut;\r\n\r\n   /**\r\n    * @inheritDoc\r\n    */\r\n   constructor(object, options)\r\n   {\r\n      super(object, options);\r\n\r\n      if (this.popOut)\r\n      {\r\n         this.options.svelte = foundry.utils.mergeObject(typeof this.options.svelte === 'object' ?\r\n          this.options.svelte : {}, {\r\n            class: ApplicationShell,\r\n            intro: true,\r\n            target: document.body\r\n         });\r\n      }\r\n   }\r\n\r\n   /**\r\n    * Temporarily set popOut to false to only render inner HTML. This inner HTML will be appended to the content area\r\n    * of ApplicationShell if the original popOut value is true.\r\n    *\r\n    * @inheritDoc\r\n    */\r\n   async _render(force, options)\r\n   {\r\n      this.#orignalPopOut = this.options.popOut;\r\n      this.options.popOut = false;\r\n      await super._render(force, options);\r\n      this.options.popOut = this.#orignalPopOut;\r\n   }\r\n\r\n   /**\r\n    * Duplicates the FormApplication `_renderInner` method as SvelteFormApplication does not defer to super\r\n    * implementations.\r\n    *\r\n    * @inheritDoc\r\n    */\r\n   async _renderInner(data)\r\n   {\r\n      const html = await super._renderInner(data);\r\n\r\n      this.form = html.filter((i, el) => el instanceof HTMLFormElement)[0];\r\n      if (!this.form) { this.form = html.find('form')[0]; }\r\n\r\n      return html;\r\n   }\r\n\r\n   _injectHTML(html)\r\n   {\r\n      // Mounts any Svelte components.\r\n      super._injectHTML(html);\r\n\r\n      // Appends inner HTML content to application shell content element.\r\n      if (this.svelte?.applicationShell?.elementContent)\r\n      {\r\n         this.svelte.applicationShell.elementContent.appendChild(...html);\r\n      }\r\n   }\r\n\r\n   /**\r\n    * Override replacing HTML as Svelte components control the rendering process. Only potentially change the outer\r\n    * application frame / title for pop-out applications.\r\n    *\r\n    * @override\r\n    * @inheritDoc\r\n    */\r\n   _replaceHTML(element, html)  // eslint-disable-line no-unused-vars\r\n   {\r\n      if (!element.length) { return; }\r\n\r\n      super._replaceHTML(element, html);\r\n\r\n      if (this.svelte?.applicationShell?.elementContent)\r\n      {\r\n         const elementContent = this.svelte.applicationShell.elementContent;\r\n\r\n         // Remove existing children.\r\n         while (elementContent.firstChild && !elementContent.lastChild.remove()) {} // eslint-disable-line no-empty\r\n\r\n         elementContent.appendChild(...html);\r\n\r\n         // Use the setter from `SvelteFormApplication` to set the title store.\r\n         this.title = this.title; // eslint-disable-line no-self-assign\r\n      }\r\n      else\r\n      {\r\n         element.replaceWith(html);\r\n         this._element = html;\r\n         this.elementTarget = html[0];\r\n      }\r\n   }\r\n}"],"names":["HandlebarsApplication","SvelteApplication","constructor","options","popOut","svelte","foundry","utils","mergeObject","class","ApplicationShell","intro","target","document","body","_render","force","_injectHTML","html","applicationShell","elementContent","appendChild","_replaceHTML","element","length","firstChild","lastChild","remove","title","replaceWith","_element","elementTarget","GetSvelteData","applicationShellHolder","svelteData","_classPrivateFieldGet","component","index","data","componentEntries","cntr","componentValues","dataEntries","entries","dataValues","values","Object","freeze","SvelteFormApplication","FormApplication","object","defaultOptions","draggable","headerButtonNoLabel","jqueryCloseAnimation","zIndex","resizable","setOptions","content","HTMLElement","TypeError","Number","isInteger","close","states","Application","RENDER_STATES","RENDERED","ERROR","includes","_state","CLOSING","el","$","CLOSED","cls","_getInheritanceChain","Hooks","call","name","animate","style","minHeight","Promise","resolve","slideUp","svelteDestroyPromises","entry","push","outroAndDestroy","eventbus","config","off","all","ui","windows","appId","_minimized","_scrollPositions","storeOptions","minimized","getOptions","accessor","defaultValue","safeAccess","Array","isArray","Error","updateHeaderButtons","svelteConfig","s_LOAD_CONFIG","isApplicationShell","JSON","stringify","isDocumentFragment","DocumentFragment","injectHTML","elementRoot","hasGetter","selectorTarget","find","setTimeout","onSvelteMount","maximize","minimize","rendered","mergeOptions","instanceOptions","_renderInner","template","renderTemplate","createDocumentFragment","value","success","safeSet","setPosition","left","top","width","height","scale","noHeight","noWidth","currentPosition","position","styles","globalThis","getComputedStyle","tarW","offsetWidth","minW","parseInt","minWidth","MIN_WINDOW_WIDTH","maxW","maxWidth","innerWidth","Math","clamped","tarH","offsetHeight","minH","MIN_WINDOW_HEIGHT","maxH","maxHeight","innerHeight","isFinite","tarL","maxL","max","tarT","maxT","transform","buttons","_getHeaderButtons","button","label","headerButtons","writtableAppOptions","writable","update","storeAppOptions","subscribe","derived","$options","set","minimizable","writableUIOptions","storeUIOptions","forEach","unsubscribe","app","svelteOptions","get","SvelteComponent","parseSvelteConfig","externalContext","context","foundryApp","_eventbus","createProxy","firstElementChild","append","selectorElement","querySelector","result","HandlebarsFormApplication","form","filter","i","HTMLFormElement"],"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"}